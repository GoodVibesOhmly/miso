{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "30": "contracts/Utils/BoringBatchable.sol",
    "36": "contracts/interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Utils/BoringBatchable.sol",
    "exportedSymbols": {
      "BaseBoringBatchable": [
        14298
      ],
      "BoringBatchable": [
        14334
      ]
    },
    "id": 14335,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14187,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:30"
      },
      {
        "id": 14188,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:30"
      },
      {
        "absolutePath": "contracts/Utils/BoringERC20.sol",
        "file": "./BoringERC20.sol",
        "id": 14189,
        "nodeType": "ImportDirective",
        "scope": 14335,
        "sourceUnit": 14571,
        "src": "189:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14298,
        "linearizedBaseContracts": [
          14298
        ],
        "name": "BaseBoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14213,
              "nodeType": "Block",
              "src": "527:400:30",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14197,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14192,
                        "src": "652:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 14198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "652:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3638",
                      "id": 14199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "673:2:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "652:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14203,
                  "nodeType": "IfStatement",
                  "src": "648:67:30",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 14201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "684:31:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 14196,
                    "id": 14202,
                    "nodeType": "Return",
                    "src": "677:38:30"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "735:95:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "783:37:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "802:11:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:4:30",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "798:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "798:22:30"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "783:11:30"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 14192,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "783:11:30",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14192,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "802:11:30",
                      "valueSize": 1
                    }
                  ],
                  "id": 14204,
                  "nodeType": "InlineAssembly",
                  "src": "726:104:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14207,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14192,
                        "src": "857:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 14209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "871:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 14208,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "871:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 14210,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "870:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14205,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "846:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 14206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "846:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 14211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:33:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 14196,
                  "id": 14212,
                  "nodeType": "Return",
                  "src": "839:40:30"
                }
              ]
            },
            "documentation": {
              "id": 14190,
              "nodeType": "StructuredDocumentation",
              "src": "253:182:30",
              "text": "@dev Helper function to extract a useful revert message from a failed call.\n If the returned data is malformed or not correctly abi encoded then this call can fail itself."
            },
            "id": 14214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRevertMsg",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14192,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14214,
                  "src": "463:24:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14191,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:26:30"
            },
            "returnParameters": {
              "id": 14196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14195,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14214,
                  "src": "512:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:15:30"
            },
            "scope": 14298,
            "src": "440:487:30",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14296,
              "nodeType": "Block",
              "src": "1889:388:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14229,
                      "name": "successes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14224,
                      "src": "1899:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14233,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14218,
                            "src": "1922:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 14234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1922:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 14232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1911:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 14230,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1915:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 14231,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1915:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 14235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1911:24:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "1899:36:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 14237,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:36:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14238,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14227,
                      "src": "1945:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14242,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14218,
                            "src": "1967:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 14243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1967:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 14241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1955:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 14239,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1959:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 14240,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1959:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 14244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1955:25:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "1945:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 14246,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:35:30"
                },
                {
                  "body": {
                    "id": 14294,
                    "nodeType": "Block",
                    "src": "2033:238:30",
                    "statements": [
                      {
                        "assignments": [
                          14259,
                          14261
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 14259,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 14294,
                            "src": "2048:12:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 14258,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2048:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 14261,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 14294,
                            "src": "2062:19:30",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 14260,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2062:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 14271,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 14267,
                                "name": "calls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14218,
                                "src": "2112:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 14269,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 14268,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14248,
                                "src": "2118:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2112:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14264,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2093:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$14298",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$14298",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                ],
                                "id": 14263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2085:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14262,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2085:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 14265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2085:13:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 14266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2085:26:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 14270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:36:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2047:74:30"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 14276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 14273,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14259,
                                "src": "2143:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 14275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2154:13:30",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 14274,
                                  "name": "revertOnFail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14220,
                                  "src": "2155:12:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2143:24:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14278,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14261,
                                  "src": "2183:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14277,
                                "name": "_getRevertMsg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14214,
                                "src": "2169:13:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 14279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2169:21:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 14272,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2135:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 14280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:56:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14281,
                        "nodeType": "ExpressionStatement",
                        "src": "2135:56:30"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 14282,
                              "name": "successes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14224,
                              "src": "2205:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 14284,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 14283,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14248,
                              "src": "2215:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2205:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 14285,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14259,
                            "src": "2220:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2205:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 14287,
                        "nodeType": "ExpressionStatement",
                        "src": "2205:22:30"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 14288,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14227,
                              "src": "2241:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 14290,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 14289,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14248,
                              "src": "2249:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2241:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 14291,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14261,
                            "src": "2254:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2241:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 14293,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:19:30"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 14251,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14248,
                      "src": "2010:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14252,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14218,
                        "src": "2014:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 14253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2014:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2010:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14295,
                  "initializationExpression": {
                    "assignments": [
                      14248
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 14248,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 14295,
                        "src": "1995:9:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 14247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 14250,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 14249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2007:1:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1995:13:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 14256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2028:3:30",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 14255,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14248,
                        "src": "2028:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14257,
                    "nodeType": "ExpressionStatement",
                    "src": "2028:3:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "1990:281:30"
                }
              ]
            },
            "documentation": {
              "id": 14215,
              "nodeType": "StructuredDocumentation",
              "src": "933:419:30",
              "text": "@notice Allows batched call to self (this contract).\n @param calls An array of inputs for each call.\n @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n @return results An array with the returned data of each function call, mapped one-to-one to `calls`."
            },
            "functionSelector": "d2423b51",
            "id": 14297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14218,
                  "mutability": "mutable",
                  "name": "calls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14297,
                  "src": "1771:22:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14216,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1771:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 14217,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1771:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14220,
                  "mutability": "mutable",
                  "name": "revertOnFail",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14297,
                  "src": "1795:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:43:30"
            },
            "returnParameters": {
              "id": 14228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14224,
                  "mutability": "mutable",
                  "name": "successes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14297,
                  "src": "1840:23:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14222,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1840:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 14223,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1840:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14227,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14297,
                  "src": "1865:22:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14225,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1865:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 14226,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1865:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1839:49:30"
            },
            "scope": 14298,
            "src": "1756:521:30",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14335,
        "src": "218:2061:30"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14299,
              "name": "BaseBoringBatchable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14298,
              "src": "2309:19:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseBoringBatchable_$14298",
                "typeString": "contract BaseBoringBatchable"
              }
            },
            "id": 14300,
            "nodeType": "InheritanceSpecifier",
            "src": "2309:19:30"
          }
        ],
        "contractDependencies": [
          14298
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14334,
        "linearizedBaseContracts": [
          14334,
          14298
        ],
        "name": "BoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14332,
              "nodeType": "Block",
              "src": "2866:66:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14323,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14305,
                        "src": "2889:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14324,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14307,
                        "src": "2895:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14325,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14309,
                        "src": "2899:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14326,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14311,
                        "src": "2907:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14327,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14313,
                        "src": "2917:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14328,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14315,
                        "src": "2920:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14329,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14317,
                        "src": "2923:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14320,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14303,
                        "src": "2876:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15619",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 14322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15618,
                      "src": "2876:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 14330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:49:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14331,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:49:30"
                }
              ]
            },
            "documentation": {
              "id": 14301,
              "nodeType": "StructuredDocumentation",
              "src": "2335:97:30",
              "text": "@notice Call wrapper that performs `ERC20.permit` on `token`.\n Lookup `IERC20.permit`."
            },
            "functionSelector": "7c516e94",
            "id": 14333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14303,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2693:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$15619",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14302,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15619,
                    "src": "2693:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$15619",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14305,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2715:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14307,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2737:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14309,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2757:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14311,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2781:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14313,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2807:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14312,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14315,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2824:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14314,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14317,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14333,
                  "src": "2843:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14316,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2683:175:30"
            },
            "returnParameters": {
              "id": 14319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:30"
            },
            "scope": 14334,
            "src": "2663:269:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14335,
        "src": "2281:653:30"
      }
    ],
    "src": "1:2933:30"
  },
  "bytecode": "608060405234801561001057600080fd5b5061069b806100206000396000f3fe6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610375565b61007a565b005b61006361005e3660046102f1565b6100ee565b604051610071929190610514565b60405180910390f35b60405163d505accf60e01b81526001600160a01b0389169063d505accf906100b2908a908a908a908a908a908a908a906004016104d3565b600060405180830381600087803b1580156100cc57600080fd5b505af11580156100e0573d6000803e3d6000fd5b505050505050505050505050565b6060808367ffffffffffffffff8111801561010857600080fd5b50604051908082528060200260200182016040528015610132578160200160208202803683370190505b5091508367ffffffffffffffff8111801561014c57600080fd5b5060405190808252806020026020018201604052801561018057816020015b606081526020019060019003908161016b5790505b50905060005b8481101561028057600060603088888581811061019f57fe5b90506020028101906101b191906105c8565b6040516101bf9291906104c3565b600060405180830381855af49150503d80600081146101fa576040519150601f19603f3d011682016040523d82523d6000602084013e6101ff565b606091505b5091509150818061020e575085155b61021782610289565b9061023e5760405162461bcd60e51b815260040161023591906105ae565b60405180910390fd5b508185848151811061024c57fe5b6020026020010190151590811515815250508084848151811061026b57fe5b60209081029190910101525050600101610186565b50935093915050565b60606044825110156102cf575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526102ec565b600482019150818060200190518101906102e991906103fc565b90505b919050565b600080600060408486031215610305578283fd5b833567ffffffffffffffff8082111561031c578485fd5b818601915086601f83011261032f578485fd5b81358181111561033d578586fd5b8760208083028501011115610350578586fd5b60209283019550935050840135801515811461036a578182fd5b809150509250925092565b600080600080600080600080610100898b031215610391578384fd5b883561039c8161064d565b975060208901356103ac8161064d565b965060408901356103bc8161064d565b9550606089013594506080890135935060a089013560ff811681146103df578384fd5b979a969950949793969295929450505060c08201359160e0013590565b60006020828403121561040d578081fd5b815167ffffffffffffffff80821115610424578283fd5b818401915084601f830112610437578283fd5b815181811115610445578384fd5b604051601f8201601f191681016020018381118282101715610465578586fd5b60405281815283820160200187101561047c578485fd5b61048d82602083016020870161061d565b9695505050505050565b600081518084526104af81602086016020860161061d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b604080825283519082018190526000906020906060840190828701845b8281101561054f578151151584529284019290840190600101610531565b505050838103828501528085516105668184610614565b91508192508381028201848801865b8381101561059f57858303855261058d838351610497565b94870194925090860190600101610575565b50909998505050505050505050565b6000602082526105c16020830184610497565b9392505050565b6000808335601e198436030181126105de578283fd5b83018035915067ffffffffffffffff8211156105f8578283fd5b60200191503681900382131561060d57600080fd5b9250929050565b90815260200190565b60005b83811015610638578181015183820152602001610620565b83811115610647576000848401525b50505050565b6001600160a01b038116811461066257600080fd5b5056fea26469706673582212209ce95803c11867a54bd894893188d64a509b89f1d6de92c4188bbaa8644b4a3b64736f6c634300060c0033",
  "bytecodeSha1": "dd8d9c6793edc8890e27540f11be3e745ba7c13c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "BoringBatchable",
  "coverageMap": {
    "branches": {
      "30": {
        "BaseBoringBatchable._getRevertMsg": {
          "11": [
            652,
            675,
            false
          ]
        },
        "BaseBoringBatchable.batch": {
          "9": [
            2143,
            2150,
            true
          ],
          "10": [
            2155,
            2167,
            true
          ]
        }
      },
      "36": {}
    },
    "statements": {
      "30": {
        "BaseBoringBatchable._getRevertMsg": {
          "7": [
            677,
            715
          ],
          "8": [
            839,
            879
          ]
        },
        "BaseBoringBatchable.batch": {
          "1": [
            1899,
            1935
          ],
          "2": [
            1945,
            1980
          ],
          "3": [
            2135,
            2191
          ],
          "4": [
            2205,
            2227
          ],
          "5": [
            2241,
            2260
          ],
          "6": [
            2028,
            2031
          ]
        },
        "BoringBatchable.permitToken": {
          "0": [
            2876,
            2925
          ]
        }
      },
      "36": {}
    }
  },
  "dependencies": [
    "BaseBoringBatchable",
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610375565b61007a565b005b61006361005e3660046102f1565b6100ee565b604051610071929190610514565b60405180910390f35b60405163d505accf60e01b81526001600160a01b0389169063d505accf906100b2908a908a908a908a908a908a908a906004016104d3565b600060405180830381600087803b1580156100cc57600080fd5b505af11580156100e0573d6000803e3d6000fd5b505050505050505050505050565b6060808367ffffffffffffffff8111801561010857600080fd5b50604051908082528060200260200182016040528015610132578160200160208202803683370190505b5091508367ffffffffffffffff8111801561014c57600080fd5b5060405190808252806020026020018201604052801561018057816020015b606081526020019060019003908161016b5790505b50905060005b8481101561028057600060603088888581811061019f57fe5b90506020028101906101b191906105c8565b6040516101bf9291906104c3565b600060405180830381855af49150503d80600081146101fa576040519150601f19603f3d011682016040523d82523d6000602084013e6101ff565b606091505b5091509150818061020e575085155b61021782610289565b9061023e5760405162461bcd60e51b815260040161023591906105ae565b60405180910390fd5b508185848151811061024c57fe5b6020026020010190151590811515815250508084848151811061026b57fe5b60209081029190910101525050600101610186565b50935093915050565b60606044825110156102cf575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526102ec565b600482019150818060200190518101906102e991906103fc565b90505b919050565b600080600060408486031215610305578283fd5b833567ffffffffffffffff8082111561031c578485fd5b818601915086601f83011261032f578485fd5b81358181111561033d578586fd5b8760208083028501011115610350578586fd5b60209283019550935050840135801515811461036a578182fd5b809150509250925092565b600080600080600080600080610100898b031215610391578384fd5b883561039c8161064d565b975060208901356103ac8161064d565b965060408901356103bc8161064d565b9550606089013594506080890135935060a089013560ff811681146103df578384fd5b979a969950949793969295929450505060c08201359160e0013590565b60006020828403121561040d578081fd5b815167ffffffffffffffff80821115610424578283fd5b818401915084601f830112610437578283fd5b815181811115610445578384fd5b604051601f8201601f191681016020018381118282101715610465578586fd5b60405281815283820160200187101561047c578485fd5b61048d82602083016020870161061d565b9695505050505050565b600081518084526104af81602086016020860161061d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b604080825283519082018190526000906020906060840190828701845b8281101561054f578151151584529284019290840190600101610531565b505050838103828501528085516105668184610614565b91508192508381028201848801865b8381101561059f57858303855261058d838351610497565b94870194925090860190600101610575565b50909998505050505050505050565b6000602082526105c16020830184610497565b9392505050565b6000808335601e198436030181126105de578283fd5b83018035915067ffffffffffffffff8211156105f8578283fd5b60200191503681900382131561060d57600080fd5b9250929050565b90815260200190565b60005b83811015610638578181015183820152602001610620565b83811115610647576000848401525b50505050565b6001600160a01b038116811461066257600080fd5b5056fea26469706673582212209ce95803c11867a54bd894893188d64a509b89f1d6de92c4188bbaa8644b4a3b64736f6c634300060c0033",
  "deployedSourceMap": "2281:653:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;2663:269;;;;;;;;;;-1:-1:-1;2663:269:30;;;;;:::i;:::-;;:::i;:::-;;1756:521;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2663:269;2876:49;;-1:-1:-1;;;2876:49:30;;-1:-1:-1;;;;;2876:12:30;;;;;:49;;2889:4;;2895:2;;2899:6;;2907:8;;2917:1;;2920;;2923;;2876:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:269;;;;;;;;:::o;1756:521::-;1840:23;;1922:5;1911:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1911:24:30;-1:-1:-1;1899:36:30;-1:-1:-1;1967:5:30;1955:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:35;;1995:9;1990:281;2010:16;;;1990:281;;;2048:12;2062:19;2093:4;2112:5;;2118:1;2112:8;;;;;;;;;;;;;;;;;;:::i;:::-;2085:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:74;;;;2143:7;:24;;;;2155:12;2154:13;2143:24;2169:21;2183:6;2169:13;:21::i;:::-;2135:56;;;;;-1:-1:-1;;;2135:56:30;;;;;;;;:::i;:::-;;;;;;;;;;2220:7;2205:9;2215:1;2205:12;;;;;;;;;;;;;:22;;;;;;;;;;;2254:6;2241:7;2249:1;2241:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;2028:3:30;;1990:281;;;;1756:521;;;;;;:::o;440:487::-;512:13;673:2;652:11;:18;:23;648:67;;;-1:-1:-1;677:38:30;;;;;;;;;;;;;;;;;;;648:67;815:4;802:11;798:22;783:37;;857:11;846:33;;;;;;;;;;;;:::i;:::-;839:40;;440:487;;;;:::o;1689:538:-1:-;;;;1853:2;1841:9;1832:7;1828:23;1824:32;1821:2;;;-1:-1;;1859:12;1821:2;1917:17;1904:31;1955:18;;1947:6;1944:30;1941:2;;;-1:-1;;1977:12;1941:2;2089:6;2078:9;2074:22;;;299:3;292:4;284:6;280:17;276:27;266:2;;-1:-1;;307:12;266:2;350:6;337:20;1955:18;369:6;366:30;363:2;;;-1:-1;;399:12;363:2;494:3;443:4;;478:6;474:17;435:6;460:32;;457:41;454:2;;;-1:-1;;501:12;454:2;443:4;431:17;;;;-1:-1;1997:109;-1:-1;;2179:22;;593:20;12791:13;;12784:21;14021:32;;14011:2;;-1:-1;;14057:12;14011:2;2151:60;;;;1815:412;;;;;:::o;2234:1149::-;;;;;;;;;2471:3;2459:9;2450:7;2446:23;2442:33;2439:2;;;-1:-1;;2478:12;2439:2;893:6;880:20;905:49;948:5;905:49;:::i;:::-;2530:79;-1:-1;2646:2;2685:22;;72:20;97:33;72:20;97:33;:::i;:::-;2654:63;-1:-1;2754:2;2793:22;;72:20;97:33;72:20;97:33;:::i;:::-;2762:63;-1:-1;2862:2;2901:22;;1486:20;;-1:-1;2970:3;3010:22;;1486:20;;-1:-1;3079:3;3117:22;;1621:20;13288:4;13277:16;;14544:33;;14534:2;;-1:-1;;14581:12;14534:2;2433:950;;;;-1:-1;2433:950;;;;;;3088:61;;-1:-1;;;3186:3;3226:22;;727:20;;3295:3;3335:22;727:20;;2433:950::o;3390:362::-;;3515:2;3503:9;3494:7;3490:23;3486:32;3483:2;;;-1:-1;;3521:12;3483:2;3572:17;3566:24;3610:18;;3602:6;3599:30;3596:2;;;-1:-1;;3632:12;3596:2;3719:6;3708:9;3704:22;;;1080:3;1073:4;1065:6;1061:17;1057:27;1047:2;;-1:-1;;1088:12;1047:2;1128:6;1122:13;3610:18;10459:6;10456:30;10453:2;;;-1:-1;;10489:12;10453:2;10122;10116:9;10562;10543:17;;-1:-1;;10539:33;10148:17;;3515:2;10148:17;10208:34;;;10244:22;;;10205:62;10202:2;;;-1:-1;;10270:12;10202:2;10122;10289:22;1221:21;;;1321:16;;;3515:2;1321:16;1318:25;-1:-1;1315:2;;;-1:-1;;1346:12;1315:2;1366:39;1398:6;3515:2;1297:5;1293:16;3515:2;1263:6;1259:17;1366:39;:::i;:::-;3652:84;3477:275;-1:-1;;;;;;3477:275::o;6463:323::-;;6595:5;11074:12;11889:6;11884:3;11877:19;6678:52;6723:6;11926:4;11921:3;11917:14;11926:4;6704:5;6700:16;6678:52;:::i;:::-;10562:9;13804:14;-1:-1;;13800:28;6742:39;;;;11926:4;6742:39;;6543:243;-1:-1;;6543:243::o;7381:291::-;;13387:6;13382:3;13377;13364:30;13425:16;;13418:27;;;13425:16;7525:147;-1:-1;7525:147::o;7679:884::-;-1:-1;;;;;13072:54;;;4198:37;;13072:54;;;;8135:2;8120:18;;4198:37;8218:2;8203:18;;6073:37;;;;8301:2;8286:18;;6073:37;;;;13288:4;13277:16;8380:3;8365:19;;7334:35;13083:42;8449:19;;6073:37;8548:3;8533:19;;6073:37;;;;7970:3;7955:19;;7941:622::o;8570:653::-;8837:2;8851:47;;;11074:12;;8822:18;;;11877:19;;;8570:653;;11926:4;;11917:14;;;;10764;;;8570:653;4665:251;4690:6;4687:1;4684:13;4665:251;;;4751:13;;12791;12784:21;5956:34;;3901:14;;;;11611;;;;4712:1;4705:9;4665:251;;;4669:14;;;9062:9;9056:4;9052:20;11926:4;9036:9;9032:18;9025:48;9087:126;5193:5;11074:12;5212:95;5300:6;5295:3;5212:95;:::i;:::-;5205:102;;;;;11926:4;5364:6;5360:17;5355:3;5351:27;11926:4;5458:5;10764:14;-1:-1;5497:357;5522:6;5519:1;5516:13;5497:357;;;5584:9;5578:4;5574:20;5569:3;5562:33;4049:64;4109:3;5629:6;5623:13;4049:64;:::i;:::-;5833:14;;;;5643:90;-1:-1;11611:14;;;;4712:1;5537:9;5497:357;;;-1:-1;9079:134;;8808:415;-1:-1;;;;;;;;;8808:415::o;9230:310::-;;9377:2;9398:17;9391:47;9452:78;9377:2;9366:9;9362:18;9516:6;9452:78;:::i;:::-;9444:86;9348:192;-1:-1;;;9348:192::o;9547:506::-;;;9682:11;9669:25;9733:48;;9757:8;9741:14;9737:29;9733:48;9713:18;9709:73;9699:2;;-1:-1;;9786:12;9699:2;9813:33;;9867:18;;;-1:-1;9905:18;9894:30;;9891:2;;;-1:-1;;9927:12;9891:2;9772:4;9955:13;;-1:-1;9741:14;9987:38;;;9977:49;;9974:2;;;10039:1;;10029:12;9974:2;9637:416;;;;;:::o;11762:175::-;11877:19;;;11926:4;11917:14;;11870:67::o;13460:268::-;13525:1;13532:101;13546:6;13543:1;13540:13;13532:101;;;13613:11;;;13607:18;13594:11;;;13587:39;13568:2;13561:10;13532:101;;;13648:6;13645:1;13642:13;13639:2;;;13525:1;13704:6;13699:3;13695:16;13688:27;13639:2;;13509:219;;;:::o;13841:117::-;-1:-1;;;;;13072:54;;13900:35;;13890:2;;13949:1;;13939:12;13890:2;13884:74;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract).",
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        },
        "returns": {
          "results": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
          "successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
        }
      },
      "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`."
      }
    },
    "version": 1
  },
  "offset": [
    2281,
    2934
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C516E94 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F1 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP3 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0xB2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x19F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP3 SWAP2 SWAP1 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 PUSH2 0x20E JUMPI POP DUP6 ISZERO JUMPDEST PUSH2 0x217 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x26B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x186 JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x2CF JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x305 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x31C JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x33D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x350 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x36A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x391 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x39C DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3AC DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3BC DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3DF JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x424 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x437 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x445 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x465 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x47C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x48D DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x61D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4AF DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x61D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x54F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x531 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x566 DUP2 DUP5 PUSH2 0x614 JUMP JUMPDEST SWAP2 POP DUP2 SWAP3 POP DUP4 DUP2 MUL DUP3 ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x59F JUMPI DUP6 DUP4 SUB DUP6 MSTORE PUSH2 0x58D DUP4 DUP4 MLOAD PUSH2 0x497 JUMP JUMPDEST SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x575 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x5C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x497 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x5DE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5F8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x638 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x620 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xE9 PC SUB 0xC1 XOR PUSH8 0xA54BD894893188D6 0x4A POP SWAP12 DUP10 CALL 0xD6 0xDE SWAP3 0xC4 XOR DUP12 0xBA 0xA8 PUSH5 0x4B4A3B6473 PUSH16 0x6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "5": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "8": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "LT",
      "path": "30"
    },
    "9": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "13": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "CALLDATALOAD",
      "path": "30"
    },
    "16": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "SHR",
      "path": "30"
    },
    "19": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "30"
    },
    "20": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0x7C516E94"
    },
    "25": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "EQ",
      "path": "30"
    },
    "26": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "30": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "30"
    },
    "31": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xD2423B51"
    },
    "36": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "EQ",
      "path": "30"
    },
    "37": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50"
    },
    "40": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "41": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "42": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "30"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "REVERT",
      "path": "30"
    },
    "46": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "47": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "CALLVALUE",
      "path": "30"
    },
    "48": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "DUP1",
      "path": "30"
    },
    "49": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "50": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x3A"
    },
    "53": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "54": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "56": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "DUP1",
      "path": "30"
    },
    "57": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "REVERT",
      "path": "30"
    },
    "58": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "59": {
      "op": "POP"
    },
    "60": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4E"
    },
    "63": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x49"
    },
    "66": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "67": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "69": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x375"
    },
    "72": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "30"
    },
    "73": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "74": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x7A"
    },
    "77": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "30"
    },
    "78": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "79": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "STOP",
      "path": "30"
    },
    "80": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "81": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x63"
    },
    "84": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5E"
    },
    "87": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "88": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "90": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2F1"
    },
    "93": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "30"
    },
    "94": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "95": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xEE"
    },
    "98": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "30"
    },
    "99": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "100": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "102": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "103": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x71"
    },
    "106": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "107": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "108": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "109": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x514"
    },
    "112": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "30"
    },
    "113": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "114": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "116": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "117": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "DUP1",
      "path": "30"
    },
    "118": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "119": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SUB",
      "path": "30"
    },
    "120": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "121": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "RETURN",
      "path": "30"
    },
    "122": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "123": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 0,
      "value": "0x40"
    },
    "125": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "126": {
      "op": "PUSH4",
      "value": "0xD505ACCF"
    },
    "131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "133": {
      "op": "SHL"
    },
    "134": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP2",
      "path": "30"
    },
    "135": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "142": {
      "op": "SHL"
    },
    "143": {
      "op": "SUB"
    },
    "144": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP10",
      "path": "30"
    },
    "145": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "AND",
      "path": "30"
    },
    "146": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "147": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xD505ACCF"
    },
    "152": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "153": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xB2"
    },
    "156": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "157": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2889,
        2893
      ],
      "op": "DUP11",
      "path": "30"
    },
    "158": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2889,
        2893
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "159": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2895,
        2897
      ],
      "op": "DUP11",
      "path": "30"
    },
    "160": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2895,
        2897
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "161": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2899,
        2905
      ],
      "op": "DUP11",
      "path": "30"
    },
    "162": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2899,
        2905
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "163": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2907,
        2915
      ],
      "op": "DUP11",
      "path": "30"
    },
    "164": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2907,
        2915
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "165": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2917,
        2918
      ],
      "op": "DUP11",
      "path": "30"
    },
    "166": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2917,
        2918
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "167": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2920,
        2921
      ],
      "op": "DUP11",
      "path": "30"
    },
    "168": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2920,
        2921
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "169": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2923,
        2924
      ],
      "op": "DUP11",
      "path": "30"
    },
    "170": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2923,
        2924
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "171": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "173": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ADD",
      "path": "30"
    },
    "174": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4D3"
    },
    "177": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMP",
      "path": "30"
    },
    "178": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "179": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "181": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "183": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "184": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "185": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP4",
      "path": "30"
    },
    "186": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "SUB",
      "path": "30"
    },
    "187": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP2",
      "path": "30"
    },
    "188": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "190": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP8",
      "path": "30"
    },
    "191": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "192": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "EXTCODESIZE",
      "path": "30"
    },
    "193": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "194": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "195": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "196": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xCC"
    },
    "199": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "200": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "202": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "203": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "REVERT",
      "path": "30"
    },
    "204": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "205": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "30"
    },
    "206": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "GAS",
      "path": "30"
    },
    "207": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "CALL",
      "path": "30"
    },
    "208": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "209": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "210": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "211": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE0"
    },
    "214": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "215": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "216": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "218": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "30"
    },
    "219": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATACOPY",
      "path": "30"
    },
    "220": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "221": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "223": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "REVERT",
      "path": "30"
    },
    "224": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "225": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "30"
    },
    "226": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "30"
    },
    "227": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "30"
    },
    "228": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "30"
    },
    "229": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "230": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "231": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "232": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "233": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "234": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "235": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "236": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "30"
    },
    "237": {
      "fn": "BoringBatchable.permitToken",
      "jump": "o",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "30"
    },
    "238": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "239": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "241": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "DUP1",
      "path": "30"
    },
    "242": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1922,
        1927
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 1
    },
    "243": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "252": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "30"
    },
    "253": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "GT",
      "path": "30"
    },
    "254": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "255": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "256": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x108"
    },
    "259": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "260": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "262": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "263": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "REVERT",
      "path": "30"
    },
    "264": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "265": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "POP",
      "path": "30"
    },
    "266": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "268": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "269": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "270": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "271": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "30"
    },
    "272": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "273": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "274": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "276": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "30"
    },
    "277": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "279": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "30"
    },
    "280": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "30"
    },
    "281": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "30"
    },
    "282": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "284": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "285": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "286": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "287": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x132"
    },
    "290": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "291": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "30"
    },
    "292": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "294": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "30"
    },
    "295": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "297": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "30"
    },
    "298": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "30"
    },
    "299": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "30"
    },
    "300": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "301": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP4",
      "path": "30"
    },
    "302": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATACOPY",
      "path": "30"
    },
    "303": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "30"
    },
    "304": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "305": {
      "op": "POP"
    },
    "306": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1899,
        1935
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "309": {
      "op": "POP"
    },
    "310": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1967,
        1972
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 2
    },
    "311": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH8",
      "path": "30",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "320": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "30"
    },
    "321": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "GT",
      "path": "30"
    },
    "322": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "30"
    },
    "323": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "324": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x14C"
    },
    "327": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "328": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "330": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "30"
    },
    "331": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "REVERT",
      "path": "30"
    },
    "332": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "333": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "30"
    },
    "334": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "336": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "337": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "338": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "30"
    },
    "339": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "30"
    },
    "340": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "341": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "30"
    },
    "342": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "344": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MUL",
      "path": "30"
    },
    "345": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "347": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "30"
    },
    "348": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "30"
    },
    "349": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "30"
    },
    "350": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "352": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "353": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "30"
    },
    "354": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "355": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x180"
    },
    "358": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "359": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "30"
    },
    "360": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "362": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "30"
    },
    "363": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "364": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "366": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "30"
    },
    "367": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "368": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "370": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "30"
    },
    "371": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "372": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1"
    },
    "374": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "375": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SUB",
      "path": "30"
    },
    "376": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "377": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "30"
    },
    "378": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16B"
    },
    "381": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "382": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "383": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "30"
    },
    "384": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "385": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "30"
    },
    "386": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "387": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "POP",
      "path": "30"
    },
    "388": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1995,
        2004
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "390": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "391": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP5",
      "path": "30"
    },
    "392": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP2",
      "path": "30"
    },
    "393": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "LT",
      "path": "30"
    },
    "394": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "395": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x280"
    },
    "398": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "399": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2048,
        2060
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "401": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2062,
        2081
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "403": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2093,
        2097
      ],
      "op": "ADDRESS",
      "path": "30"
    },
    "404": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "30"
    },
    "405": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "30"
    },
    "406": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2118,
        2119
      ],
      "op": "DUP6",
      "path": "30"
    },
    "407": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "30"
    },
    "408": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "30"
    },
    "409": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "LT",
      "path": "30"
    },
    "410": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x19F"
    },
    "413": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "414": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "INVALID",
      "path": "30"
    },
    "415": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "416": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "417": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "POP",
      "path": "30"
    },
    "418": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "420": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "MUL",
      "path": "30"
    },
    "421": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "30"
    },
    "422": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "ADD",
      "path": "30"
    },
    "423": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "424": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1B1"
    },
    "427": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "428": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "429": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5C8"
    },
    "432": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMP",
      "path": "30"
    },
    "433": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "434": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "436": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "437": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1BF"
    },
    "440": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "441": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "442": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "443": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4C3"
    },
    "446": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "30"
    },
    "447": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "448": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "450": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "452": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "453": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "30"
    },
    "454": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP4",
      "path": "30"
    },
    "455": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SUB",
      "path": "30"
    },
    "456": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "30"
    },
    "457": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP6",
      "path": "30"
    },
    "458": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "GAS",
      "path": "30"
    },
    "459": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DELEGATECALL",
      "path": "30"
    },
    "460": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "461": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "462": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "463": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "464": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "30"
    },
    "465": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "467": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "30"
    },
    "468": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "EQ",
      "path": "30"
    },
    "469": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1FA"
    },
    "472": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "473": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "475": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "476": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "477": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "478": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1F"
    },
    "480": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "NOT",
      "path": "30"
    },
    "481": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x3F"
    },
    "483": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "484": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "30"
    },
    "485": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "AND",
      "path": "30"
    },
    "486": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "30"
    },
    "487": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "30"
    },
    "488": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "490": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "491": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "492": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "30"
    },
    "493": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "494": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "30"
    },
    "495": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "497": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "499": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP5",
      "path": "30"
    },
    "500": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "30"
    },
    "501": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATACOPY",
      "path": "30"
    },
    "502": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1FF"
    },
    "505": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "30"
    },
    "506": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "507": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "509": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "510": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "511": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "512": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "513": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "514": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "515": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "516": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "30"
    },
    "517": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2150
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 3
    },
    "518": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "DUP1",
      "path": "30"
    },
    "519": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x20E"
    },
    "522": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "523": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "POP",
      "path": "30"
    },
    "524": {
      "branch": 10,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2155,
        2167
      ],
      "op": "DUP6",
      "path": "30"
    },
    "525": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2154,
        2167
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "526": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "527": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x217"
    },
    "530": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP3",
      "path": "30"
    },
    "531": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2182
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x289"
    },
    "534": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMP",
      "path": "30"
    },
    "535": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "536": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "537": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x23E"
    },
    "540": {
      "branch": 10,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "541": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "543": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP2",
      "path": "30"
    },
    "552": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "553": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "555": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "ADD",
      "path": "30"
    },
    "556": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x235"
    },
    "559": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "560": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "561": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x5AE"
    },
    "564": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMP",
      "path": "30"
    },
    "565": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "566": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "568": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "569": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP1",
      "path": "30"
    },
    "570": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "571": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SUB",
      "path": "30"
    },
    "572": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "573": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "REVERT",
      "path": "30"
    },
    "574": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "575": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "POP",
      "path": "30"
    },
    "576": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2220,
        2227
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 4
    },
    "577": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2214
      ],
      "op": "DUP6",
      "path": "30"
    },
    "578": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2215,
        2216
      ],
      "op": "DUP5",
      "path": "30"
    },
    "579": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "30"
    },
    "580": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "581": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "30"
    },
    "582": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "LT",
      "path": "30"
    },
    "583": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x24C"
    },
    "586": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "587": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "INVALID",
      "path": "30"
    },
    "588": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "589": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "591": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MUL",
      "path": "30"
    },
    "592": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "594": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "30"
    },
    "595": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "30"
    },
    "596": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "597": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "598": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "599": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "600": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "30"
    },
    "601": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "602": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "603": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "30"
    },
    "604": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "605": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "30"
    },
    "606": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "30"
    },
    "607": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2254,
        2260
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 5
    },
    "608": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2248
      ],
      "op": "DUP5",
      "path": "30"
    },
    "609": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2249,
        2250
      ],
      "op": "DUP5",
      "path": "30"
    },
    "610": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "30"
    },
    "611": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "612": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "30"
    },
    "613": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "LT",
      "path": "30"
    },
    "614": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x26B"
    },
    "617": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "618": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "INVALID",
      "path": "30"
    },
    "619": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "620": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "622": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "623": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "30"
    },
    "624": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MUL",
      "path": "30"
    },
    "625": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "626": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "627": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "628": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "30"
    },
    "629": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "30"
    },
    "630": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2260
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 6,
      "value": "0x1"
    },
    "635": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "ADD",
      "path": "30"
    },
    "636": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x186"
    },
    "639": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMP",
      "path": "30"
    },
    "640": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "641": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "POP",
      "path": "30"
    },
    "642": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "643": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "30"
    },
    "644": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "645": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "646": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "30"
    },
    "647": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "30"
    },
    "648": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "o",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "30"
    },
    "649": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "650": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        512,
        525
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x60"
    },
    "652": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        673,
        675
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x44"
    },
    "654": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        663
      ],
      "op": "DUP3",
      "path": "30"
    },
    "655": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        670
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "656": {
      "branch": 11,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        675
      ],
      "op": "LT",
      "path": "30"
    },
    "657": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "658": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2CF"
    },
    "661": {
      "branch": 11,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 7,
      "value": "0x40"
    },
    "665": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "30"
    },
    "666": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "667": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "30"
    },
    "668": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "30"
    },
    "669": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "30"
    },
    "670": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "671": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "672": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "673": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x1D"
    },
    "675": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP2",
      "path": "30"
    },
    "676": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "677": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "710": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "712": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "30"
    },
    "713": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "30"
    },
    "714": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "715": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2EC"
    },
    "718": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "JUMP",
      "path": "30"
    },
    "719": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "720": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        815,
        819
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "722": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        802,
        813
      ],
      "op": "DUP3",
      "path": "30"
    },
    "723": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        798,
        820
      ],
      "op": "ADD",
      "path": "30"
    },
    "724": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "725": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "POP",
      "path": "30"
    },
    "726": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        857,
        868
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 8
    },
    "727": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP1",
      "path": "30"
    },
    "728": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "730": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "30"
    },
    "731": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "732": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "733": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP2",
      "path": "30"
    },
    "734": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "30"
    },
    "735": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "736": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2E9"
    },
    "739": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "740": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "741": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x3FC"
    },
    "744": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "i",
      "offset": [
        846,
        879
      ],
      "op": "JUMP",
      "path": "30"
    },
    "745": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "746": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "747": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "POP",
      "path": "30"
    },
    "748": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "749": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "750": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "751": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "POP",
      "path": "30"
    },
    "752": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "o",
      "offset": [
        440,
        927
      ],
      "op": "JUMP",
      "path": "30"
    },
    "753": {
      "op": "JUMPDEST"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "756": {
      "op": "DUP1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "761": {
      "op": "DUP5"
    },
    "762": {
      "op": "DUP7"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "op": "SLT"
    },
    "765": {
      "op": "ISZERO"
    },
    "766": {
      "op": "PUSH2",
      "value": "0x305"
    },
    "769": {
      "op": "JUMPI"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "DUP4"
    },
    "772": {
      "op": "REVERT"
    },
    "773": {
      "op": "JUMPDEST"
    },
    "774": {
      "op": "DUP4"
    },
    "775": {
      "op": "CALLDATALOAD"
    },
    "776": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "785": {
      "op": "DUP1"
    },
    "786": {
      "op": "DUP3"
    },
    "787": {
      "op": "GT"
    },
    "788": {
      "op": "ISZERO"
    },
    "789": {
      "op": "PUSH2",
      "value": "0x31C"
    },
    "792": {
      "op": "JUMPI"
    },
    "793": {
      "op": "DUP5"
    },
    "794": {
      "op": "DUP6"
    },
    "795": {
      "op": "REVERT"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "DUP2"
    },
    "798": {
      "op": "DUP7"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "op": "SWAP2"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "DUP7"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "805": {
      "op": "DUP4"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "SLT"
    },
    "808": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "811": {
      "op": "JUMPI"
    },
    "812": {
      "op": "DUP5"
    },
    "813": {
      "op": "DUP6"
    },
    "814": {
      "op": "REVERT"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "op": "DUP2"
    },
    "817": {
      "op": "CALLDATALOAD"
    },
    "818": {
      "op": "DUP2"
    },
    "819": {
      "op": "DUP2"
    },
    "820": {
      "op": "GT"
    },
    "821": {
      "op": "ISZERO"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x33D"
    },
    "825": {
      "op": "JUMPI"
    },
    "826": {
      "op": "DUP6"
    },
    "827": {
      "op": "DUP7"
    },
    "828": {
      "op": "REVERT"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "op": "DUP8"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "op": "DUP4"
    },
    "835": {
      "op": "MUL"
    },
    "836": {
      "op": "DUP6"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "GT"
    },
    "840": {
      "op": "ISZERO"
    },
    "841": {
      "op": "PUSH2",
      "value": "0x350"
    },
    "844": {
      "op": "JUMPI"
    },
    "845": {
      "op": "DUP6"
    },
    "846": {
      "op": "DUP7"
    },
    "847": {
      "op": "REVERT"
    },
    "848": {
      "op": "JUMPDEST"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "851": {
      "op": "SWAP3"
    },
    "852": {
      "op": "DUP4"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "SWAP6"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "SWAP4"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "op": "DUP5"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "CALLDATALOAD"
    },
    "862": {
      "op": "DUP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "EQ"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "REVERT"
    },
    "874": {
      "op": "JUMPDEST"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "op": "SWAP2"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "SWAP3"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "op": "SWAP3"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "op": "SWAP3"
    },
    "884": {
      "op": "JUMP"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "891": {
      "op": "DUP1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "897": {
      "op": "DUP1"
    },
    "898": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "901": {
      "op": "DUP10"
    },
    "902": {
      "op": "DUP12"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "op": "SLT"
    },
    "905": {
      "op": "ISZERO"
    },
    "906": {
      "op": "PUSH2",
      "value": "0x391"
    },
    "909": {
      "op": "JUMPI"
    },
    "910": {
      "op": "DUP4"
    },
    "911": {
      "op": "DUP5"
    },
    "912": {
      "op": "REVERT"
    },
    "913": {
      "op": "JUMPDEST"
    },
    "914": {
      "op": "DUP9"
    },
    "915": {
      "op": "CALLDATALOAD"
    },
    "916": {
      "op": "PUSH2",
      "value": "0x39C"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "923": {
      "op": "JUMP"
    },
    "924": {
      "op": "JUMPDEST"
    },
    "925": {
      "op": "SWAP8"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "929": {
      "op": "DUP10"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "CALLDATALOAD"
    },
    "932": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "939": {
      "op": "JUMP"
    },
    "940": {
      "op": "JUMPDEST"
    },
    "941": {
      "op": "SWAP7"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "945": {
      "op": "DUP10"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "CALLDATALOAD"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "951": {
      "op": "DUP2"
    },
    "952": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "955": {
      "op": "JUMP"
    },
    "956": {
      "op": "JUMPDEST"
    },
    "957": {
      "op": "SWAP6"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "961": {
      "op": "DUP10"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "CALLDATALOAD"
    },
    "964": {
      "op": "SWAP5"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "968": {
      "op": "DUP10"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "CALLDATALOAD"
    },
    "971": {
      "op": "SWAP4"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "975": {
      "op": "DUP10"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "CALLDATALOAD"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "980": {
      "op": "DUP2"
    },
    "981": {
      "op": "AND"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "EQ"
    },
    "984": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "987": {
      "op": "JUMPI"
    },
    "988": {
      "op": "DUP4"
    },
    "989": {
      "op": "DUP5"
    },
    "990": {
      "op": "REVERT"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "SWAP8"
    },
    "993": {
      "op": "SWAP11"
    },
    "994": {
      "op": "SWAP7"
    },
    "995": {
      "op": "SWAP10"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "SWAP5"
    },
    "998": {
      "op": "SWAP8"
    },
    "999": {
      "op": "SWAP4"
    },
    "1000": {
      "op": "SWAP7"
    },
    "1001": {
      "op": "SWAP3"
    },
    "1002": {
      "op": "SWAP6"
    },
    "1003": {
      "op": "SWAP3"
    },
    "1004": {
      "op": "SWAP5"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "CALLDATALOAD"
    },
    "1013": {
      "op": "SWAP2"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "CALLDATALOAD"
    },
    "1018": {
      "op": "SWAP1"
    },
    "1019": {
      "op": "JUMP"
    },
    "1020": {
      "op": "JUMPDEST"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "DUP5"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "op": "SLT"
    },
    "1029": {
      "op": "ISZERO"
    },
    "1030": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1033": {
      "op": "JUMPI"
    },
    "1034": {
      "op": "DUP1"
    },
    "1035": {
      "op": "DUP2"
    },
    "1036": {
      "op": "REVERT"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "MLOAD"
    },
    "1040": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1049": {
      "op": "DUP1"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "GT"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1056": {
      "op": "JUMPI"
    },
    "1057": {
      "op": "DUP3"
    },
    "1058": {
      "op": "DUP4"
    },
    "1059": {
      "op": "REVERT"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "DUP2"
    },
    "1062": {
      "op": "DUP5"
    },
    "1063": {
      "op": "ADD"
    },
    "1064": {
      "op": "SWAP2"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "op": "DUP5"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1069": {
      "op": "DUP4"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "SLT"
    },
    "1072": {
      "op": "PUSH2",
      "value": "0x437"
    },
    "1075": {
      "op": "JUMPI"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "REVERT"
    },
    "1079": {
      "op": "JUMPDEST"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "MLOAD"
    },
    "1082": {
      "op": "DUP2"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "GT"
    },
    "1085": {
      "op": "ISZERO"
    },
    "1086": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1089": {
      "op": "JUMPI"
    },
    "1090": {
      "op": "DUP4"
    },
    "1091": {
      "op": "DUP5"
    },
    "1092": {
      "op": "REVERT"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1096": {
      "op": "MLOAD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1103": {
      "op": "NOT"
    },
    "1104": {
      "op": "AND"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1109": {
      "op": "ADD"
    },
    "1110": {
      "op": "DUP4"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "GT"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "LT"
    },
    "1116": {
      "op": "OR"
    },
    "1117": {
      "op": "ISZERO"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x465"
    },
    "1121": {
      "op": "JUMPI"
    },
    "1122": {
      "op": "DUP6"
    },
    "1123": {
      "op": "DUP7"
    },
    "1124": {
      "op": "REVERT"
    },
    "1125": {
      "op": "JUMPDEST"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "DUP2"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "DUP4"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "DUP8"
    },
    "1139": {
      "op": "LT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47C"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "DUP5"
    },
    "1146": {
      "op": "DUP6"
    },
    "1147": {
      "op": "REVERT"
    },
    "1148": {
      "op": "JUMPDEST"
    },
    "1149": {
      "op": "PUSH2",
      "value": "0x48D"
    },
    "1152": {
      "op": "DUP3"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1155": {
      "op": "DUP4"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "op": "DUP8"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1164": {
      "op": "JUMP"
    },
    "1165": {
      "op": "JUMPDEST"
    },
    "1166": {
      "op": "SWAP7"
    },
    "1167": {
      "op": "SWAP6"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "op": "JUMPDEST"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "MLOAD"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "DUP5"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1189": {
      "op": "DUP7"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1193": {
      "op": "DUP7"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1198": {
      "op": "JUMP"
    },
    "1199": {
      "op": "JUMPDEST"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1205": {
      "op": "NOT"
    },
    "1206": {
      "op": "AND"
    },
    "1207": {
      "op": "SWAP3"
    },
    "1208": {
      "op": "SWAP1"
    },
    "1209": {
      "op": "SWAP3"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "SWAP3"
    },
    "1215": {
      "op": "SWAP2"
    },
    "1216": {
      "op": "POP"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "op": "JUMP"
    },
    "1219": {
      "op": "JUMPDEST"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "DUP5"
    },
    "1224": {
      "op": "DUP4"
    },
    "1225": {
      "op": "CALLDATACOPY"
    },
    "1226": {
      "op": "SWAP2"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP1"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "JUMP"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "op": "SWAP8"
    },
    "1245": {
      "op": "DUP9"
    },
    "1246": {
      "op": "AND"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "SWAP6"
    },
    "1250": {
      "op": "SWAP1"
    },
    "1251": {
      "op": "SWAP7"
    },
    "1252": {
      "op": "AND"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1255": {
      "op": "DUP7"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1260": {
      "op": "DUP6"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "SWAP4"
    },
    "1263": {
      "op": "SWAP1"
    },
    "1264": {
      "op": "SWAP4"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1268": {
      "op": "DUP5"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "SWAP2"
    },
    "1271": {
      "op": "SWAP1"
    },
    "1272": {
      "op": "SWAP2"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1276": {
      "op": "AND"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1279": {
      "op": "DUP4"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1284": {
      "op": "DUP3"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1289": {
      "op": "DUP2"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "SWAP2"
    },
    "1292": {
      "op": "SWAP1"
    },
    "1293": {
      "op": "SWAP2"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "JUMP"
    },
    "1300": {
      "op": "JUMPDEST"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1303": {
      "op": "DUP1"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "DUP4"
    },
    "1307": {
      "op": "MLOAD"
    },
    "1308": {
      "op": "SWAP1"
    },
    "1309": {
      "op": "DUP3"
    },
    "1310": {
      "op": "ADD"
    },
    "1311": {
      "op": "DUP2"
    },
    "1312": {
      "op": "SWAP1"
    },
    "1313": {
      "op": "MSTORE"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "SWAP1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1322": {
      "op": "DUP5"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "DUP8"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "DUP5"
    },
    "1329": {
      "op": "JUMPDEST"
    },
    "1330": {
      "op": "DUP3"
    },
    "1331": {
      "op": "DUP2"
    },
    "1332": {
      "op": "LT"
    },
    "1333": {
      "op": "ISZERO"
    },
    "1334": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1337": {
      "op": "JUMPI"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "MLOAD"
    },
    "1340": {
      "op": "ISZERO"
    },
    "1341": {
      "op": "ISZERO"
    },
    "1342": {
      "op": "DUP5"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "SWAP3"
    },
    "1345": {
      "op": "DUP5"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "SWAP3"
    },
    "1348": {
      "op": "SWAP1"
    },
    "1349": {
      "op": "DUP5"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "SWAP1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "op": "DUP4"
    },
    "1364": {
      "op": "DUP2"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "op": "DUP3"
    },
    "1367": {
      "op": "DUP6"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "DUP1"
    },
    "1371": {
      "op": "DUP6"
    },
    "1372": {
      "op": "MLOAD"
    },
    "1373": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "DUP5"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1381": {
      "op": "JUMP"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "op": "SWAP2"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "op": "DUP2"
    },
    "1386": {
      "op": "SWAP3"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "DUP4"
    },
    "1389": {
      "op": "DUP2"
    },
    "1390": {
      "op": "MUL"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "DUP5"
    },
    "1394": {
      "op": "DUP9"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "DUP7"
    },
    "1397": {
      "op": "JUMPDEST"
    },
    "1398": {
      "op": "DUP4"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "LT"
    },
    "1401": {
      "op": "ISZERO"
    },
    "1402": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "op": "DUP6"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "DUP6"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0x58D"
    },
    "1414": {
      "op": "DUP4"
    },
    "1415": {
      "op": "DUP4"
    },
    "1416": {
      "op": "MLOAD"
    },
    "1417": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "1420": {
      "op": "JUMP"
    },
    "1421": {
      "op": "JUMPDEST"
    },
    "1422": {
      "op": "SWAP5"
    },
    "1423": {
      "op": "DUP8"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "SWAP5"
    },
    "1426": {
      "op": "SWAP3"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "SWAP1"
    },
    "1429": {
      "op": "DUP7"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "SWAP1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "PUSH2",
      "value": "0x575"
    },
    "1438": {
      "op": "JUMP"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "SWAP1"
    },
    "1442": {
      "op": "SWAP10"
    },
    "1443": {
      "op": "SWAP9"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "JUMP"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1459": {
      "op": "DUP3"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x5C1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "op": "DUP4"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "op": "DUP5"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "1472": {
      "op": "JUMP"
    },
    "1473": {
      "op": "JUMPDEST"
    },
    "1474": {
      "op": "SWAP4"
    },
    "1475": {
      "op": "SWAP3"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "JUMP"
    },
    "1480": {
      "op": "JUMPDEST"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "DUP4"
    },
    "1485": {
      "op": "CALLDATALOAD"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1488": {
      "op": "NOT"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "CALLDATASIZE"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "op": "DUP2"
    },
    "1494": {
      "op": "SLT"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1498": {
      "op": "JUMPI"
    },
    "1499": {
      "op": "DUP3"
    },
    "1500": {
      "op": "DUP4"
    },
    "1501": {
      "op": "REVERT"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "DUP4"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "DUP1"
    },
    "1506": {
      "op": "CALLDATALOAD"
    },
    "1507": {
      "op": "SWAP2"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "GT"
    },
    "1520": {
      "op": "ISZERO"
    },
    "1521": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "1524": {
      "op": "JUMPI"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "DUP4"
    },
    "1527": {
      "op": "REVERT"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1531": {
      "op": "ADD"
    },
    "1532": {
      "op": "SWAP2"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "op": "CALLDATASIZE"
    },
    "1535": {
      "op": "DUP2"
    },
    "1536": {
      "op": "SWAP1"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "SGT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x60D"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "DUP1"
    },
    "1548": {
      "op": "REVERT"
    },
    "1549": {
      "op": "JUMPDEST"
    },
    "1550": {
      "op": "SWAP3"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "op": "SWAP3"
    },
    "1553": {
      "op": "SWAP1"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "SWAP1"
    },
    "1558": {
      "op": "DUP2"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "SWAP1"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1568": {
      "op": "JUMPDEST"
    },
    "1569": {
      "op": "DUP4"
    },
    "1570": {
      "op": "DUP2"
    },
    "1571": {
      "op": "LT"
    },
    "1572": {
      "op": "ISZERO"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x638"
    },
    "1576": {
      "op": "JUMPI"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MLOAD"
    },
    "1581": {
      "op": "DUP4"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "op": "PUSH2",
      "value": "0x620"
    },
    "1591": {
      "op": "JUMP"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "op": "DUP4"
    },
    "1594": {
      "op": "DUP2"
    },
    "1595": {
      "op": "GT"
    },
    "1596": {
      "op": "ISZERO"
    },
    "1597": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1600": {
      "op": "JUMPI"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "DUP5"
    },
    "1604": {
      "op": "DUP5"
    },
    "1605": {
      "op": "ADD"
    },
    "1606": {
      "op": "MSTORE"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "JUMP"
    },
    "1613": {
      "op": "JUMPDEST"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "op": "DUP2"
    },
    "1623": {
      "op": "AND"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "EQ"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1629": {
      "op": "JUMPI"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "REVERT"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "JUMP"
    }
  },
  "sha1": "51cd1e8a8e346871227bee8f9491a9981ca9e55d",
  "source": "\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\n// solhint-disable avoid-low-level-calls\n// solhint-disable no-inline-assembly\n\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\n\nimport \"./BoringERC20.sol\";\n\ncontract BaseBoringBatchable {\n    /// @dev Helper function to extract a useful revert message from a failed call.\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            // Slice the sighash.\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\n    }\n\n    /// @notice Allows batched call to self (this contract).\n    /// @param calls An array of inputs for each call.\n    /// @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n    /// @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n    /// @return results An array with the returned data of each function call, mapped one-to-one to `calls`.\n    // F1: External is ok here because this is the batch function, adding it to a batch makes no sense\n    // F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\n    // C3: The length of the loop is fully under user control, so can't be exploited\n    // C7: Delegatecall is only used on the same contract, so it's safe\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results) {\n        successes = new bool[](calls.length);\n        results = new bytes[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\n            require(success || !revertOnFail, _getRevertMsg(result));\n            successes[i] = success;\n            results[i] = result;\n        }\n    }\n}\n\ncontract BoringBatchable is BaseBoringBatchable {\n    /// @notice Call wrapper that performs `ERC20.permit` on `token`.\n    /// Lookup `IERC20.permit`.\n    // F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\n    //     if part of a batch this could be used to grief once as the second call would not need the permit\n    function permitToken(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        token.permit(from, to, amount, deadline, v, r, s);\n    }\n}",
  "sourceMap": "2281:653:30:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Utils/BoringBatchable.sol",
  "type": "contract"
}