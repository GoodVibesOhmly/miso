{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/Utils/BoringBatchable.sol",
    "23": "contracts/interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Utils/BoringBatchable.sol",
    "exportedSymbols": {
      "BaseBoringBatchable": [
        8670
      ],
      "BoringBatchable": [
        8706
      ]
    },
    "id": 8707,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8559,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:16"
      },
      {
        "id": 8560,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:16"
      },
      {
        "absolutePath": "contracts/Utils/BoringERC20.sol",
        "file": "./BoringERC20.sol",
        "id": 8561,
        "nodeType": "ImportDirective",
        "scope": 8707,
        "sourceUnit": 8943,
        "src": "189:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8670,
        "linearizedBaseContracts": [
          8670
        ],
        "name": "BaseBoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8585,
              "nodeType": "Block",
              "src": "527:400:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8569,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8564,
                        "src": "652:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 8570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "652:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3638",
                      "id": 8571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "673:2:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "652:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8575,
                  "nodeType": "IfStatement",
                  "src": "648:67:16",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 8573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "684:31:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 8568,
                    "id": 8574,
                    "nodeType": "Return",
                    "src": "677:38:16"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "735:95:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "783:37:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "802:11:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:4:16",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "798:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "798:22:16"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "783:11:16"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8564,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "783:11:16",
                      "valueSize": 1
                    },
                    {
                      "declaration": 8564,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "802:11:16",
                      "valueSize": 1
                    }
                  ],
                  "id": 8576,
                  "nodeType": "InlineAssembly",
                  "src": "726:104:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8579,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8564,
                        "src": "857:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 8581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "871:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 8580,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "871:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 8582,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "870:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8577,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "846:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 8578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "846:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 8583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 8568,
                  "id": 8584,
                  "nodeType": "Return",
                  "src": "839:40:16"
                }
              ]
            },
            "documentation": {
              "id": 8562,
              "nodeType": "StructuredDocumentation",
              "src": "253:182:16",
              "text": "@dev Helper function to extract a useful revert message from a failed call.\n If the returned data is malformed or not correctly abi encoded then this call can fail itself."
            },
            "id": 8586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRevertMsg",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8564,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8586,
                  "src": "463:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:26:16"
            },
            "returnParameters": {
              "id": 8568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8567,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8586,
                  "src": "512:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:15:16"
            },
            "scope": 8670,
            "src": "440:487:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8668,
              "nodeType": "Block",
              "src": "1889:388:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8601,
                      "name": "successes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8596,
                      "src": "1899:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8605,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8590,
                            "src": "1922:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 8606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1922:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1911:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 8602,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1915:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 8603,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1915:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 8607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1911:24:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "1899:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 8609,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:36:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8610,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8599,
                      "src": "1945:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8614,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8590,
                            "src": "1967:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 8615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1967:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1955:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 8611,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1959:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 8612,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1959:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 8616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1955:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "1945:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 8618,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:35:16"
                },
                {
                  "body": {
                    "id": 8666,
                    "nodeType": "Block",
                    "src": "2033:238:16",
                    "statements": [
                      {
                        "assignments": [
                          8631,
                          8633
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8631,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 8666,
                            "src": "2048:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 8630,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2048:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 8633,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 8666,
                            "src": "2062:19:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 8632,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2062:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8643,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 8639,
                                "name": "calls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8590,
                                "src": "2112:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 8641,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 8640,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8620,
                                "src": "2118:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2112:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8636,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2093:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$8670",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$8670",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                ],
                                "id": 8635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2085:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8634,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2085:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 8637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2085:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 8638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2085:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 8642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:36:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2047:74:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 8648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 8645,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8631,
                                "src": "2143:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 8647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2154:13:16",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 8646,
                                  "name": "revertOnFail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8592,
                                  "src": "2155:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2143:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 8650,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8633,
                                  "src": "2183:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 8649,
                                "name": "_getRevertMsg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8586,
                                "src": "2169:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 8651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2169:21:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 8644,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2135:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:56:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8653,
                        "nodeType": "ExpressionStatement",
                        "src": "2135:56:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8654,
                              "name": "successes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8596,
                              "src": "2205:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 8656,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 8655,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8620,
                              "src": "2215:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2205:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8657,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8631,
                            "src": "2220:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2205:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8659,
                        "nodeType": "ExpressionStatement",
                        "src": "2205:22:16"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 8664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8660,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8599,
                              "src": "2241:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 8662,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 8661,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8620,
                              "src": "2249:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2241:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 8663,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8633,
                            "src": "2254:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2241:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 8665,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:19:16"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8623,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8620,
                      "src": "2010:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8624,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8590,
                        "src": "2014:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 8625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2014:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2010:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8667,
                  "initializationExpression": {
                    "assignments": [
                      8620
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8620,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 8667,
                        "src": "1995:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8622,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2007:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1995:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2028:3:16",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8627,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8620,
                        "src": "2028:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8629,
                    "nodeType": "ExpressionStatement",
                    "src": "2028:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "1990:281:16"
                }
              ]
            },
            "documentation": {
              "id": 8587,
              "nodeType": "StructuredDocumentation",
              "src": "933:419:16",
              "text": "@notice Allows batched call to self (this contract).\n @param calls An array of inputs for each call.\n @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n @return results An array with the returned data of each function call, mapped one-to-one to `calls`."
            },
            "functionSelector": "d2423b51",
            "id": 8669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8590,
                  "mutability": "mutable",
                  "name": "calls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8669,
                  "src": "1771:22:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8588,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1771:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 8589,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1771:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8592,
                  "mutability": "mutable",
                  "name": "revertOnFail",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8669,
                  "src": "1795:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:43:16"
            },
            "returnParameters": {
              "id": 8600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8596,
                  "mutability": "mutable",
                  "name": "successes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8669,
                  "src": "1840:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8594,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1840:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 8595,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1840:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8599,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8669,
                  "src": "1865:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8597,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1865:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 8598,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1865:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1839:49:16"
            },
            "scope": 8670,
            "src": "1756:521:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8707,
        "src": "218:2061:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8671,
              "name": "BaseBoringBatchable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8670,
              "src": "2309:19:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseBoringBatchable_$8670",
                "typeString": "contract BaseBoringBatchable"
              }
            },
            "id": 8672,
            "nodeType": "InheritanceSpecifier",
            "src": "2309:19:16"
          }
        ],
        "contractDependencies": [
          8670
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8706,
        "linearizedBaseContracts": [
          8706,
          8670
        ],
        "name": "BoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8704,
              "nodeType": "Block",
              "src": "2866:66:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8695,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8677,
                        "src": "2889:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8696,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8679,
                        "src": "2895:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8697,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8681,
                        "src": "2899:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8698,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8683,
                        "src": "2907:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8699,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8685,
                        "src": "2917:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8700,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8687,
                        "src": "2920:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8701,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8689,
                        "src": "2923:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8692,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8675,
                        "src": "2876:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8517",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 8694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8516,
                      "src": "2876:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 8702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8703,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:49:16"
                }
              ]
            },
            "documentation": {
              "id": 8673,
              "nodeType": "StructuredDocumentation",
              "src": "2335:97:16",
              "text": "@notice Call wrapper that performs `ERC20.permit` on `token`.\n Lookup `IERC20.permit`."
            },
            "functionSelector": "7c516e94",
            "id": 8705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8675,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2693:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8517",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8674,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8517,
                    "src": "2693:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8517",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8677,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2715:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8679,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2737:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8681,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2757:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8683,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2781:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8685,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2807:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8684,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8687,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2824:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8689,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8705,
                  "src": "2843:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8688,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2683:175:16"
            },
            "returnParameters": {
              "id": 8691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:16"
            },
            "scope": 8706,
            "src": "2663:269:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8707,
        "src": "2281:653:16"
      }
    ],
    "src": "1:2933:16"
  },
  "bytecode": "608060405234801561001057600080fd5b5061069b806100206000396000f3fe6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610375565b61007a565b005b61006361005e3660046102f1565b6100ee565b604051610071929190610514565b60405180910390f35b60405163d505accf60e01b81526001600160a01b0389169063d505accf906100b2908a908a908a908a908a908a908a906004016104d3565b600060405180830381600087803b1580156100cc57600080fd5b505af11580156100e0573d6000803e3d6000fd5b505050505050505050505050565b6060808367ffffffffffffffff8111801561010857600080fd5b50604051908082528060200260200182016040528015610132578160200160208202803683370190505b5091508367ffffffffffffffff8111801561014c57600080fd5b5060405190808252806020026020018201604052801561018057816020015b606081526020019060019003908161016b5790505b50905060005b8481101561028057600060603088888581811061019f57fe5b90506020028101906101b191906105c8565b6040516101bf9291906104c3565b600060405180830381855af49150503d80600081146101fa576040519150601f19603f3d011682016040523d82523d6000602084013e6101ff565b606091505b5091509150818061020e575085155b61021782610289565b9061023e5760405162461bcd60e51b815260040161023591906105ae565b60405180910390fd5b508185848151811061024c57fe5b6020026020010190151590811515815250508084848151811061026b57fe5b60209081029190910101525050600101610186565b50935093915050565b60606044825110156102cf575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526102ec565b600482019150818060200190518101906102e991906103fc565b90505b919050565b600080600060408486031215610305578283fd5b833567ffffffffffffffff8082111561031c578485fd5b818601915086601f83011261032f578485fd5b81358181111561033d578586fd5b8760208083028501011115610350578586fd5b60209283019550935050840135801515811461036a578182fd5b809150509250925092565b600080600080600080600080610100898b031215610391578384fd5b883561039c8161064d565b975060208901356103ac8161064d565b965060408901356103bc8161064d565b9550606089013594506080890135935060a089013560ff811681146103df578384fd5b979a969950949793969295929450505060c08201359160e0013590565b60006020828403121561040d578081fd5b815167ffffffffffffffff80821115610424578283fd5b818401915084601f830112610437578283fd5b815181811115610445578384fd5b604051601f8201601f191681016020018381118282101715610465578586fd5b60405281815283820160200187101561047c578485fd5b61048d82602083016020870161061d565b9695505050505050565b600081518084526104af81602086016020860161061d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b604080825283519082018190526000906020906060840190828701845b8281101561054f578151151584529284019290840190600101610531565b505050838103828501528085516105668184610614565b91508192508381028201848801865b8381101561059f57858303855261058d838351610497565b94870194925090860190600101610575565b50909998505050505050505050565b6000602082526105c16020830184610497565b9392505050565b6000808335601e198436030181126105de578283fd5b83018035915067ffffffffffffffff8211156105f8578283fd5b60200191503681900382131561060d57600080fd5b9250929050565b90815260200190565b60005b83811015610638578181015183820152602001610620565b83811115610647576000848401525b50505050565b6001600160a01b038116811461066257600080fd5b5056fea2646970667358221220a478e67dbe498f5b091c5d4bdc072ad331f7c4c296c275d8120bbfab1686c24a64736f6c634300060c0033",
  "bytecodeSha1": "dd8d9c6793edc8890e27540f11be3e745ba7c13c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "BoringBatchable",
  "coverageMap": {
    "branches": {
      "16": {
        "BaseBoringBatchable._getRevertMsg": {
          "11": [
            652,
            675,
            false
          ]
        },
        "BaseBoringBatchable.batch": {
          "9": [
            2143,
            2150,
            true
          ],
          "10": [
            2155,
            2167,
            true
          ]
        }
      },
      "23": {}
    },
    "statements": {
      "16": {
        "BaseBoringBatchable._getRevertMsg": {
          "7": [
            677,
            715
          ],
          "8": [
            839,
            879
          ]
        },
        "BaseBoringBatchable.batch": {
          "1": [
            1899,
            1935
          ],
          "2": [
            1945,
            1980
          ],
          "3": [
            2135,
            2191
          ],
          "4": [
            2205,
            2227
          ],
          "5": [
            2241,
            2260
          ],
          "6": [
            2028,
            2031
          ]
        },
        "BoringBatchable.permitToken": {
          "0": [
            2876,
            2925
          ]
        }
      },
      "23": {}
    }
  },
  "dependencies": [
    "BaseBoringBatchable",
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610375565b61007a565b005b61006361005e3660046102f1565b6100ee565b604051610071929190610514565b60405180910390f35b60405163d505accf60e01b81526001600160a01b0389169063d505accf906100b2908a908a908a908a908a908a908a906004016104d3565b600060405180830381600087803b1580156100cc57600080fd5b505af11580156100e0573d6000803e3d6000fd5b505050505050505050505050565b6060808367ffffffffffffffff8111801561010857600080fd5b50604051908082528060200260200182016040528015610132578160200160208202803683370190505b5091508367ffffffffffffffff8111801561014c57600080fd5b5060405190808252806020026020018201604052801561018057816020015b606081526020019060019003908161016b5790505b50905060005b8481101561028057600060603088888581811061019f57fe5b90506020028101906101b191906105c8565b6040516101bf9291906104c3565b600060405180830381855af49150503d80600081146101fa576040519150601f19603f3d011682016040523d82523d6000602084013e6101ff565b606091505b5091509150818061020e575085155b61021782610289565b9061023e5760405162461bcd60e51b815260040161023591906105ae565b60405180910390fd5b508185848151811061024c57fe5b6020026020010190151590811515815250508084848151811061026b57fe5b60209081029190910101525050600101610186565b50935093915050565b60606044825110156102cf575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526102ec565b600482019150818060200190518101906102e991906103fc565b90505b919050565b600080600060408486031215610305578283fd5b833567ffffffffffffffff8082111561031c578485fd5b818601915086601f83011261032f578485fd5b81358181111561033d578586fd5b8760208083028501011115610350578586fd5b60209283019550935050840135801515811461036a578182fd5b809150509250925092565b600080600080600080600080610100898b031215610391578384fd5b883561039c8161064d565b975060208901356103ac8161064d565b965060408901356103bc8161064d565b9550606089013594506080890135935060a089013560ff811681146103df578384fd5b979a969950949793969295929450505060c08201359160e0013590565b60006020828403121561040d578081fd5b815167ffffffffffffffff80821115610424578283fd5b818401915084601f830112610437578283fd5b815181811115610445578384fd5b604051601f8201601f191681016020018381118282101715610465578586fd5b60405281815283820160200187101561047c578485fd5b61048d82602083016020870161061d565b9695505050505050565b600081518084526104af81602086016020860161061d565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b604080825283519082018190526000906020906060840190828701845b8281101561054f578151151584529284019290840190600101610531565b505050838103828501528085516105668184610614565b91508192508381028201848801865b8381101561059f57858303855261058d838351610497565b94870194925090860190600101610575565b50909998505050505050505050565b6000602082526105c16020830184610497565b9392505050565b6000808335601e198436030181126105de578283fd5b83018035915067ffffffffffffffff8211156105f8578283fd5b60200191503681900382131561060d57600080fd5b9250929050565b90815260200190565b60005b83811015610638578181015183820152602001610620565b83811115610647576000848401525b50505050565b6001600160a01b038116811461066257600080fd5b5056fea2646970667358221220a478e67dbe498f5b091c5d4bdc072ad331f7c4c296c275d8120bbfab1686c24a64736f6c634300060c0033",
  "deployedSourceMap": "2281:653:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;2663:269;;;;;;;;;;-1:-1:-1;2663:269:16;;;;;:::i;:::-;;:::i;:::-;;1756:521;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2663:269;2876:49;;-1:-1:-1;;;2876:49:16;;-1:-1:-1;;;;;2876:12:16;;;;;:49;;2889:4;;2895:2;;2899:6;;2907:8;;2917:1;;2920;;2923;;2876:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:269;;;;;;;;:::o;1756:521::-;1840:23;;1922:5;1911:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1911:24:16;-1:-1:-1;1899:36:16;-1:-1:-1;1967:5:16;1955:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:35;;1995:9;1990:281;2010:16;;;1990:281;;;2048:12;2062:19;2093:4;2112:5;;2118:1;2112:8;;;;;;;;;;;;;;;;;;:::i;:::-;2085:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:74;;;;2143:7;:24;;;;2155:12;2154:13;2143:24;2169:21;2183:6;2169:13;:21::i;:::-;2135:56;;;;;-1:-1:-1;;;2135:56:16;;;;;;;;:::i;:::-;;;;;;;;;;2220:7;2205:9;2215:1;2205:12;;;;;;;;;;;;;:22;;;;;;;;;;;2254:6;2241:7;2249:1;2241:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;2028:3:16;;1990:281;;;;1756:521;;;;;;:::o;440:487::-;512:13;673:2;652:11;:18;:23;648:67;;;-1:-1:-1;677:38:16;;;;;;;;;;;;;;;;;;;648:67;815:4;802:11;798:22;783:37;;857:11;846:33;;;;;;;;;;;;:::i;:::-;839:40;;440:487;;;;:::o;1687:538:-1:-;;;;1851:2;1839:9;1830:7;1826:23;1822:32;1819:2;;;-1:-1;;1857:12;1819:2;1915:17;1902:31;1953:18;;1945:6;1942:30;1939:2;;;-1:-1;;1975:12;1939:2;2087:6;2076:9;2072:22;;;299:3;292:4;284:6;280:17;276:27;266:2;;-1:-1;;307:12;266:2;350:6;337:20;1953:18;369:6;366:30;363:2;;;-1:-1;;399:12;363:2;494:3;443:4;;478:6;474:17;435:6;460:32;;457:41;454:2;;;-1:-1;;501:12;454:2;443:4;431:17;;;;-1:-1;1995:109;-1:-1;;2177:22;;593:20;12787:13;;12780:21;14016:32;;14006:2;;-1:-1;;14052:12;14006:2;2149:60;;;;1813:412;;;;;:::o;2232:1147::-;;;;;;;;;2468:3;2456:9;2447:7;2443:23;2439:33;2436:2;;;-1:-1;;2475:12;2436:2;892:6;879:20;904:48;946:5;904:48;:::i;:::-;2527:78;-1:-1;2642:2;2681:22;;72:20;97:33;72:20;97:33;:::i;:::-;2650:63;-1:-1;2750:2;2789:22;;72:20;97:33;72:20;97:33;:::i;:::-;2758:63;-1:-1;2858:2;2897:22;;1484:20;;-1:-1;2966:3;3006:22;;1484:20;;-1:-1;3075:3;3113:22;;1619:20;13283:4;13272:16;;14537:33;;14527:2;;-1:-1;;14574:12;14527:2;2430:949;;;;-1:-1;2430:949;;;;;;3084:61;;-1:-1;;;3182:3;3222:22;;727:20;;3291:3;3331:22;727:20;;2430:949::o;3386:362::-;;3511:2;3499:9;3490:7;3486:23;3482:32;3479:2;;;-1:-1;;3517:12;3479:2;3568:17;3562:24;3606:18;;3598:6;3595:30;3592:2;;;-1:-1;;3628:12;3592:2;3715:6;3704:9;3700:22;;;1078:3;1071:4;1063:6;1059:17;1055:27;1045:2;;-1:-1;;1086:12;1045:2;1126:6;1120:13;3606:18;10455:6;10452:30;10449:2;;;-1:-1;;10485:12;10449:2;10118;10112:9;10558;10539:17;;-1:-1;;10535:33;10144:17;;3511:2;10144:17;10204:34;;;10240:22;;;10201:62;10198:2;;;-1:-1;;10266:12;10198:2;10118;10285:22;1219:21;;;1319:16;;;3511:2;1319:16;1316:25;-1:-1;1313:2;;;-1:-1;;1344:12;1313:2;1364:39;1396:6;3511:2;1295:5;1291:16;3511:2;1261:6;1257:17;1364:39;:::i;:::-;3648:84;3473:275;-1:-1;;;;;;3473:275::o;6459:323::-;;6591:5;11070:12;11885:6;11880:3;11873:19;6674:52;6719:6;11922:4;11917:3;11913:14;11922:4;6700:5;6696:16;6674:52;:::i;:::-;10558:9;13799:14;-1:-1;;13795:28;6738:39;;;;11922:4;6738:39;;6539:243;-1:-1;;6539:243::o;7377:291::-;;13382:6;13377:3;13372;13359:30;13420:16;;13413:27;;;13420:16;7521:147;-1:-1;7521:147::o;7675:884::-;-1:-1;;;;;13067:54;;;4194:37;;13067:54;;;;8131:2;8116:18;;4194:37;8214:2;8199:18;;6069:37;;;;8297:2;8282:18;;6069:37;;;;13283:4;13272:16;8376:3;8361:19;;7330:35;13078:42;8445:19;;6069:37;8544:3;8529:19;;6069:37;;;;7966:3;7951:19;;7937:622::o;8566:653::-;8833:2;8847:47;;;11070:12;;8818:18;;;11873:19;;;8566:653;;11922:4;;11913:14;;;;10760;;;8566:653;4661:251;4686:6;4683:1;4680:13;4661:251;;;4747:13;;12787;12780:21;5952:34;;3897:14;;;;11607;;;;4708:1;4701:9;4661:251;;;4665:14;;;9058:9;9052:4;9048:20;11922:4;9032:9;9028:18;9021:48;9083:126;5189:5;11070:12;5208:95;5296:6;5291:3;5208:95;:::i;:::-;5201:102;;;;;11922:4;5360:6;5356:17;5351:3;5347:27;11922:4;5454:5;10760:14;-1:-1;5493:357;5518:6;5515:1;5512:13;5493:357;;;5580:9;5574:4;5570:20;5565:3;5558:33;4045:64;4105:3;5625:6;5619:13;4045:64;:::i;:::-;5829:14;;;;5639:90;-1:-1;11607:14;;;;4708:1;5533:9;5493:357;;;-1:-1;9075:134;;8804:415;-1:-1;;;;;;;;;8804:415::o;9226:310::-;;9373:2;9394:17;9387:47;9448:78;9373:2;9362:9;9358:18;9512:6;9448:78;:::i;:::-;9440:86;9344:192;-1:-1;;;9344:192::o;9543:506::-;;;9678:11;9665:25;9729:48;;9753:8;9737:14;9733:29;9729:48;9709:18;9705:73;9695:2;;-1:-1;;9782:12;9695:2;9809:33;;9863:18;;;-1:-1;9901:18;9890:30;;9887:2;;;-1:-1;;9923:12;9887:2;9768:4;9951:13;;-1:-1;9737:14;9983:38;;;9973:49;;9970:2;;;10035:1;;10025:12;9970:2;9633:416;;;;;:::o;11758:175::-;11873:19;;;11922:4;11913:14;;11866:67::o;13455:268::-;13520:1;13527:101;13541:6;13538:1;13535:13;13527:101;;;13608:11;;;13602:18;13589:11;;;13582:39;13563:2;13556:10;13527:101;;;13643:6;13640:1;13637:13;13634:2;;;13520:1;13699:6;13694:3;13690:16;13683:27;13634:2;;13504:219;;;:::o;13836:117::-;-1:-1;;;;;13067:54;;13895:35;;13885:2;;13944:1;;13934:12;13885:2;13879:74;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract).",
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        },
        "returns": {
          "results": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
          "successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
        }
      },
      "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`."
      }
    },
    "version": 1
  },
  "offset": [
    2281,
    2934
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C516E94 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F1 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP3 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0xB2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x180 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x19F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP3 SWAP2 SWAP1 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 PUSH2 0x20E JUMPI POP DUP6 ISZERO JUMPDEST PUSH2 0x217 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP1 PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x26B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x186 JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x2CF JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x305 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x31C JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x33D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x350 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x36A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x391 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x39C DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3AC DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3BC DUP2 PUSH2 0x64D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3DF JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x424 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x437 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x445 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x465 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x47C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x48D DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x61D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x4AF DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x61D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x54F JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x531 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x566 DUP2 DUP5 PUSH2 0x614 JUMP JUMPDEST SWAP2 POP DUP2 SWAP3 POP DUP4 DUP2 MUL DUP3 ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x59F JUMPI DUP6 DUP4 SUB DUP6 MSTORE PUSH2 0x58D DUP4 DUP4 MLOAD PUSH2 0x497 JUMP JUMPDEST SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x575 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x5C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x497 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x5DE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5F8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x638 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x620 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH25 0xE67DBE498F5B091C5D4BDC072AD331F7C4C296C275D8120BBF 0xAB AND DUP7 0xC2 0x4A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7C516E94"
    },
    "25": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "EQ",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD2423B51"
    },
    "36": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "EQ",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50"
    },
    "40": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "DUP1",
      "path": "16"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2281,
        2934
      ],
      "op": "REVERT",
      "path": "16"
    },
    "46": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "47": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "48": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "49": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "50": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A"
    },
    "53": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "56": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "57": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "REVERT",
      "path": "16"
    },
    "58": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "59": {
      "op": "POP"
    },
    "60": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E"
    },
    "63": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49"
    },
    "66": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "67": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "69": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x375"
    },
    "72": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "73": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "74": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A"
    },
    "77": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "78": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "79": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "STOP",
      "path": "16"
    },
    "80": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "81": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63"
    },
    "84": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E"
    },
    "87": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "88": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "90": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F1"
    },
    "93": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "16"
    },
    "94": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "95": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEE"
    },
    "98": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "16"
    },
    "99": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "100": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "102": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "103": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "106": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "107": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "108": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "109": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x514"
    },
    "112": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "16"
    },
    "113": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "116": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "117": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "DUP1",
      "path": "16"
    },
    "118": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "119": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SUB",
      "path": "16"
    },
    "120": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "121": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "RETURN",
      "path": "16"
    },
    "122": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "123": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x40"
    },
    "125": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "126": {
      "op": "PUSH4",
      "value": "0xD505ACCF"
    },
    "131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "133": {
      "op": "SHL"
    },
    "134": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP2",
      "path": "16"
    },
    "135": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "142": {
      "op": "SHL"
    },
    "143": {
      "op": "SUB"
    },
    "144": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "DUP10",
      "path": "16"
    },
    "145": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "AND",
      "path": "16"
    },
    "146": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "147": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD505ACCF"
    },
    "152": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2888
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "153": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB2"
    },
    "156": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "157": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2889,
        2893
      ],
      "op": "DUP11",
      "path": "16"
    },
    "158": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2889,
        2893
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "159": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2895,
        2897
      ],
      "op": "DUP11",
      "path": "16"
    },
    "160": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2895,
        2897
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "161": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2899,
        2905
      ],
      "op": "DUP11",
      "path": "16"
    },
    "162": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2899,
        2905
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "163": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2907,
        2915
      ],
      "op": "DUP11",
      "path": "16"
    },
    "164": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2907,
        2915
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "165": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2917,
        2918
      ],
      "op": "DUP11",
      "path": "16"
    },
    "166": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2917,
        2918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "167": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2920,
        2921
      ],
      "op": "DUP11",
      "path": "16"
    },
    "168": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2920,
        2921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "169": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2923,
        2924
      ],
      "op": "DUP11",
      "path": "16"
    },
    "170": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2923,
        2924
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "171": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "173": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ADD",
      "path": "16"
    },
    "174": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D3"
    },
    "177": {
      "fn": "BoringBatchable.permitToken",
      "jump": "i",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMP",
      "path": "16"
    },
    "178": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "179": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "181": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "183": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "184": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "185": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP4",
      "path": "16"
    },
    "186": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "SUB",
      "path": "16"
    },
    "187": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP2",
      "path": "16"
    },
    "188": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "190": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP8",
      "path": "16"
    },
    "191": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "192": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "193": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "194": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "196": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCC"
    },
    "199": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "200": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "202": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "203": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "REVERT",
      "path": "16"
    },
    "204": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "205": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "16"
    },
    "206": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "GAS",
      "path": "16"
    },
    "207": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "CALL",
      "path": "16"
    },
    "208": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "209": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "210": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "211": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE0"
    },
    "214": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "215": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "216": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "220": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "221": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "223": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "REVERT",
      "path": "16"
    },
    "224": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "225": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "16"
    },
    "226": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "16"
    },
    "227": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "16"
    },
    "228": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2876,
        2925
      ],
      "op": "POP",
      "path": "16"
    },
    "229": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "230": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "231": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "232": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "233": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "234": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "235": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "236": {
      "fn": "BoringBatchable.permitToken",
      "offset": [
        2663,
        2932
      ],
      "op": "POP",
      "path": "16"
    },
    "237": {
      "fn": "BoringBatchable.permitToken",
      "jump": "o",
      "offset": [
        2663,
        2932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "238": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "239": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "241": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "DUP1",
      "path": "16"
    },
    "242": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1922,
        1927
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 1
    },
    "243": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "252": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "16"
    },
    "253": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "GT",
      "path": "16"
    },
    "254": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "255": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "256": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x108"
    },
    "259": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "260": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "262": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "263": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "REVERT",
      "path": "16"
    },
    "264": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "265": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "POP",
      "path": "16"
    },
    "266": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "268": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "269": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "270": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "16"
    },
    "272": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "273": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "274": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "276": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "16"
    },
    "277": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "279": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "16"
    },
    "280": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "16"
    },
    "281": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "16"
    },
    "282": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "284": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "285": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "286": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "287": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x132"
    },
    "290": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "291": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "16"
    },
    "292": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "294": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "16"
    },
    "295": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "297": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "16"
    },
    "298": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "16"
    },
    "299": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "16"
    },
    "300": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "301": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP4",
      "path": "16"
    },
    "302": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "303": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "16"
    },
    "304": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "305": {
      "op": "POP"
    },
    "306": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1899,
        1935
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "309": {
      "op": "POP"
    },
    "310": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1967,
        1972
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 2
    },
    "311": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "320": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "16"
    },
    "321": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "GT",
      "path": "16"
    },
    "322": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "16"
    },
    "323": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "324": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14C"
    },
    "327": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "328": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "330": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "REVERT",
      "path": "16"
    },
    "332": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "333": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "16"
    },
    "334": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "336": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "337": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "338": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "16"
    },
    "339": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "16"
    },
    "340": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "341": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "344": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MUL",
      "path": "16"
    },
    "345": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "347": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "16"
    },
    "348": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "16"
    },
    "349": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "16"
    },
    "350": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "352": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "353": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "16"
    },
    "354": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "355": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x180"
    },
    "358": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "359": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "16"
    },
    "360": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "362": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "16"
    },
    "363": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "364": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "366": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "16"
    },
    "367": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "368": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "370": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "16"
    },
    "371": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "372": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "374": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "375": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SUB",
      "path": "16"
    },
    "376": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "377": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "16"
    },
    "378": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16B"
    },
    "381": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "382": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "383": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "16"
    },
    "384": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "385": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "16"
    },
    "386": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "387": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "POP",
      "path": "16"
    },
    "388": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1995,
        2004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "390": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "391": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP5",
      "path": "16"
    },
    "392": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP2",
      "path": "16"
    },
    "393": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "LT",
      "path": "16"
    },
    "394": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "395": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x280"
    },
    "398": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "399": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2048,
        2060
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "401": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2062,
        2081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "403": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2093,
        2097
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "404": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "16"
    },
    "405": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "16"
    },
    "406": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2118,
        2119
      ],
      "op": "DUP6",
      "path": "16"
    },
    "407": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "16"
    },
    "408": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "16"
    },
    "409": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "LT",
      "path": "16"
    },
    "410": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19F"
    },
    "413": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "414": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "INVALID",
      "path": "16"
    },
    "415": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "416": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "417": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "POP",
      "path": "16"
    },
    "418": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "420": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "MUL",
      "path": "16"
    },
    "421": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "16"
    },
    "422": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "ADD",
      "path": "16"
    },
    "423": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "424": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B1"
    },
    "427": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "428": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "429": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C8"
    },
    "432": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMP",
      "path": "16"
    },
    "433": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "434": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "436": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "437": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BF"
    },
    "440": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "441": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "442": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "443": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C3"
    },
    "446": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "16"
    },
    "447": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "448": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "450": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "452": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "453": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "16"
    },
    "454": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP4",
      "path": "16"
    },
    "455": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SUB",
      "path": "16"
    },
    "456": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "16"
    },
    "457": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP6",
      "path": "16"
    },
    "458": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "GAS",
      "path": "16"
    },
    "459": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "460": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "461": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "462": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "463": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "464": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "16"
    },
    "465": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "467": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "16"
    },
    "468": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "EQ",
      "path": "16"
    },
    "469": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FA"
    },
    "472": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "473": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "475": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "476": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "477": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "478": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "480": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "NOT",
      "path": "16"
    },
    "481": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "483": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "484": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "16"
    },
    "485": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "AND",
      "path": "16"
    },
    "486": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "16"
    },
    "487": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "16"
    },
    "488": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "490": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "491": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "492": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "16"
    },
    "493": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "494": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "495": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "497": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "499": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP5",
      "path": "16"
    },
    "500": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "16"
    },
    "501": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "502": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FF"
    },
    "505": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "16"
    },
    "506": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "507": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "509": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "510": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "511": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "512": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "513": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "514": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "515": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "516": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "16"
    },
    "517": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2150
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 3
    },
    "518": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "DUP1",
      "path": "16"
    },
    "519": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20E"
    },
    "522": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "523": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "POP",
      "path": "16"
    },
    "524": {
      "branch": 10,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2155,
        2167
      ],
      "op": "DUP6",
      "path": "16"
    },
    "525": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2154,
        2167
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "526": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "527": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x217"
    },
    "530": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP3",
      "path": "16"
    },
    "531": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2182
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x289"
    },
    "534": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMP",
      "path": "16"
    },
    "535": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "536": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "537": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23E"
    },
    "540": {
      "branch": 10,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "541": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "543": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP2",
      "path": "16"
    },
    "552": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "553": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "555": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "ADD",
      "path": "16"
    },
    "556": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x235"
    },
    "559": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "560": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "561": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AE"
    },
    "564": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMP",
      "path": "16"
    },
    "565": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "566": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "568": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "569": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP1",
      "path": "16"
    },
    "570": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "571": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SUB",
      "path": "16"
    },
    "572": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "573": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "REVERT",
      "path": "16"
    },
    "574": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "575": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "POP",
      "path": "16"
    },
    "576": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2220,
        2227
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 4
    },
    "577": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2214
      ],
      "op": "DUP6",
      "path": "16"
    },
    "578": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2215,
        2216
      ],
      "op": "DUP5",
      "path": "16"
    },
    "579": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "580": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "581": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "582": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "LT",
      "path": "16"
    },
    "583": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24C"
    },
    "586": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "587": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "INVALID",
      "path": "16"
    },
    "588": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "589": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "591": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MUL",
      "path": "16"
    },
    "592": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "594": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "16"
    },
    "595": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "16"
    },
    "596": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "597": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "598": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "599": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "600": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "16"
    },
    "601": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "602": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "603": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "16"
    },
    "604": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "605": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "16"
    },
    "606": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "16"
    },
    "607": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2254,
        2260
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 5
    },
    "608": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2248
      ],
      "op": "DUP5",
      "path": "16"
    },
    "609": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2249,
        2250
      ],
      "op": "DUP5",
      "path": "16"
    },
    "610": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "611": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "612": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "613": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "LT",
      "path": "16"
    },
    "614": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26B"
    },
    "617": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "618": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "INVALID",
      "path": "16"
    },
    "619": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "620": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "622": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "623": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "624": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MUL",
      "path": "16"
    },
    "625": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "626": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "627": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "628": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "16"
    },
    "629": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "16"
    },
    "630": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2260
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x1"
    },
    "635": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "ADD",
      "path": "16"
    },
    "636": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186"
    },
    "639": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMP",
      "path": "16"
    },
    "640": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "641": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "POP",
      "path": "16"
    },
    "642": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "643": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "16"
    },
    "644": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "645": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "646": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "16"
    },
    "647": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "16"
    },
    "648": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "o",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "16"
    },
    "649": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "650": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        512,
        525
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "652": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        673,
        675
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x44"
    },
    "654": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        663
      ],
      "op": "DUP3",
      "path": "16"
    },
    "655": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        670
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "656": {
      "branch": 11,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        675
      ],
      "op": "LT",
      "path": "16"
    },
    "657": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "658": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CF"
    },
    "661": {
      "branch": 11,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x40"
    },
    "665": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "667": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "16"
    },
    "668": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "16"
    },
    "669": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "16"
    },
    "670": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "671": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "672": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "673": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1D"
    },
    "675": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP2",
      "path": "16"
    },
    "676": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "677": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "710": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "712": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "16"
    },
    "713": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "16"
    },
    "714": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "715": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2EC"
    },
    "718": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "JUMP",
      "path": "16"
    },
    "719": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "720": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        815,
        819
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "722": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        802,
        813
      ],
      "op": "DUP3",
      "path": "16"
    },
    "723": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        798,
        820
      ],
      "op": "ADD",
      "path": "16"
    },
    "724": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "725": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "POP",
      "path": "16"
    },
    "726": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        857,
        868
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 8
    },
    "727": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP1",
      "path": "16"
    },
    "728": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "730": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "16"
    },
    "731": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "732": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "733": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP2",
      "path": "16"
    },
    "734": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "16"
    },
    "735": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "736": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9"
    },
    "739": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "740": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "741": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FC"
    },
    "744": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "i",
      "offset": [
        846,
        879
      ],
      "op": "JUMP",
      "path": "16"
    },
    "745": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "746": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "747": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "POP",
      "path": "16"
    },
    "748": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "749": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "750": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "751": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "POP",
      "path": "16"
    },
    "752": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "o",
      "offset": [
        440,
        927
      ],
      "op": "JUMP",
      "path": "16"
    },
    "753": {
      "op": "JUMPDEST"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "756": {
      "op": "DUP1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "761": {
      "op": "DUP5"
    },
    "762": {
      "op": "DUP7"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "op": "SLT"
    },
    "765": {
      "op": "ISZERO"
    },
    "766": {
      "op": "PUSH2",
      "value": "0x305"
    },
    "769": {
      "op": "JUMPI"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "DUP4"
    },
    "772": {
      "op": "REVERT"
    },
    "773": {
      "op": "JUMPDEST"
    },
    "774": {
      "op": "DUP4"
    },
    "775": {
      "op": "CALLDATALOAD"
    },
    "776": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "785": {
      "op": "DUP1"
    },
    "786": {
      "op": "DUP3"
    },
    "787": {
      "op": "GT"
    },
    "788": {
      "op": "ISZERO"
    },
    "789": {
      "op": "PUSH2",
      "value": "0x31C"
    },
    "792": {
      "op": "JUMPI"
    },
    "793": {
      "op": "DUP5"
    },
    "794": {
      "op": "DUP6"
    },
    "795": {
      "op": "REVERT"
    },
    "796": {
      "op": "JUMPDEST"
    },
    "797": {
      "op": "DUP2"
    },
    "798": {
      "op": "DUP7"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "op": "SWAP2"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "DUP7"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "805": {
      "op": "DUP4"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "SLT"
    },
    "808": {
      "op": "PUSH2",
      "value": "0x32F"
    },
    "811": {
      "op": "JUMPI"
    },
    "812": {
      "op": "DUP5"
    },
    "813": {
      "op": "DUP6"
    },
    "814": {
      "op": "REVERT"
    },
    "815": {
      "op": "JUMPDEST"
    },
    "816": {
      "op": "DUP2"
    },
    "817": {
      "op": "CALLDATALOAD"
    },
    "818": {
      "op": "DUP2"
    },
    "819": {
      "op": "DUP2"
    },
    "820": {
      "op": "GT"
    },
    "821": {
      "op": "ISZERO"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x33D"
    },
    "825": {
      "op": "JUMPI"
    },
    "826": {
      "op": "DUP6"
    },
    "827": {
      "op": "DUP7"
    },
    "828": {
      "op": "REVERT"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "op": "DUP8"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "op": "DUP4"
    },
    "835": {
      "op": "MUL"
    },
    "836": {
      "op": "DUP6"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "GT"
    },
    "840": {
      "op": "ISZERO"
    },
    "841": {
      "op": "PUSH2",
      "value": "0x350"
    },
    "844": {
      "op": "JUMPI"
    },
    "845": {
      "op": "DUP6"
    },
    "846": {
      "op": "DUP7"
    },
    "847": {
      "op": "REVERT"
    },
    "848": {
      "op": "JUMPDEST"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "851": {
      "op": "SWAP3"
    },
    "852": {
      "op": "DUP4"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "SWAP6"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "SWAP4"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "op": "DUP5"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "CALLDATALOAD"
    },
    "862": {
      "op": "DUP1"
    },
    "863": {
      "op": "ISZERO"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "DUP2"
    },
    "866": {
      "op": "EQ"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "REVERT"
    },
    "874": {
      "op": "JUMPDEST"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "op": "SWAP2"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "SWAP3"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "op": "SWAP3"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "op": "SWAP3"
    },
    "884": {
      "op": "JUMP"
    },
    "885": {
      "op": "JUMPDEST"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "888": {
      "op": "DUP1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "891": {
      "op": "DUP1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "897": {
      "op": "DUP1"
    },
    "898": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "901": {
      "op": "DUP10"
    },
    "902": {
      "op": "DUP12"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "op": "SLT"
    },
    "905": {
      "op": "ISZERO"
    },
    "906": {
      "op": "PUSH2",
      "value": "0x391"
    },
    "909": {
      "op": "JUMPI"
    },
    "910": {
      "op": "DUP4"
    },
    "911": {
      "op": "DUP5"
    },
    "912": {
      "op": "REVERT"
    },
    "913": {
      "op": "JUMPDEST"
    },
    "914": {
      "op": "DUP9"
    },
    "915": {
      "op": "CALLDATALOAD"
    },
    "916": {
      "op": "PUSH2",
      "value": "0x39C"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "923": {
      "op": "JUMP"
    },
    "924": {
      "op": "JUMPDEST"
    },
    "925": {
      "op": "SWAP8"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "929": {
      "op": "DUP10"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "CALLDATALOAD"
    },
    "932": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "939": {
      "op": "JUMP"
    },
    "940": {
      "op": "JUMPDEST"
    },
    "941": {
      "op": "SWAP7"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "945": {
      "op": "DUP10"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "CALLDATALOAD"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3BC"
    },
    "951": {
      "op": "DUP2"
    },
    "952": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "955": {
      "op": "JUMP"
    },
    "956": {
      "op": "JUMPDEST"
    },
    "957": {
      "op": "SWAP6"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "961": {
      "op": "DUP10"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "CALLDATALOAD"
    },
    "964": {
      "op": "SWAP5"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "968": {
      "op": "DUP10"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "CALLDATALOAD"
    },
    "971": {
      "op": "SWAP4"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "975": {
      "op": "DUP10"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "CALLDATALOAD"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "980": {
      "op": "DUP2"
    },
    "981": {
      "op": "AND"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "EQ"
    },
    "984": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "987": {
      "op": "JUMPI"
    },
    "988": {
      "op": "DUP4"
    },
    "989": {
      "op": "DUP5"
    },
    "990": {
      "op": "REVERT"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "SWAP8"
    },
    "993": {
      "op": "SWAP11"
    },
    "994": {
      "op": "SWAP7"
    },
    "995": {
      "op": "SWAP10"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "SWAP5"
    },
    "998": {
      "op": "SWAP8"
    },
    "999": {
      "op": "SWAP4"
    },
    "1000": {
      "op": "SWAP7"
    },
    "1001": {
      "op": "SWAP3"
    },
    "1002": {
      "op": "SWAP6"
    },
    "1003": {
      "op": "SWAP3"
    },
    "1004": {
      "op": "SWAP5"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "CALLDATALOAD"
    },
    "1013": {
      "op": "SWAP2"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "CALLDATALOAD"
    },
    "1018": {
      "op": "SWAP1"
    },
    "1019": {
      "op": "JUMP"
    },
    "1020": {
      "op": "JUMPDEST"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "DUP5"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "op": "SLT"
    },
    "1029": {
      "op": "ISZERO"
    },
    "1030": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1033": {
      "op": "JUMPI"
    },
    "1034": {
      "op": "DUP1"
    },
    "1035": {
      "op": "DUP2"
    },
    "1036": {
      "op": "REVERT"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "MLOAD"
    },
    "1040": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1049": {
      "op": "DUP1"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "GT"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1056": {
      "op": "JUMPI"
    },
    "1057": {
      "op": "DUP3"
    },
    "1058": {
      "op": "DUP4"
    },
    "1059": {
      "op": "REVERT"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "DUP2"
    },
    "1062": {
      "op": "DUP5"
    },
    "1063": {
      "op": "ADD"
    },
    "1064": {
      "op": "SWAP2"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "op": "DUP5"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1069": {
      "op": "DUP4"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "SLT"
    },
    "1072": {
      "op": "PUSH2",
      "value": "0x437"
    },
    "1075": {
      "op": "JUMPI"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "REVERT"
    },
    "1079": {
      "op": "JUMPDEST"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "MLOAD"
    },
    "1082": {
      "op": "DUP2"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "GT"
    },
    "1085": {
      "op": "ISZERO"
    },
    "1086": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1089": {
      "op": "JUMPI"
    },
    "1090": {
      "op": "DUP4"
    },
    "1091": {
      "op": "DUP5"
    },
    "1092": {
      "op": "REVERT"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1096": {
      "op": "MLOAD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1103": {
      "op": "NOT"
    },
    "1104": {
      "op": "AND"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1109": {
      "op": "ADD"
    },
    "1110": {
      "op": "DUP4"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "GT"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "LT"
    },
    "1116": {
      "op": "OR"
    },
    "1117": {
      "op": "ISZERO"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x465"
    },
    "1121": {
      "op": "JUMPI"
    },
    "1122": {
      "op": "DUP6"
    },
    "1123": {
      "op": "DUP7"
    },
    "1124": {
      "op": "REVERT"
    },
    "1125": {
      "op": "JUMPDEST"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "DUP2"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "DUP4"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "DUP8"
    },
    "1139": {
      "op": "LT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47C"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "DUP5"
    },
    "1146": {
      "op": "DUP6"
    },
    "1147": {
      "op": "REVERT"
    },
    "1148": {
      "op": "JUMPDEST"
    },
    "1149": {
      "op": "PUSH2",
      "value": "0x48D"
    },
    "1152": {
      "op": "DUP3"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1155": {
      "op": "DUP4"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1159": {
      "op": "DUP8"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1164": {
      "op": "JUMP"
    },
    "1165": {
      "op": "JUMPDEST"
    },
    "1166": {
      "op": "SWAP7"
    },
    "1167": {
      "op": "SWAP6"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "op": "JUMPDEST"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "MLOAD"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "DUP5"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "1186": {
      "op": "DUP2"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1189": {
      "op": "DUP7"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1193": {
      "op": "DUP7"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1198": {
      "op": "JUMP"
    },
    "1199": {
      "op": "JUMPDEST"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1205": {
      "op": "NOT"
    },
    "1206": {
      "op": "AND"
    },
    "1207": {
      "op": "SWAP3"
    },
    "1208": {
      "op": "SWAP1"
    },
    "1209": {
      "op": "SWAP3"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "SWAP3"
    },
    "1215": {
      "op": "SWAP2"
    },
    "1216": {
      "op": "POP"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "op": "JUMP"
    },
    "1219": {
      "op": "JUMPDEST"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "DUP5"
    },
    "1224": {
      "op": "DUP4"
    },
    "1225": {
      "op": "CALLDATACOPY"
    },
    "1226": {
      "op": "SWAP2"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP1"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "JUMP"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1242": {
      "op": "SHL"
    },
    "1243": {
      "op": "SUB"
    },
    "1244": {
      "op": "SWAP8"
    },
    "1245": {
      "op": "DUP9"
    },
    "1246": {
      "op": "AND"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "SWAP6"
    },
    "1250": {
      "op": "SWAP1"
    },
    "1251": {
      "op": "SWAP7"
    },
    "1252": {
      "op": "AND"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1255": {
      "op": "DUP7"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1260": {
      "op": "DUP6"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "SWAP4"
    },
    "1263": {
      "op": "SWAP1"
    },
    "1264": {
      "op": "SWAP4"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1268": {
      "op": "DUP5"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "SWAP2"
    },
    "1271": {
      "op": "SWAP1"
    },
    "1272": {
      "op": "SWAP2"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1276": {
      "op": "AND"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1279": {
      "op": "DUP4"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1284": {
      "op": "DUP3"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1289": {
      "op": "DUP2"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "SWAP2"
    },
    "1292": {
      "op": "SWAP1"
    },
    "1293": {
      "op": "SWAP2"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "JUMP"
    },
    "1300": {
      "op": "JUMPDEST"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1303": {
      "op": "DUP1"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "DUP4"
    },
    "1307": {
      "op": "MLOAD"
    },
    "1308": {
      "op": "SWAP1"
    },
    "1309": {
      "op": "DUP3"
    },
    "1310": {
      "op": "ADD"
    },
    "1311": {
      "op": "DUP2"
    },
    "1312": {
      "op": "SWAP1"
    },
    "1313": {
      "op": "MSTORE"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "SWAP1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1322": {
      "op": "DUP5"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "DUP8"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "DUP5"
    },
    "1329": {
      "op": "JUMPDEST"
    },
    "1330": {
      "op": "DUP3"
    },
    "1331": {
      "op": "DUP2"
    },
    "1332": {
      "op": "LT"
    },
    "1333": {
      "op": "ISZERO"
    },
    "1334": {
      "op": "PUSH2",
      "value": "0x54F"
    },
    "1337": {
      "op": "JUMPI"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "MLOAD"
    },
    "1340": {
      "op": "ISZERO"
    },
    "1341": {
      "op": "ISZERO"
    },
    "1342": {
      "op": "DUP5"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "SWAP3"
    },
    "1345": {
      "op": "DUP5"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "SWAP3"
    },
    "1348": {
      "op": "SWAP1"
    },
    "1349": {
      "op": "DUP5"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "SWAP1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "op": "JUMPDEST"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "op": "DUP4"
    },
    "1364": {
      "op": "DUP2"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "op": "DUP3"
    },
    "1367": {
      "op": "DUP6"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "DUP1"
    },
    "1371": {
      "op": "DUP6"
    },
    "1372": {
      "op": "MLOAD"
    },
    "1373": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "DUP5"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x614"
    },
    "1381": {
      "op": "JUMP"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "op": "SWAP2"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "op": "DUP2"
    },
    "1386": {
      "op": "SWAP3"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "DUP4"
    },
    "1389": {
      "op": "DUP2"
    },
    "1390": {
      "op": "MUL"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "DUP5"
    },
    "1394": {
      "op": "DUP9"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "DUP7"
    },
    "1397": {
      "op": "JUMPDEST"
    },
    "1398": {
      "op": "DUP4"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "LT"
    },
    "1401": {
      "op": "ISZERO"
    },
    "1402": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1405": {
      "op": "JUMPI"
    },
    "1406": {
      "op": "DUP6"
    },
    "1407": {
      "op": "DUP4"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "DUP6"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0x58D"
    },
    "1414": {
      "op": "DUP4"
    },
    "1415": {
      "op": "DUP4"
    },
    "1416": {
      "op": "MLOAD"
    },
    "1417": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "1420": {
      "op": "JUMP"
    },
    "1421": {
      "op": "JUMPDEST"
    },
    "1422": {
      "op": "SWAP5"
    },
    "1423": {
      "op": "DUP8"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "SWAP5"
    },
    "1426": {
      "op": "SWAP3"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "SWAP1"
    },
    "1429": {
      "op": "DUP7"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "SWAP1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "PUSH2",
      "value": "0x575"
    },
    "1438": {
      "op": "JUMP"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "SWAP1"
    },
    "1442": {
      "op": "SWAP10"
    },
    "1443": {
      "op": "SWAP9"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "JUMP"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1459": {
      "op": "DUP3"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x5C1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "op": "DUP4"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "op": "DUP5"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "1472": {
      "op": "JUMP"
    },
    "1473": {
      "op": "JUMPDEST"
    },
    "1474": {
      "op": "SWAP4"
    },
    "1475": {
      "op": "SWAP3"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "JUMP"
    },
    "1480": {
      "op": "JUMPDEST"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "DUP4"
    },
    "1485": {
      "op": "CALLDATALOAD"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1488": {
      "op": "NOT"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "CALLDATASIZE"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "op": "DUP2"
    },
    "1494": {
      "op": "SLT"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1498": {
      "op": "JUMPI"
    },
    "1499": {
      "op": "DUP3"
    },
    "1500": {
      "op": "DUP4"
    },
    "1501": {
      "op": "REVERT"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "DUP4"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "DUP1"
    },
    "1506": {
      "op": "CALLDATALOAD"
    },
    "1507": {
      "op": "SWAP2"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "GT"
    },
    "1520": {
      "op": "ISZERO"
    },
    "1521": {
      "op": "PUSH2",
      "value": "0x5F8"
    },
    "1524": {
      "op": "JUMPI"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "DUP4"
    },
    "1527": {
      "op": "REVERT"
    },
    "1528": {
      "op": "JUMPDEST"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1531": {
      "op": "ADD"
    },
    "1532": {
      "op": "SWAP2"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "op": "CALLDATASIZE"
    },
    "1535": {
      "op": "DUP2"
    },
    "1536": {
      "op": "SWAP1"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "SGT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x60D"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "DUP1"
    },
    "1548": {
      "op": "REVERT"
    },
    "1549": {
      "op": "JUMPDEST"
    },
    "1550": {
      "op": "SWAP3"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "op": "SWAP3"
    },
    "1553": {
      "op": "SWAP1"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "SWAP1"
    },
    "1558": {
      "op": "DUP2"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "SWAP1"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1568": {
      "op": "JUMPDEST"
    },
    "1569": {
      "op": "DUP4"
    },
    "1570": {
      "op": "DUP2"
    },
    "1571": {
      "op": "LT"
    },
    "1572": {
      "op": "ISZERO"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x638"
    },
    "1576": {
      "op": "JUMPI"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MLOAD"
    },
    "1581": {
      "op": "DUP4"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "op": "PUSH2",
      "value": "0x620"
    },
    "1591": {
      "op": "JUMP"
    },
    "1592": {
      "op": "JUMPDEST"
    },
    "1593": {
      "op": "DUP4"
    },
    "1594": {
      "op": "DUP2"
    },
    "1595": {
      "op": "GT"
    },
    "1596": {
      "op": "ISZERO"
    },
    "1597": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1600": {
      "op": "JUMPI"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "DUP5"
    },
    "1604": {
      "op": "DUP5"
    },
    "1605": {
      "op": "ADD"
    },
    "1606": {
      "op": "MSTORE"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "JUMP"
    },
    "1613": {
      "op": "JUMPDEST"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "op": "DUP2"
    },
    "1623": {
      "op": "AND"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "EQ"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1629": {
      "op": "JUMPI"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "REVERT"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "JUMP"
    }
  },
  "sha1": "51cd1e8a8e346871227bee8f9491a9981ca9e55d",
  "source": "\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\n// solhint-disable avoid-low-level-calls\n// solhint-disable no-inline-assembly\n\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\n\nimport \"./BoringERC20.sol\";\n\ncontract BaseBoringBatchable {\n    /// @dev Helper function to extract a useful revert message from a failed call.\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            // Slice the sighash.\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\n    }\n\n    /// @notice Allows batched call to self (this contract).\n    /// @param calls An array of inputs for each call.\n    /// @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n    /// @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n    /// @return results An array with the returned data of each function call, mapped one-to-one to `calls`.\n    // F1: External is ok here because this is the batch function, adding it to a batch makes no sense\n    // F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\n    // C3: The length of the loop is fully under user control, so can't be exploited\n    // C7: Delegatecall is only used on the same contract, so it's safe\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results) {\n        successes = new bool[](calls.length);\n        results = new bytes[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\n            require(success || !revertOnFail, _getRevertMsg(result));\n            successes[i] = success;\n            results[i] = result;\n        }\n    }\n}\n\ncontract BoringBatchable is BaseBoringBatchable {\n    /// @notice Call wrapper that performs `ERC20.permit` on `token`.\n    /// Lookup `IERC20.permit`.\n    // F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\n    //     if part of a batch this could be used to grief once as the second call would not need the permit\n    function permitToken(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        token.permit(from, to, amount, deadline, v, r, s);\n    }\n}",
  "sourceMap": "2281:653:16:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Utils/BoringBatchable.sol",
  "type": "contract"
}