{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "name": "getInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "name": "initToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sigNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenTemplate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/OpenZeppelin/access/AccessControl.sol",
    "25": "contracts/OpenZeppelin/math/SafeMath.sol",
    "31": "contracts/OpenZeppelin/utils/Context.sol",
    "34": "contracts/OpenZeppelin/utils/EnumerableSet.sol",
    "40": "contracts/Tokens/ERC20.sol",
    "45": "contracts/Tokens/SushiToken.sol",
    "78": "contracts/interfaces/IERC20.sol",
    "89": "contracts/interfaces/IMisoToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Tokens/SushiToken.sol",
    "exportedSymbols": {
      "SushiToken": [
        22627
      ]
    },
    "id": 22628,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21840,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "absolutePath": "contracts/Tokens/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 21841,
        "nodeType": "ImportDirective",
        "scope": 22628,
        "sourceUnit": 21433,
        "src": "25:21:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IMisoToken.sol",
        "file": "../interfaces/IMisoToken.sol",
        "id": 21842,
        "nodeType": "ImportDirective",
        "scope": 22628,
        "sourceUnit": 30479,
        "src": "47:38:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZeppelin/access/AccessControl.sol",
        "file": "../OpenZeppelin/access/AccessControl.sol",
        "id": 21843,
        "nodeType": "ImportDirective",
        "scope": 22628,
        "sourceUnit": 17301,
        "src": "86:50:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21844,
              "name": "IMisoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30478,
              "src": "616:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoToken_$30478",
                "typeString": "contract IMisoToken"
              }
            },
            "id": 21845,
            "nodeType": "InheritanceSpecifier",
            "src": "616:10:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21846,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17300,
              "src": "628:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$17300",
                "typeString": "contract AccessControl"
              }
            },
            "id": 21847,
            "nodeType": "InheritanceSpecifier",
            "src": "628:13:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21848,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21432,
              "src": "643:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$21432",
                "typeString": "contract ERC20"
              }
            },
            "id": 21849,
            "nodeType": "InheritanceSpecifier",
            "src": "643:5:45"
          }
        ],
        "contractDependencies": [
          17300,
          18760,
          21432,
          30478,
          30756
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22627,
        "linearizedBaseContracts": [
          22627,
          21432,
          17300,
          18760,
          30756,
          30478
        ],
        "name": "SushiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              30477
            ],
            "constant": true,
            "documentation": {
              "id": 21850,
              "nodeType": "StructuredDocumentation",
              "src": "655:117:45",
              "text": "@notice Miso template id for the token factory.\n @dev For different token types, this must be incremented."
            },
            "functionSelector": "0814d3dd",
            "id": 21854,
            "mutability": "constant",
            "name": "tokenTemplate",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 21852,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "801:8:45"
            },
            "scope": 22627,
            "src": "777:50:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21851,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 21853,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "826:1:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 21859,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "834:62:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21855,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "834:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 21857,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "882:13:45",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 21856,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "872:9:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21858,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "872:24:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21891,
              "nodeType": "Block",
              "src": "1013:175:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21871,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21861,
                        "src": "1034:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21872,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21863,
                        "src": "1041:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 21870,
                      "name": "_initERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20890,
                      "src": "1023:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 21873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21874,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:26:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21876,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17043,
                        "src": "1070:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21877,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21865,
                        "src": "1090:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21875,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17226,
                      "src": "1059:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21879,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:38:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21881,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21859,
                        "src": "1118:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21882,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21865,
                        "src": "1131:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21880,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17226,
                      "src": "1107:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 21883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21884,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:31:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21886,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1154:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1154:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21888,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21867,
                        "src": "1166:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21885,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21308,
                      "src": "1148:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:33:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21890,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:33:45"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dc7df72",
            "id": 21892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21861,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21892,
                  "src": "922:19:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21860,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21863,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21892,
                  "src": "943:21:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21865,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21892,
                  "src": "966:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21867,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21892,
                  "src": "982:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "921:84:45"
            },
            "returnParameters": {
              "id": 21869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:45"
            },
            "scope": 22627,
            "src": "903:285:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30467
            ],
            "body": {
              "id": 21898,
              "nodeType": "Block",
              "src": "1256:2:45",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "4ddf47d4",
            "id": 21899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1239:8:45"
            },
            "parameters": {
              "id": 21895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21894,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21899,
                  "src": "1208:20:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21893,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1207:22:45"
            },
            "returnParameters": {
              "id": 21897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:0:45"
            },
            "scope": 22627,
            "src": "1194:64:45",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              30472
            ],
            "body": {
              "id": 21934,
              "nodeType": "Block",
              "src": "1335:238:45",
              "statements": [
                {
                  "assignments": [
                    21906,
                    21908,
                    21910,
                    21912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21906,
                      "mutability": "mutable",
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21934,
                      "src": "1346:19:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 21905,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1346:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21908,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21934,
                      "src": "1375:21:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 21907,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1375:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21910,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21934,
                      "src": "1406:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1406:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21912,
                      "mutability": "mutable",
                      "name": "_initialSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21934,
                      "src": "1430:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21911,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1430:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21926,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21915,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21901,
                        "src": "1467:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 21917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1475:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 21916,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1475:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 21919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1483:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 21918,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1483:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 21921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1491:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21920,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1491:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 21923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1500:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 21922,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1500:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 21924,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1474:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(string storage pointer),type(string storage pointer),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(string storage pointer),type(string storage pointer),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21913,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1456:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 21914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1456:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 21925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:53:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(string memory,string memory,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1345:164:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21928,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21906,
                        "src": "1530:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21929,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21908,
                        "src": "1536:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21930,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21910,
                        "src": "1544:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21931,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21912,
                        "src": "1551:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21927,
                      "name": "initToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21892,
                        21935
                      ],
                      "referencedDeclaration": 21892,
                      "src": "1520:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 21932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:46:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21933,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:46:45"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "60b1cc80",
            "id": 21935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1326:8:45"
            },
            "parameters": {
              "id": 21902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21901,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21935,
                  "src": "1292:20:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21900,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:36:45"
            },
            "returnParameters": {
              "id": 21904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:0:45"
            },
            "scope": 22627,
            "src": "1264:309:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21957,
              "nodeType": "Block",
              "src": "2037:74:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21951,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21938,
                        "src": "2065:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21952,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21940,
                        "src": "2072:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21953,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21942,
                        "src": "2081:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21954,
                        "name": "_initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21944,
                        "src": "2089:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21949,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2054:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 21950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2054:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 21955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:50:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 21948,
                  "id": 21956,
                  "nodeType": "Return",
                  "src": "2047:57:45"
                }
              ]
            },
            "documentation": {
              "id": 21936,
              "nodeType": "StructuredDocumentation",
              "src": "1579:235:45",
              "text": " @dev Generates init data for Token Factory\n @param _name - Token name\n @param _symbol - Token symbol\n @param _owner - Contract owner\n @param _initialSupply Amount of tokens minted on creation"
            },
            "functionSelector": "f21f007c",
            "id": 21958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInitData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21938,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21958,
                  "src": "1849:21:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21937,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21940,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21958,
                  "src": "1880:23:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21939,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21942,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21958,
                  "src": "1913:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21944,
                  "mutability": "mutable",
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21958,
                  "src": "1937:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1839:126:45"
            },
            "returnParameters": {
              "id": 21948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21947,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21958,
                  "src": "2013:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2012:20:45"
            },
            "scope": 22627,
            "src": "1819:292:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 21991,
              "nodeType": "Block",
              "src": "2266:196:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21968,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21859,
                            "src": "2292:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21969,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18748,
                              "src": "2305:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 21970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2305:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 21967,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17089,
                          "src": "2284:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 21971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2284:34:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5375736869546f6b656e3a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 21972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:43:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_107cc1b72aae962f1e0b8ce6f649893c853f4b25ee76f2379c5935bd199edb1d",
                          "typeString": "literal_string \"SushiToken: must have minter role to mint\""
                        },
                        "value": "SushiToken: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_107cc1b72aae962f1e0b8ce6f649893c853f4b25ee76f2379c5935bd199edb1d",
                          "typeString": "literal_string \"SushiToken: must have minter role to mint\""
                        }
                      ],
                      "id": 21966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2276:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:88:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21974,
                  "nodeType": "ExpressionStatement",
                  "src": "2276:88:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21976,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21961,
                        "src": "2380:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21977,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21963,
                        "src": "2385:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21975,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21308,
                      "src": "2374:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2374:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21979,
                  "nodeType": "ExpressionStatement",
                  "src": "2374:19:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 21983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2426:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2418:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2418:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2418:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 21985,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21997,
                          "src": "2430:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 21987,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 21986,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21961,
                          "src": "2441:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2430:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21988,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21963,
                        "src": "2447:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21980,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22489,
                      "src": "2403:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:52:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21990,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:52:45"
                }
              ]
            },
            "documentation": {
              "id": 21959,
              "nodeType": "StructuredDocumentation",
              "src": "2117:92:45",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
            },
            "functionSelector": "40c10f19",
            "id": 21992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21961,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21992,
                  "src": "2228:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21963,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21992,
                  "src": "2241:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2227:30:45"
            },
            "returnParameters": {
              "id": 21965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2266:0:45"
            },
            "scope": 22627,
            "src": "2214:248:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21993,
              "nodeType": "StructuredDocumentation",
              "src": "2866:46:45",
              "text": "@notice A record of each accounts delegate"
            },
            "id": 21997,
            "mutability": "mutable",
            "name": "_delegates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "2917:48:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 21996,
              "keyType": {
                "id": 21994,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2926:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2917:28:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 21995,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2937:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SushiToken.Checkpoint",
            "id": 22002,
            "members": [
              {
                "constant": false,
                "id": 21999,
                "mutability": "mutable",
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22002,
                "src": "3076:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 21998,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3076:6:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22001,
                "mutability": "mutable",
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 22002,
                "src": "3102:13:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22000,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3102:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 22627,
            "src": "3048:74:45",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22003,
              "nodeType": "StructuredDocumentation",
              "src": "3128:68:45",
              "text": "@notice A record of votes checkpoints for each account, by index"
            },
            "functionSelector": "f1127ed8",
            "id": 22009,
            "mutability": "mutable",
            "name": "checkpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "3201:70:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
            },
            "typeName": {
              "id": 22008,
              "keyType": {
                "id": 22004,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3210:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3201:51:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
              },
              "valueType": {
                "id": 22007,
                "keyType": {
                  "id": 22005,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3230:6:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "3221:30:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 22006,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22002,
                  "src": "3240:10:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$22002_storage_ptr",
                    "typeString": "struct SushiToken.Checkpoint"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22010,
              "nodeType": "StructuredDocumentation",
              "src": "3278:54:45",
              "text": "@notice The number of checkpoints for each account"
            },
            "functionSelector": "6fcfff45",
            "id": 22014,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "3337:49:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 22013,
              "keyType": {
                "id": 22011,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3346:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3337:27:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 22012,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "3357:6:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 22015,
              "nodeType": "StructuredDocumentation",
              "src": "3393:58:45",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "id": 22020,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "3456:122:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22016,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3456:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 22018,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3508:69:45",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 22017,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3498:9:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 22019,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3498:80:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 22021,
              "nodeType": "StructuredDocumentation",
              "src": "3585:79:45",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
            },
            "functionSelector": "e7a324dc",
            "id": 22026,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "3669:117:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 22022,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3669:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 22024,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3725:60:45",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 22023,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3715:9:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 22025,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3715:71:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22027,
              "nodeType": "StructuredDocumentation",
              "src": "3793:66:45",
              "text": "@notice A record of states for signing / validating signatures"
            },
            "functionSelector": "f990ccd7",
            "id": 22031,
            "mutability": "mutable",
            "name": "sigNonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 22627,
            "src": "3864:42:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22030,
              "keyType": {
                "id": 22028,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3873:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3864:25:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 22029,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3884:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 22032,
              "nodeType": "StructuredDocumentation",
              "src": "3913:71:45",
              "text": "@notice An event thats emitted when an account changes its delegate"
            },
            "id": 22040,
            "name": "DelegateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22034,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22040,
                  "src": "4011:25:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22036,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22040,
                  "src": "4038:28:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22038,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22040,
                  "src": "4068:26:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4010:85:45"
            },
            "src": "3989:107:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 22041,
              "nodeType": "StructuredDocumentation",
              "src": "4102:81:45",
              "text": "@notice An event thats emitted when a delegate account's vote balance changes"
            },
            "id": 22049,
            "name": "DelegateVotesChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22049,
                  "src": "4215:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22045,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22049,
                  "src": "4241:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22044,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22047,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22049,
                  "src": "4263:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22046,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4214:65:45"
            },
            "src": "4188:92:45"
          },
          {
            "body": {
              "id": 22061,
              "nodeType": "Block",
              "src": "4520:45:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22057,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21997,
                      "src": "4537:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 22059,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 22058,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22052,
                      "src": "4548:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4537:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 22056,
                  "id": 22060,
                  "nodeType": "Return",
                  "src": "4530:28:45"
                }
              ]
            },
            "documentation": {
              "id": 22050,
              "nodeType": "StructuredDocumentation",
              "src": "4286:131:45",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
            },
            "functionSelector": "587cde1e",
            "id": 22062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22052,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22062,
                  "src": "4441:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4440:19:45"
            },
            "returnParameters": {
              "id": 22056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22055,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22062,
                  "src": "4507:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4507:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4506:9:45"
            },
            "scope": 22627,
            "src": "4422:143:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22074,
              "nodeType": "Block",
              "src": "4749:56:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4776:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4776:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22071,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22065,
                        "src": "4788:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22068,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22382,
                      "src": "4766:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 22072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4766:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 22067,
                  "id": 22073,
                  "nodeType": "Return",
                  "src": "4759:39:45"
                }
              ]
            },
            "documentation": {
              "id": 22063,
              "nodeType": "StructuredDocumentation",
              "src": "4570:128:45",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
            },
            "functionSelector": "5c19a95c",
            "id": 22075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22065,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22075,
                  "src": "4721:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4720:19:45"
            },
            "returnParameters": {
              "id": 22067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4749:0:45"
            },
            "scope": 22627,
            "src": "4703:102:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22177,
              "nodeType": "Block",
              "src": "5401:970:45",
              "statements": [
                {
                  "assignments": [
                    22092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22092,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22177,
                      "src": "5411:23:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 22091,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5411:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22112,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22096,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22020,
                            "src": "5488:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 22100,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 20900,
                                      "src": "5537:4:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 22101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5537:6:45",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 22099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5531:5:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 22098,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5531:5:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 22102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5531:13:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 22097,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5521:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 22103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5521:24:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 22104,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22598,
                              "src": "5563:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 22105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5563:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22108,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5601:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiToken_$22627",
                                  "typeString": "contract SushiToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiToken_$22627",
                                  "typeString": "contract SushiToken"
                                }
                              ],
                              "id": 22107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5593:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22106,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5593:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5593:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22094,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5460:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 22095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5460:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 22110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5460:160:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22093,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5437:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5437:193:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5411:219:45"
                },
                {
                  "assignments": [
                    22114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22114,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22177,
                      "src": "5641:18:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 22113,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5641:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22124,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 22118,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22026,
                            "src": "5713:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 22119,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22078,
                            "src": "5750:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 22120,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22080,
                            "src": "5777:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 22121,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22082,
                            "src": "5800:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22116,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5685:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 22117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5685:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 22122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5685:135:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22115,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5662:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5662:168:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5641:189:45"
                },
                {
                  "assignments": [
                    22126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22126,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22177,
                      "src": "5841:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 22125,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5841:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 22130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5915:10:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 22131,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22092,
                            "src": "5943:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 22132,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22114,
                            "src": "5976:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 22128,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5881:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 22129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5881:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 22133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5881:119:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22127,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5858:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5858:152:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5841:169:45"
                },
                {
                  "assignments": [
                    22137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22137,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22177,
                      "src": "6021:17:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6021:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22144,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22139,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22126,
                        "src": "6051:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22140,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22084,
                        "src": "6059:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22141,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22086,
                        "src": "6062:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22142,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22088,
                        "src": "6065:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 22138,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "6041:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 22143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6041:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6021:46:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22146,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22137,
                          "src": "6085:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 22149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6106:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6098:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22147,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6098:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 22150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6098:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6085:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                        "id": 22152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6110:41:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        },
                        "value": "SUSHI::delegateBySig: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        }
                      ],
                      "id": 22145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6077:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6077:75:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22154,
                  "nodeType": "ExpressionStatement",
                  "src": "6077:75:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22156,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22080,
                          "src": "6170:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6179:22:45",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 22157,
                              "name": "sigNonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22031,
                              "src": "6179:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 22159,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22158,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22137,
                              "src": "6189:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6179:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6170:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                        "id": 22162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6203:37:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        },
                        "value": "SUSHI::delegateBySig: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        }
                      ],
                      "id": 22155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6162:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6162:79:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22164,
                  "nodeType": "ExpressionStatement",
                  "src": "6162:79:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22166,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "6259:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 22167,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22082,
                          "src": "6266:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6259:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                        "id": 22169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6274:41:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        },
                        "value": "SUSHI::delegateBySig: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        }
                      ],
                      "id": 22165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6251:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6251:65:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22171,
                  "nodeType": "ExpressionStatement",
                  "src": "6251:65:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22173,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22137,
                        "src": "6343:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22174,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22078,
                        "src": "6354:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22172,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22382,
                      "src": "6333:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 22175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6333:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 22090,
                  "id": 22176,
                  "nodeType": "Return",
                  "src": "6326:38:45"
                }
              ]
            },
            "documentation": {
              "id": 22076,
              "nodeType": "StructuredDocumentation",
              "src": "4811:412:45",
              "text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
            },
            "functionSelector": "c3cda520",
            "id": 22178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22078,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5260:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5260:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22080,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5287:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22079,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22082,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5307:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22084,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5328:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 22083,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5328:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22086,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5345:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22085,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5345:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22088,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22178,
                  "src": "5364:9:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22087,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5364:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5250:129:45"
            },
            "returnParameters": {
              "id": 22090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5401:0:45"
            },
            "scope": 22627,
            "src": "5228:1143:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22206,
              "nodeType": "Block",
              "src": "6667:146:45",
              "statements": [
                {
                  "assignments": [
                    22187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22187,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22206,
                      "src": "6677:19:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22186,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6677:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22191,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22188,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22014,
                      "src": "6699:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 22190,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 22189,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22181,
                      "src": "6714:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6699:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6677:45:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 22194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22192,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22187,
                        "src": "6739:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6754:1:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6739:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 22203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6805:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 22204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6739:67:45",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 22195,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22009,
                            "src": "6758:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 22197,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 22196,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22181,
                            "src": "6770:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6758:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 22201,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 22200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 22198,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22187,
                            "src": "6779:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 22199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6794:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6779:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6758:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 22202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22001,
                      "src": "6758:44:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22185,
                  "id": 22205,
                  "nodeType": "Return",
                  "src": "6732:74:45"
                }
              ]
            },
            "documentation": {
              "id": 22179,
              "nodeType": "StructuredDocumentation",
              "src": "6377:183:45",
              "text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
            },
            "functionSelector": "b4b5ea57",
            "id": 22207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22181,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22207,
                  "src": "6590:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6589:17:45"
            },
            "returnParameters": {
              "id": 22185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22207,
                  "src": "6654:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6654:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6653:9:45"
            },
            "scope": 22627,
            "src": "6565:248:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22338,
              "nodeType": "Block",
              "src": "7353:1100:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22218,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22212,
                          "src": "7371:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22219,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7385:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 22220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7385:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7371:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                        "id": 22222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7399:42:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        },
                        "value": "SUSHI::getPriorVotes: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        }
                      ],
                      "id": 22217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7363:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7363:79:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22224,
                  "nodeType": "ExpressionStatement",
                  "src": "7363:79:45"
                },
                {
                  "assignments": [
                    22226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22226,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22338,
                      "src": "7453:19:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22225,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7453:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22230,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22227,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22014,
                      "src": "7475:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 22229,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 22228,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22210,
                      "src": "7490:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7475:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7453:45:45"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 22233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22231,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22226,
                      "src": "7512:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 22232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7528:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7512:17:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22237,
                  "nodeType": "IfStatement",
                  "src": "7508:56:45",
                  "trueBody": {
                    "id": 22236,
                    "nodeType": "Block",
                    "src": "7531:33:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7552:1:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 22216,
                        "id": 22235,
                        "nodeType": "Return",
                        "src": "7545:8:45"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 22238,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22009,
                            "src": "7621:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 22240,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 22239,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22210,
                            "src": "7633:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7621:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 22244,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 22243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 22241,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22226,
                            "src": "7642:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 22242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7657:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7642:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7621:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 22245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21999,
                      "src": "7621:48:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 22246,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22212,
                      "src": "7673:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7621:63:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22258,
                  "nodeType": "IfStatement",
                  "src": "7617:145:45",
                  "trueBody": {
                    "id": 22257,
                    "nodeType": "Block",
                    "src": "7686:76:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 22248,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22009,
                                "src": "7707:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 22250,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 22249,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22210,
                                "src": "7719:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7707:20:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 22254,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 22253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 22251,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22226,
                                "src": "7728:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 22252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7743:1:45",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7728:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7707:38:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "id": 22255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22001,
                          "src": "7707:44:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 22216,
                        "id": 22256,
                        "nodeType": "Return",
                        "src": "7700:51:45"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 22259,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22009,
                            "src": "7820:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 22261,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 22260,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22210,
                            "src": "7832:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7820:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 22263,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7841:1:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7820:23:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 22264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21999,
                      "src": "7820:33:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 22265,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22212,
                      "src": "7856:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7820:47:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22270,
                  "nodeType": "IfStatement",
                  "src": "7816:86:45",
                  "trueBody": {
                    "id": 22269,
                    "nodeType": "Block",
                    "src": "7869:33:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7890:1:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 22216,
                        "id": 22268,
                        "nodeType": "Return",
                        "src": "7883:8:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22272,
                      "mutability": "mutable",
                      "name": "lower",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22338,
                      "src": "7912:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22271,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7912:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22274,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 22273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7927:1:45",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7912:16:45"
                },
                {
                  "assignments": [
                    22276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22276,
                      "mutability": "mutable",
                      "name": "upper",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22338,
                      "src": "7938:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22275,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7938:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22280,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 22279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22277,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22226,
                      "src": "7953:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 22278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7968:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7953:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7938:31:45"
                },
                {
                  "body": {
                    "id": 22329,
                    "nodeType": "Block",
                    "src": "8001:396:45",
                    "statements": [
                      {
                        "assignments": [
                          22285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22285,
                            "mutability": "mutable",
                            "name": "center",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22329,
                            "src": "8015:13:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 22284,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8015:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22294,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 22293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 22286,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22276,
                            "src": "8031:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 22292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 22289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 22287,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22276,
                                    "src": "8040:5:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 22288,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22272,
                                    "src": "8048:5:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8040:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 22290,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8039:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 22291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8057:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "8039:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8031:27:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8015:43:45"
                      },
                      {
                        "assignments": [
                          22296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22296,
                            "mutability": "mutable",
                            "name": "cp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22329,
                            "src": "8099:20:45",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$22002_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 22295,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 22002,
                              "src": "8099:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$22002_storage_ptr",
                                "typeString": "struct SushiToken.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22302,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 22297,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22009,
                              "src": "8122:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 22299,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22298,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22210,
                              "src": "8134:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8122:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 22301,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 22300,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22285,
                            "src": "8143:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8122:28:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8099:51:45"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 22303,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22296,
                              "src": "8168:2:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$22002_memory_ptr",
                                "typeString": "struct SushiToken.Checkpoint memory"
                              }
                            },
                            "id": 22304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21999,
                            "src": "8168:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 22305,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22212,
                            "src": "8184:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8168:27:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 22314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 22311,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22296,
                                "src": "8255:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$22002_memory_ptr",
                                  "typeString": "struct SushiToken.Checkpoint memory"
                                }
                              },
                              "id": 22312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21999,
                              "src": "8255:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 22313,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22212,
                              "src": "8270:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8255:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 22326,
                            "nodeType": "Block",
                            "src": "8336:51:45",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 22320,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22276,
                                    "src": "8354:5:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 22323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 22321,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22285,
                                      "src": "8362:6:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 22322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8371:1:45",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "8362:10:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8354:18:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 22325,
                                "nodeType": "ExpressionStatement",
                                "src": "8354:18:45"
                              }
                            ]
                          },
                          "id": 22327,
                          "nodeType": "IfStatement",
                          "src": "8251:136:45",
                          "trueBody": {
                            "id": 22319,
                            "nodeType": "Block",
                            "src": "8283:47:45",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 22315,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22272,
                                    "src": "8301:5:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "id": 22316,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22285,
                                    "src": "8309:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "8301:14:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 22318,
                                "nodeType": "ExpressionStatement",
                                "src": "8301:14:45"
                              }
                            ]
                          }
                        },
                        "id": 22328,
                        "nodeType": "IfStatement",
                        "src": "8164:223:45",
                        "trueBody": {
                          "id": 22310,
                          "nodeType": "Block",
                          "src": "8197:48:45",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 22307,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22296,
                                  "src": "8222:2:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$22002_memory_ptr",
                                    "typeString": "struct SushiToken.Checkpoint memory"
                                  }
                                },
                                "id": 22308,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22001,
                                "src": "8222:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 22216,
                              "id": 22309,
                              "nodeType": "Return",
                              "src": "8215:15:45"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 22283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22281,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22276,
                      "src": "7986:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 22282,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22272,
                      "src": "7994:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7986:13:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22330,
                  "nodeType": "WhileStatement",
                  "src": "7979:418:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22331,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22009,
                          "src": "8413:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                          }
                        },
                        "id": 22333,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 22332,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22210,
                          "src": "8425:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8413:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                          "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                        }
                      },
                      "id": 22335,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 22334,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22272,
                        "src": "8434:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8413:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                        "typeString": "struct SushiToken.Checkpoint storage ref"
                      }
                    },
                    "id": 22336,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22001,
                    "src": "8413:33:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22216,
                  "id": 22337,
                  "nodeType": "Return",
                  "src": "8406:40:45"
                }
              ]
            },
            "documentation": {
              "id": 22208,
              "nodeType": "StructuredDocumentation",
              "src": "6819:411:45",
              "text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
            },
            "functionSelector": "782d6fe1",
            "id": 22339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22210,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22339,
                  "src": "7258:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7258:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22212,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22339,
                  "src": "7275:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7257:35:45"
            },
            "returnParameters": {
              "id": 22216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22339,
                  "src": "7340:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7340:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7339:9:45"
            },
            "scope": 22627,
            "src": "7235:1218:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22381,
              "nodeType": "Block",
              "src": "8537:420:45",
              "statements": [
                {
                  "assignments": [
                    22347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22347,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22381,
                      "src": "8547:23:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22346,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8547:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22351,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 22348,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21997,
                      "src": "8573:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 22350,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 22349,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22341,
                      "src": "8584:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8573:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8547:47:45"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 22352,
                      "name": "currentDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22347,
                      "src": "8608:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 22353,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22343,
                      "src": "8627:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8608:28:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22380,
                  "nodeType": "IfStatement",
                  "src": "8604:347:45",
                  "trueBody": {
                    "id": 22379,
                    "nodeType": "Block",
                    "src": "8637:314:45",
                    "statements": [
                      {
                        "assignments": [
                          22356
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22356,
                            "mutability": "mutable",
                            "name": "delegatorBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 22379,
                            "src": "8651:24:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22355,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8651:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 22360,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22358,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22341,
                              "src": "8688:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22357,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20944,
                            "src": "8678:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 22359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8651:47:45"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 22361,
                              "name": "_delegates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21997,
                              "src": "8758:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 22363,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22362,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22341,
                              "src": "8769:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8758:21:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 22364,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22343,
                            "src": "8782:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8758:33:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22366,
                        "nodeType": "ExpressionStatement",
                        "src": "8758:33:45"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22368,
                              "name": "delegator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22341,
                              "src": "8827:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22369,
                              "name": "currentDelegate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22347,
                              "src": "8838:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22370,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22343,
                              "src": "8855:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22367,
                            "name": "DelegateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22040,
                            "src": "8811:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 22371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8811:54:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22372,
                        "nodeType": "EmitStatement",
                        "src": "8806:59:45"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 22374,
                              "name": "currentDelegate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22347,
                              "src": "8895:15:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22375,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22343,
                              "src": "8912:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 22376,
                              "name": "delegatorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22356,
                              "src": "8923:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 22373,
                            "name": "_moveDelegates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22489,
                            "src": "8880:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 22377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8880:60:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22378,
                        "nodeType": "ExpressionStatement",
                        "src": "8880:60:45"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 22382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22341,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22382,
                  "src": "8478:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22343,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22382,
                  "src": "8497:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8497:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8477:38:45"
            },
            "returnParameters": {
              "id": 22345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8537:0:45"
            },
            "scope": 22627,
            "src": "8459:498:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22488,
              "nodeType": "Block",
              "src": "9044:848:45",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 22393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22391,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22384,
                        "src": "9058:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 22392,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22386,
                        "src": "9068:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9058:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22394,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22388,
                        "src": "9078:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9087:1:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9078:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9058:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 22487,
                  "nodeType": "IfStatement",
                  "src": "9054:832:45",
                  "trueBody": {
                    "id": 22486,
                    "nodeType": "Block",
                    "src": "9090:796:45",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 22398,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22384,
                            "src": "9108:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 22401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9126:1:45",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 22400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9118:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22399,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9118:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9118:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "9108:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 22441,
                        "nodeType": "IfStatement",
                        "src": "9104:379:45",
                        "trueBody": {
                          "id": 22440,
                          "nodeType": "Block",
                          "src": "9130:353:45",
                          "statements": [
                            {
                              "assignments": [
                                22405
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22405,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22440,
                                  "src": "9195:16:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 22404,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9195:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22409,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22406,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22014,
                                  "src": "9214:14:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 22408,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 22407,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22384,
                                  "src": "9229:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9214:22:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9195:41:45"
                            },
                            {
                              "assignments": [
                                22411
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22411,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22440,
                                  "src": "9254:17:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 22410,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9254:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22425,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 22414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 22412,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22405,
                                    "src": "9274:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 22413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9286:1:45",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9274:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 22423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9333:1:45",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 22424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9274:60:45",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 22415,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22009,
                                        "src": "9290:11:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 22417,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 22416,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22384,
                                        "src": "9302:6:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9290:19:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 22421,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 22420,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 22418,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22405,
                                        "src": "9310:9:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 22419,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9322:1:45",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9310:13:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9290:34:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 22422,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22001,
                                  "src": "9290:40:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9254:80:45"
                            },
                            {
                              "assignments": [
                                22427
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22427,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22440,
                                  "src": "9352:17:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 22426,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9352:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22432,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22430,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22388,
                                    "src": "9386:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 22428,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22411,
                                    "src": "9372:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 22429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17687,
                                  "src": "9372:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 22431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9372:21:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9352:41:45"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22434,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22384,
                                    "src": "9428:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22435,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22405,
                                    "src": "9436:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22436,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22411,
                                    "src": "9447:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22437,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22427,
                                    "src": "9458:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 22433,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22562,
                                  "src": "9411:16:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 22438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9411:57:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 22439,
                              "nodeType": "ExpressionStatement",
                              "src": "9411:57:45"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 22442,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22386,
                            "src": "9501:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 22445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9519:1:45",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 22444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9511:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22443,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9511:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 22446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9511:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "9501:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 22485,
                        "nodeType": "IfStatement",
                        "src": "9497:379:45",
                        "trueBody": {
                          "id": 22484,
                          "nodeType": "Block",
                          "src": "9523:353:45",
                          "statements": [
                            {
                              "assignments": [
                                22449
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22449,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22484,
                                  "src": "9588:16:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 22448,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9588:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22453,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22450,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22014,
                                  "src": "9607:14:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 22452,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 22451,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22386,
                                  "src": "9622:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9607:22:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9588:41:45"
                            },
                            {
                              "assignments": [
                                22455
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22455,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22484,
                                  "src": "9647:17:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 22454,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9647:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22469,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 22458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 22456,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22449,
                                    "src": "9667:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 22457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9679:1:45",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9667:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 22467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9726:1:45",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 22468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9667:60:45",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 22459,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22009,
                                        "src": "9683:11:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 22461,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 22460,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22386,
                                        "src": "9695:6:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9683:19:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 22465,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 22464,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 22462,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22449,
                                        "src": "9703:9:45",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 22463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9715:1:45",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9703:13:45",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9683:34:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 22466,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22001,
                                  "src": "9683:40:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9647:80:45"
                            },
                            {
                              "assignments": [
                                22471
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 22471,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 22484,
                                  "src": "9745:17:45",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 22470,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9745:7:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 22476,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22474,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22388,
                                    "src": "9779:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 22472,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22455,
                                    "src": "9765:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 22473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17665,
                                  "src": "9765:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 22475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9765:21:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9745:41:45"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 22478,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22386,
                                    "src": "9821:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22479,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22449,
                                    "src": "9829:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22480,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22455,
                                    "src": "9840:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 22481,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22471,
                                    "src": "9851:9:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 22477,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22562,
                                  "src": "9804:16:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 22482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9804:57:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 22483,
                              "nodeType": "ExpressionStatement",
                              "src": "9804:57:45"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 22489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22384,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22489,
                  "src": "8987:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8987:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22386,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22489,
                  "src": "9003:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9003:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22388,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22489,
                  "src": "9019:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9019:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8986:48:45"
            },
            "returnParameters": {
              "id": 22390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9044:0:45"
            },
            "scope": 22627,
            "src": "8963:929:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22561,
              "nodeType": "Block",
              "src": "10059:526:45",
              "statements": [
                {
                  "assignments": [
                    22501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22501,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22561,
                      "src": "10069:18:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22500,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10069:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22507,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 22503,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10097:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 22504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10097:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 22505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10111:55:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        },
                        "value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 22502,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22586,
                      "src": "10090:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 22506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10090:77:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10069:98:45"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 22510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 22508,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22493,
                        "src": "10182:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10197:1:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10182:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 22520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 22511,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22009,
                              "src": "10202:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 22513,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22512,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22491,
                              "src": "10214:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10202:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 22517,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 22516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 22514,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22493,
                              "src": "10225:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 22515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10240:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10225:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10202:40:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 22518,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21999,
                        "src": "10202:50:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 22519,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22501,
                        "src": "10256:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "10202:65:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10182:85:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 22553,
                    "nodeType": "Block",
                    "src": "10357:155:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 22534,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22009,
                                "src": "10371:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 22537,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 22535,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22491,
                                "src": "10383:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10371:22:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 22538,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22536,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22493,
                              "src": "10394:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10371:36:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 22540,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22501,
                                "src": "10421:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 22541,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22497,
                                "src": "10434:8:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 22539,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22002,
                              "src": "10410:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$22002_storage_ptr_$",
                                "typeString": "type(struct SushiToken.Checkpoint storage pointer)"
                              }
                            },
                            "id": 22542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10410:33:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$22002_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint memory"
                            }
                          },
                          "src": "10371:72:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 22544,
                        "nodeType": "ExpressionStatement",
                        "src": "10371:72:45"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 22545,
                              "name": "numCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22014,
                              "src": "10457:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 22547,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 22546,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22491,
                              "src": "10472:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10457:25:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 22550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 22548,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22493,
                              "src": "10485:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 22549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10500:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10485:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10457:44:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 22552,
                        "nodeType": "ExpressionStatement",
                        "src": "10457:44:45"
                      }
                    ]
                  },
                  "id": 22554,
                  "nodeType": "IfStatement",
                  "src": "10178:334:45",
                  "trueBody": {
                    "id": 22533,
                    "nodeType": "Block",
                    "src": "10269:82:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 22522,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22009,
                                  "src": "10283:11:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                  }
                                },
                                "id": 22527,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 22523,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22491,
                                  "src": "10295:9:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10283:22:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$22002_storage_$",
                                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                }
                              },
                              "id": 22528,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 22526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 22524,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22493,
                                  "src": "10306:12:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 22525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10321:1:45",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10306:16:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10283:40:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$22002_storage",
                                "typeString": "struct SushiToken.Checkpoint storage ref"
                              }
                            },
                            "id": 22529,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22001,
                            "src": "10283:46:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 22530,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22497,
                            "src": "10332:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10283:57:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22532,
                        "nodeType": "ExpressionStatement",
                        "src": "10283:57:45"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22556,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22491,
                        "src": "10548:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22557,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22495,
                        "src": "10559:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22558,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22497,
                        "src": "10569:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22555,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22049,
                      "src": "10527:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 22559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10527:51:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22560,
                  "nodeType": "EmitStatement",
                  "src": "10522:56:45"
                }
              ]
            },
            "documentation": null,
            "id": 22562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22491,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "9933:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9933:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22493,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "9960:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 22492,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9960:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22495,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "9989:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9989:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22497,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22562,
                  "src": "10015:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10015:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9923:114:45"
            },
            "returnParameters": {
              "id": 22499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10059:0:45"
            },
            "scope": 22627,
            "src": "9898:687:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22585,
              "nodeType": "Block",
              "src": "10674:75:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 22572,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22564,
                          "src": "10692:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 22575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 22573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10696:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 22574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10699:2:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "10696:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "10692:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22577,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22566,
                        "src": "10703:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 22571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10684:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10684:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22579,
                  "nodeType": "ExpressionStatement",
                  "src": "10684:32:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22582,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22564,
                        "src": "10740:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10733:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 22580,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10733:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 22583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10733:9:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 22570,
                  "id": 22584,
                  "nodeType": "Return",
                  "src": "10726:16:45"
                }
              ]
            },
            "documentation": null,
            "id": 22586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22564,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22586,
                  "src": "10607:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22563,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10607:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22566,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22586,
                  "src": "10615:26:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22565,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10615:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10606:36:45"
            },
            "returnParameters": {
              "id": 22570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22569,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22586,
                  "src": "10666:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 22568,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10666:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10665:8:45"
            },
            "scope": 22627,
            "src": "10591:158:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22597,
              "nodeType": "Block",
              "src": "10806:98:45",
              "statements": [
                {
                  "assignments": [
                    22592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22592,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 22597,
                      "src": "10816:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10816:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22593,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10816:15:45"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10850:24:45",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10852:20:45",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "10863:7:45"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10863:9:45"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "10852:7:45"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 22592,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10852:7:45",
                      "valueSize": 1
                    }
                  ],
                  "id": 22594,
                  "nodeType": "InlineAssembly",
                  "src": "10841:33:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22595,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22592,
                    "src": "10890:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22590,
                  "id": 22596,
                  "nodeType": "Return",
                  "src": "10883:14:45"
                }
              ]
            },
            "documentation": null,
            "id": 22598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10774:2:45"
            },
            "returnParameters": {
              "id": 22590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22598,
                  "src": "10800:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22588,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10800:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10799:6:45"
            },
            "scope": 22627,
            "src": "10755:149:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              21431
            ],
            "body": {
              "id": 22625,
              "nodeType": "Block",
              "src": "11045:116:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22610,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22601,
                        "src": "11071:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22611,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21997,
                          "src": "11077:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 22613,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 22612,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22603,
                          "src": "11088:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11077:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22614,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "11093:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22609,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22489,
                      "src": "11056:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11056:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22616,
                  "nodeType": "ExpressionStatement",
                  "src": "11056:44:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22620,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22601,
                        "src": "11137:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22621,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22603,
                        "src": "11143:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 22622,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "11147:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 22617,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11110:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SushiToken_$22627",
                          "typeString": "contract super SushiToken"
                        }
                      },
                      "id": 22619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21431,
                      "src": "11110:26:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11110:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22624,
                  "nodeType": "ExpressionStatement",
                  "src": "11110:44:45"
                }
              ]
            },
            "documentation": {
              "id": 22599,
              "nodeType": "StructuredDocumentation",
              "src": "10914:36:45",
              "text": " @inheritdoc ERC20"
            },
            "id": 22626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11036:8:45"
            },
            "parameters": {
              "id": 22606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22601,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22626,
                  "src": "10985:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10985:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22603,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22626,
                  "src": "10999:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10999:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22605,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22626,
                  "src": "11011:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11011:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10984:42:45"
            },
            "returnParameters": {
              "id": 22608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11045:0:45"
            },
            "scope": 22627,
            "src": "10955:206:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 22628,
        "src": "593:10570:45"
      }
    ],
    "src": "0:11164:45"
  },
  "bytecode": "",
  "bytecodeSha1": "33bb9b271e5c27f5139c674bb0879a9b79ec857e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SushiToken",
  "coverageMap": {
    "branches": {
      "22": {
        "AccessControl._grantRole": {
          "136": [
            6995,
            7028,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "137": [
            7186,
            7222,
            false
          ]
        },
        "AccessControl.grantRole": {
          "133": [
            4624,
            4669,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "134": [
            5801,
            5824,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "135": [
            5082,
            5127,
            true
          ]
        }
      },
      "25": {
        "SafeMath.add": {
          "151": [
            2763,
            2769,
            true
          ]
        },
        "SafeMath.sub": {
          "150": [
            5506,
            5512,
            true
          ],
          "152": [
            3182,
            3188,
            true
          ]
        }
      },
      "31": {},
      "34": {
        "EnumerableSet._add": {
          "148": [
            1684,
            1705,
            false
          ]
        },
        "EnumerableSet._at": {
          "147": [
            4506,
            4532,
            true
          ]
        },
        "EnumerableSet._remove": {
          "149": [
            2409,
            2424,
            false
          ]
        }
      },
      "40": {
        "ERC20._approve": {
          "141": [
            11461,
            11480,
            true
          ],
          "142": [
            11539,
            11560,
            true
          ]
        },
        "ERC20._initERC20": {
          "146": [
            2154,
            2167,
            true
          ]
        },
        "ERC20._mint": {
          "145": [
            9921,
            9942,
            true
          ]
        },
        "ERC20._transfer": {
          "143": [
            9143,
            9163,
            true
          ],
          "144": [
            9223,
            9246,
            true
          ]
        },
        "ERC20.permit": {
          "138": [
            5803,
            5823,
            true
          ],
          "139": [
            5870,
            5896,
            true
          ],
          "140": [
            6328,
            6354,
            true
          ]
        }
      },
      "45": {
        "SushiToken._delegate": {
          "129": [
            8608,
            8636,
            false
          ]
        },
        "SushiToken._moveDelegates": {
          "123": [
            9058,
            9074,
            false
          ],
          "124": [
            9078,
            9088,
            false
          ],
          "125": [
            9108,
            9128,
            false
          ],
          "126": [
            9274,
            9287,
            true
          ],
          "127": [
            9501,
            9521,
            false
          ],
          "128": [
            9667,
            9680,
            true
          ]
        },
        "SushiToken._writeCheckpoint": {
          "130": [
            10182,
            10198,
            false
          ],
          "131": [
            10202,
            10267,
            false
          ]
        },
        "SushiToken.delegateBySig": {
          "120": [
            6085,
            6108,
            true
          ],
          "121": [
            6170,
            6201,
            true
          ],
          "122": [
            6259,
            6272,
            true
          ]
        },
        "SushiToken.getCurrentVotes": {
          "119": [
            6739,
            6755,
            true
          ]
        },
        "SushiToken.getPriorVotes": {
          "113": [
            7371,
            7397,
            true
          ],
          "114": [
            7512,
            7529,
            false
          ],
          "115": [
            7621,
            7684,
            false
          ],
          "116": [
            7820,
            7867,
            false
          ],
          "117": [
            8168,
            8195,
            false
          ],
          "118": [
            8255,
            8281,
            false
          ]
        },
        "SushiToken.mint": {
          "112": [
            2284,
            2318,
            true
          ]
        },
        "SushiToken.safe32": {
          "132": [
            10692,
            10701,
            true
          ]
        }
      },
      "78": {},
      "89": {}
    },
    "statements": {
      "22": {
        "AccessControl._grantRole": {
          "64": [
            7044,
            7089
          ]
        },
        "AccessControl._revokeRole": {
          "65": [
            7238,
            7283
          ]
        },
        "AccessControl.getRoleAdmin": {
          "7": [
            4255,
            4284
          ]
        },
        "AccessControl.getRoleMember": {
          "33": [
            3954,
            3991
          ]
        },
        "AccessControl.getRoleMemberCount": {
          "43": [
            3234,
            3270
          ]
        },
        "AccessControl.grantRole": {
          "8": [
            4616,
            4721
          ],
          "9": [
            4732,
            4757
          ]
        },
        "AccessControl.hasRole": {
          "34": [
            2932,
            2977
          ]
        },
        "AccessControl.renounceRole": {
          "11": [
            5793,
            5876
          ],
          "12": [
            5887,
            5913
          ]
        },
        "AccessControl.revokeRole": {
          "48": [
            5074,
            5180
          ]
        }
      },
      "25": {
        "SafeMath.add": {
          "66": [
            2755,
            2801
          ]
        },
        "SafeMath.sub": {
          "62": [
            5498,
            5527
          ],
          "63": [
            5537,
            5549
          ],
          "90": [
            3174,
            3223
          ],
          "91": [
            3233,
            3245
          ]
        }
      },
      "31": {
        "Context._msgSender": {
          "51": [
            639,
            656
          ]
        }
      },
      "34": {
        "EnumerableSet._add": {
          "100": [
            1721,
            1744
          ],
          "101": [
            1879,
            1919
          ],
          "102": [
            1933,
            1944
          ],
          "103": [
            1975,
            1987
          ]
        },
        "EnumerableSet._at": {
          "96": [
            4498,
            4571
          ],
          "97": [
            4581,
            4606
          ]
        },
        "EnumerableSet._contains": {
          "98": [
            3854,
            3885
          ]
        },
        "EnumerableSet._length": {
          "99": [
            4048,
            4073
          ]
        },
        "EnumerableSet._remove": {
          "104": [
            3234,
            3272
          ],
          "105": [
            3338,
            3381
          ],
          "106": [
            3487,
            3504
          ],
          "107": [
            3572,
            3598
          ],
          "108": [
            3613,
            3624
          ],
          "109": [
            3655,
            3667
          ]
        },
        "EnumerableSet.add": {
          "88": [
            6475,
            6532
          ]
        },
        "EnumerableSet.at": {
          "83": [
            7730,
            7786
          ]
        },
        "EnumerableSet.contains": {
          "84": [
            7040,
            7102
          ]
        },
        "EnumerableSet.length": {
          "85": [
            7272,
            7298
          ]
        },
        "EnumerableSet.remove": {
          "89": [
            6796,
            6856
          ]
        }
      },
      "40": {
        "ERC20._approve": {
          "52": [
            11453,
            11521
          ],
          "53": [
            11531,
            11599
          ],
          "54": [
            11610,
            11646
          ],
          "55": [
            11656,
            11693
          ]
        },
        "ERC20._initERC20": {
          "77": [
            2146,
            2214
          ],
          "78": [
            2224,
            2237
          ],
          "79": [
            2247,
            2264
          ],
          "80": [
            2274,
            2288
          ],
          "81": [
            2385,
            2519
          ],
          "82": [
            2531,
            2550
          ]
        },
        "ERC20._mint": {
          "67": [
            9913,
            9978
          ],
          "68": [
            9989,
            10038
          ],
          "69": [
            10049,
            10088
          ],
          "70": [
            10098,
            10149
          ],
          "71": [
            10159,
            10201
          ]
        },
        "ERC20._transfer": {
          "56": [
            9135,
            9205
          ],
          "57": [
            9215,
            9286
          ],
          "58": [
            9297,
            9344
          ],
          "59": [
            9355,
            9446
          ],
          "60": [
            9456,
            9511
          ],
          "61": [
            9521,
            9561
          ]
        },
        "ERC20.allowance": {
          "49": [
            4497,
            4531
          ]
        },
        "ERC20.approve": {
          "1": [
            4775,
            4814
          ],
          "2": [
            4824,
            4835
          ]
        },
        "ERC20.balanceOf": {
          "20": [
            3933,
            3958
          ]
        },
        "ERC20.decimals": {
          "10": [
            3609,
            3625
          ]
        },
        "ERC20.decreaseAllowance": {
          "36": [
            8407,
            8536
          ]
        },
        "ERC20.increaseAllowance": {
          "13": [
            7700,
            7783
          ]
        },
        "ERC20.name": {
          "0": [
            2693,
            2705
          ]
        },
        "ERC20.permit": {
          "44": [
            5795,
            5852
          ],
          "45": [
            5862,
            5915
          ],
          "46": [
            6320,
            6383
          ],
          "47": [
            6393,
            6425
          ]
        },
        "ERC20.symbol": {
          "35": [
            2898,
            2912
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3764,
            3783
          ]
        },
        "ERC20.transfer": {
          "37": [
            4261,
            4303
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            7006,
            7042
          ],
          "5": [
            7052,
            7173
          ],
          "6": [
            7183,
            7194
          ]
        }
      },
      "45": {
        "SushiToken._beforeTokenTransfer": {
          "86": [
            11056,
            11100
          ],
          "87": [
            11110,
            11154
          ]
        },
        "SushiToken._delegate": {
          "74": [
            8758,
            8791
          ],
          "75": [
            8806,
            8865
          ],
          "76": [
            8880,
            8940
          ]
        },
        "SushiToken._moveDelegates": {
          "72": [
            9411,
            9468
          ],
          "73": [
            9804,
            9861
          ]
        },
        "SushiToken._writeCheckpoint": {
          "92": [
            10283,
            10340
          ],
          "93": [
            10371,
            10443
          ],
          "94": [
            10457,
            10501
          ],
          "95": [
            10522,
            10578
          ]
        },
        "SushiToken.delegate": {
          "18": [
            4759,
            4798
          ]
        },
        "SushiToken.delegateBySig": {
          "39": [
            6077,
            6152
          ],
          "40": [
            6162,
            6241
          ],
          "41": [
            6251,
            6316
          ],
          "42": [
            6326,
            6364
          ]
        },
        "SushiToken.delegates": {
          "17": [
            4530,
            4558
          ]
        },
        "SushiToken.getCurrentVotes": {
          "38": [
            6732,
            6806
          ]
        },
        "SushiToken.getInitData": {
          "50": [
            2047,
            2104
          ]
        },
        "SushiToken.getPriorVotes": {
          "21": [
            7363,
            7442
          ],
          "22": [
            7545,
            7553
          ],
          "23": [
            7700,
            7751
          ],
          "24": [
            7883,
            7891
          ],
          "25": [
            8215,
            8230
          ],
          "26": [
            8301,
            8315
          ],
          "27": [
            8354,
            8372
          ],
          "28": [
            8406,
            8446
          ]
        },
        "SushiToken.initToken": {
          "19": [
            1520,
            1566
          ],
          "29": [
            1023,
            1049
          ],
          "30": [
            1059,
            1097
          ],
          "31": [
            1107,
            1138
          ],
          "32": [
            1148,
            1181
          ]
        },
        "SushiToken.mint": {
          "14": [
            2276,
            2364
          ],
          "15": [
            2374,
            2393
          ],
          "16": [
            2403,
            2455
          ]
        },
        "SushiToken.safe32": {
          "110": [
            10684,
            10716
          ],
          "111": [
            10726,
            10742
          ]
        }
      },
      "78": {},
      "89": {}
    }
  },
  "dependencies": [
    "AccessControl",
    "Context",
    "ERC20",
    "EnumerableSet",
    "IERC20",
    "IMisoToken",
    "SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "593:10570:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:90:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:50:45;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4676:166:40;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4676:166:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3692:98;;;;;;;;;;;;;:::i;3456:122:45:-;;;;;;;;;;;;;:::i;6893:308:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6893:308:40;;;;;;;;;;;;;;;;;:::i;4179:112:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4179:112:22;;:::i;4541:223::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4541:223:22;;;;;;-1:-1:-1;;;;;4541:223:22;;:::i;:::-;;3542:90:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1383:31;;;;;;;;;;;;;:::i;5715:205:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5715:205:22;;;;;;-1:-1:-1;;;;;5715:205:22;;:::i;7596:215:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7596:215:40;;;;;;;;:::i;2214:248:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2214:248:45;;;;;;;;:::i;1194:64::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1194:64:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1194:64:45;;;;;;;;;;-1:-1:-1;1194:64:45;;-1:-1:-1;1194:64:45;-1:-1:-1;1194:64:45;:::i;4422:143::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4422:143:45;-1:-1:-1;;;;;4422:143:45;;:::i;:::-;;;;-1:-1:-1;;;;;4422:143:45;;;;;;;;;;;;;;4703:102;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4703:102:45;-1:-1:-1;;;;;4703:102:45;;:::i;1264:309::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:309:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:309:45;;;;;;;;;;-1:-1:-1;1264:309:45;;-1:-1:-1;1264:309:45;-1:-1:-1;1264:309:45;:::i;3337:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3337:49:45;-1:-1:-1;;;;;3337:49:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;3848:117:40;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3848:117:40;-1:-1:-1;;;;;3848:117:40;;:::i;7235:1218:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7235:1218:45;;;;;;;;:::i;1473:41:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1473:41:40;-1:-1:-1;;;;;1473:41:40;;:::i;903:285:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;903:285:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;903:285:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;903:285:45;;;;;;;;-1:-1:-1;903:285:45;;-1:-1:-1;;;;;903:285:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;903:285:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;903:285:45;;-1:-1:-1;;;;;;;903:285:45;;;;-1:-1:-1;;;903:285:45;;;;:::i;3862:136:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3862:136:22;;;;;;;:::i;2847:137::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2847:137:22;;;;;;-1:-1:-1;;;;;2847:137:22;;:::i;2825:94:40:-;;;;;;;;;;;;;:::i;1624:49:22:-;;;;;;;;;;;;;:::i;8298:266:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8298:266:40;;;;;;;;:::i;4168:163::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4168:163:40;;;;;;;;:::i;6565:248:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6565:248:45;-1:-1:-1;;;;;6565:248:45;;:::i;5228:1143::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5228:1143:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3152:125:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3152:125:22;;:::i;5592:841:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5592:841:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;834:62:45:-;;;;;;;;;;;;;:::i;4998:226:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4998:226:22;;;;;;-1:-1:-1;;;;;4998:226:22;;:::i;4389:149:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4389:149:40;;;;;;;;;;:::i;3669:117:45:-;;;;;;;;;;;;;:::i;3201:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3201:70:45;;-1:-1:-1;;;;;3201:70:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1819:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:292:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:292:45;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:292:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:292:45;;;;;;;;;;;;-1:-1:-1;1819:292:45;-1:-1:-1;;;;;;1819:292:45;;;;;;;;:::i;3864:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3864:42:45;-1:-1:-1;;;;;3864:42:45;;:::i;2622:90:40:-;2700:5;2693:12;;;;;;;;-1:-1:-1;;2693:12:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:13;;2693:12;;2700:5;;2693:12;;2700:5;2693:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:90;:::o;777:50:45:-;826:1;777:50;:::o;4676:166:40:-;4759:4;4775:39;4784:12;:10;:12::i;:::-;4798:7;4807:6;4775:8;:39::i;:::-;-1:-1:-1;4831:4:40;4676:166;;;;;:::o;3692:98::-;3771:12;;3692:98;:::o;3456:122:45:-;3498:80;3456:122;:::o;6893:308:40:-;6990:4;7006:36;7016:6;7024:9;7035:6;7006:9;:36::i;:::-;7052:121;7061:6;7069:12;:10;:12::i;:::-;7083:89;7121:6;7083:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7083:19:40;;;;;;:11;:19;;;;;;7103:12;:10;:12::i;:::-;-1:-1:-1;;;;;7083:33:40;;;;;;;;;;;;-1:-1:-1;7083:33:40;;;:89;:37;:89::i;:::-;7052:8;:121::i;:::-;-1:-1:-1;7190:4:40;6893:308;;;;;:::o;4179:112:22:-;4236:7;4262:12;;;;;;;;;;:22;;;;4179:112::o;4541:223::-;4632:6;:12;;;;;;;;;;:22;;;4624:45;;4656:12;:10;:12::i;:::-;4624:7;:45::i;:::-;4616:105;;;;-1:-1:-1;;;4616:105:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4732:25;4743:4;4749:7;4732:10;:25::i;:::-;4541:223;;:::o;3542:90:40:-;3616:9;;;;3542:90;:::o;1383:31::-;;;;:::o;5715:205:22:-;5812:12;:10;:12::i;:::-;-1:-1:-1;;;;;5801:23:22;:7;-1:-1:-1;;;;;5801:23:22;;5793:83;;;;-1:-1:-1;;;5793:83:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5887:26;5899:4;5905:7;5887:11;:26::i;7596:215:40:-;7684:4;7700:83;7709:12;:10;:12::i;:::-;7723:7;7732:50;7771:10;7732:11;:25;7744:12;:10;:12::i;:::-;-1:-1:-1;;;;;7732:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;7732:25:40;;;:34;;;;;;;;;;;:38;:50::i;2214:248:45:-;2284:34;872:24;2305:12;:10;:12::i;2284:34::-;2276:88;;;;-1:-1:-1;;;2276:88:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:19;2380:3;2385:7;2374:5;:19::i;:::-;-1:-1:-1;;;;;2430:15:45;;;2426:1;2430:15;;;:10;:15;;;;;;2403:52;;2430:15;2447:7;2403:14;:52::i;4422:143::-;-1:-1:-1;;;;;4537:21:45;;;4507:7;4537:21;;;:10;:21;;;;;;;;4422:143::o;4703:102::-;4766:32;4776:10;4788:9;4766;:32::i;:::-;4703:102;:::o;1264:309::-;1346:19;1375:21;1406:14;1430:22;1467:5;;1456:53;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1456:53:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1456:53:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1456:53:45;;;;;;;;-1:-1:-1;1456:53:45;;-1:-1:-1;;;;;1456:53:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1456:53:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1345:164:45;;-1:-1:-1;1456:53:45;;-1:-1:-1;;;;;;;1456:53:45;;;;-1:-1:-1;;1456:53:45;;;;-1:-1:-1;1520:46:45;;-1:-1:-1;1345:164:45;;-1:-1:-1;1456:53:45;;-1:-1:-1;1456:53:45;;1520:9;:46::i;:::-;1264:309;;;;;;:::o;3337:49::-;;;;;;;;;;;;;;;:::o;3848:117:40:-;-1:-1:-1;;;;;3940:18:40;3914:7;3940:18;;;:9;:18;;;;;;;3848:117::o;7235:1218:45:-;7340:7;7385:12;7371:11;:26;7363:79;;;;-1:-1:-1;;;7363:79:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7475:23:45;;7453:19;7475:23;;;:14;:23;;;;;;;;7512:17;7508:56;;7552:1;7545:8;;;;;7508:56;-1:-1:-1;;;;;7621:20:45;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;7642:16:45;;7621:38;;;;;;;;;:48;;:63;-1:-1:-1;7617:145:45;;-1:-1:-1;;;;;7707:20:45;;;;;;:11;:20;;;;;;;;-1:-1:-1;;7728:16:45;;;;7707:38;;;;;;;;7743:1;7707:44;;;-1:-1:-1;7700:51:45;;7617:145;-1:-1:-1;;;;;7820:20:45;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;7816:86:45;;;7890:1;7883:8;;;;;7816:86;7912:12;-1:-1:-1;;7953:16:45;;7979:418;7994:5;7986:13;;:5;:13;;;7979:418;;;8057:1;8040:13;;;8039:19;;;8031:27;;8099:20;;:::i;:::-;-1:-1:-1;;;;;;8122:20:45;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;8099:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8168:27;;8164:223;;;8222:8;;;;-1:-1:-1;8215:15:45;;-1:-1:-1;;;;8215:15:45;8164:223;8255:12;;:26;;;-1:-1:-1;8251:136:45;;;8309:6;8301:14;;8251:136;;;8371:1;8362:6;:10;8354:18;;8251:136;7979:418;;;;;-1:-1:-1;;;;;;8413:20:45;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;7235:1218:45;;;;:::o;1473:41:40:-;;;;;;;;;;;;;:::o;903:285:45:-;1023:26;1034:5;1041:7;1023:10;:26::i;:::-;1059:38;1669:4:22;1090:6:45;1059:10;:38::i;:::-;1107:31;872:24;1131:6;1107:10;:31::i;:::-;1148:33;1154:10;1166:14;1148:5;:33::i;:::-;903:285;;;;:::o;3862:136:22:-;3935:7;3961:12;;;;;;;;;;:30;;3985:5;3961:23;:30::i;:::-;3954:37;3862:136;-1:-1:-1;;;3862:136:22:o;2847:137::-;2916:4;2939:12;;;;;;;;;;:38;;2969:7;2939:29;:38::i;2825:94:40:-;2905:7;2898:14;;;;;;;;-1:-1:-1;;2898:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:13;;2898:14;;2905:7;;2898:14;;2905:7;2898:14;;;;;;;;;;;;;;;;;;;;;;;;1624:49:22;1669:4;1624:49;:::o;8298:266:40:-;8391:4;8407:129;8416:12;:10;:12::i;:::-;8430:7;8439:96;8478:15;8439:96;;;;;;;;;;;;;;;;;:11;:25;8451:12;:10;:12::i;:::-;-1:-1:-1;;;;;8439:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;8439:25:40;;;:34;;;;;;;;;;;:96;:38;:96::i;4168:163::-;4245:4;4261:42;4271:12;:10;:12::i;:::-;4285:9;4296:6;4261:9;:42::i;6565:248:45:-;-1:-1:-1;;;;;6699:23:45;;6654:7;6699:23;;;:14;:23;;;;;;;;6739:16;:67;;6805:1;6739:67;;;-1:-1:-1;;;;;6758:20:45;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;6779:16:45;;6758:38;;;;;;;;6794:1;6758:44;;6732:74;6565:248;-1:-1:-1;;;6565:248:45:o;5228:1143::-;5411:23;3498:80;5537:6;:4;:6::i;:::-;5521:24;;;;;;5563:12;:10;:12::i;:::-;5460:160;;;;;;;;;;;;;;;;;;;;;;;;;5601:4;5460:160;;;;;;;;;;;;;;;;;;;;;;;5437:193;;;;;;3715:71;5685:135;;;;-1:-1:-1;;;;;5685:135:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5662:168;;;;;;-1:-1:-1;;;5881:119:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5858:152;;;;;;;;;-1:-1:-1;6041:26:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5437:193;;-1:-1:-1;5662:168:45;;5858:152;;-1:-1:-1;;6041:26:45;;;;;;;-1:-1:-1;;6041:26:45;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6041:26:45;;-1:-1:-1;;6041:26:45;;;-1:-1:-1;;;;;;;6085:23:45;;6077:75;;;;-1:-1:-1;;;6077:75:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6179:20:45;;;;;;:9;:20;;;;;:22;;;;;;;;6170:31;;6162:79;;;;-1:-1:-1;;;6162:79:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6266:6;6259:3;:13;;6251:65;;;;-1:-1:-1;;;6251:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6333:31;6343:9;6354;6333;:31::i;:::-;6326:38;;;;5228:1143;;;;;;:::o;3152:125:22:-;3215:7;3241:12;;;;;;;;;;:29;;:27;:29::i;5592:841:40:-;-1:-1:-1;;;;;5803:20:40;;5795:57;;;;;-1:-1:-1;;;5795:57:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;5888:8;5870:15;:26;5862:53;;;;;-1:-1:-1;;;5862:53:40;;;;;;;;;;;;-1:-1:-1;;;5862:53:40;;;;;;;;;;;;;;;6019:40;;;;;;;;;;;-1:-1:-1;;;6019:40:40;;;;;;;6081:16;;;-1:-1:-1;;;;;6187:14:40;;;5925;6187;;;:6;:14;;;;;:16;;;;;;;6129:85;;5132:66;6129:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6119:96;;;;;;;;;;5981:252;;5925:14;;6081:16;6119:96;;5981:252;;;;;;;6019:40;5981:252;;6019:40;5981:252;;;;;;;;;;-1:-1:-1;;5981:252:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5981:252:40;;;;;;;;;;;;;;;;-1:-1:-1;5981:252:40;;;;;;;-1:-1:-1;5981:252:40;;;;;;;;;;;;;;;;5954:293;;;;;;;;;-1:-1:-1;6284:26:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5954:293;;-1:-1:-1;;;5981:252:40;;6284:26;;;;;5981:252;-1:-1:-1;;6284:26:40;;;;;;;;;;5981:252;6284:26;;;;;;;;;;;;;;;;;;;;;;;6257:53;;6348:6;-1:-1:-1;;;;;6328:26:40;:16;-1:-1:-1;;;;;6328:26:40;;6320:63;;;;;-1:-1:-1;;;6320:63:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;6393:32;6402:6;6410:7;6419:5;6393:8;:32::i;:::-;5592:841;;;;;;;;;:::o;834:62:45:-;872:24;834:62;:::o;4998:226:22:-;5090:6;:12;;;;;;;;;;:22;;;5082:45;;5114:12;:10;:12::i;5082:45::-;5074:106;;;;-1:-1:-1;;;5074:106:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4389:149:40;-1:-1:-1;;;;;4504:18:40;;;4478:7;4504:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4389:149::o;3669:117:45:-;3715:71;3669:117;:::o;3201:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:292::-;2013:18;2065:5;;2072:7;;2081:6;2089:14;2054:50;;;;;;;;;;;;-1:-1:-1;;;;;2054:50:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2054:50:45;;;;;;;;;;;;;;;-1:-1:-1;2054:50:45;;;;;;;;;;;;;;;;;;-1:-1:-1;;2054:50:45;;;;;;;;;;;;;;;;;;-1:-1:-1;2054:50:45;-1:-1:-1;;;;;;;;;;1819:292:45;;;;;;;;:::o;3864:42::-;;;;;;;;;;;;;:::o;559:104:31:-;646:10;559:104;:::o;11360:340:40:-;-1:-1:-1;;;;;11461:19:40;;11453:68;;;;-1:-1:-1;;;11453:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11539:21:40;;11531:68;;;;-1:-1:-1;;;11531:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11610:18:40;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11661:32;;;;;;;;;;;;;;;;;11360:340;;;:::o;9038:530::-;-1:-1:-1;;;;;9143:20:40;;9135:70;;;;-1:-1:-1;;;9135:70:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9223:23:40;;9215:71;;;;-1:-1:-1;;;9215:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9297:47;9318:6;9326:9;9337:6;9297:20;:47::i;:::-;9375:71;9397:6;9375:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9375:17:40;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;9355:17:40;;;;;;;:9;:17;;;;;;:91;;;;9479:20;;;;;;;:32;;9504:6;9479:24;:32::i;:::-;-1:-1:-1;;;;;9456:20:40;;;;;;;:9;:20;;;;;;;;;:55;;;;9526:35;;;;;;;9456:20;;9526:35;;;;;;;;;;;;;9038:530;;;:::o;5393:163:25:-;5479:7;5514:12;5506:6;;;;5498:29;;;;-1:-1:-1;;;5498:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5544:5:25;;;5393:163::o;6922:184:22:-;6995:6;:12;;;;;;;;;;:33;;7020:7;6995:24;:33::i;:::-;6991:109;;;7076:12;:10;:12::i;:::-;-1:-1:-1;;;;;7049:40:22;7067:7;-1:-1:-1;;;;;7049:40:22;7061:4;7049:40;;;;;;;;;;6922:184;;:::o;7112:188::-;7186:6;:12;;;;;;;;;;:36;;7214:7;7186:27;:36::i;:::-;7182:112;;;7270:12;:10;:12::i;:::-;-1:-1:-1;;;;;7243:40:22;7261:7;-1:-1:-1;;;;;7243:40:22;7255:4;7243:40;;;;;;;;;;7112:188;;:::o;2651:175:25:-;2709:7;2740:5;;;2763:6;;;;2755:46;;;;;-1:-1:-1;;;2755:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;9838:370:40;-1:-1:-1;;;;;9921:21:40;;9913:65;;;;;-1:-1:-1;;;9913:65:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;9989:49;10018:1;10022:7;10031:6;9989:20;:49::i;:::-;10064:12;;:24;;10081:6;10064:16;:24::i;:::-;10049:12;:39;-1:-1:-1;;;;;10119:18:40;;;;;;:9;:18;;;;;;:30;;10142:6;10119:22;:30::i;:::-;-1:-1:-1;;;;;10098:18:40;;;;;;:9;:18;;;;;;;;:51;;;;10164:37;;;;;;;10098:18;;;;10164:37;;;;;;;;;;9838:370;;:::o;8963:929:45:-;9068:6;-1:-1:-1;;;;;9058:16:45;:6;-1:-1:-1;;;;;9058:16:45;;;:30;;;;;9087:1;9078:6;:10;9058:30;9054:832;;;-1:-1:-1;;;;;9108:20:45;;;9104:379;;-1:-1:-1;;;;;9214:22:45;;9195:16;9214:22;;;:14;:22;;;;;;;;;9274:13;:60;;9333:1;9274:60;;;-1:-1:-1;;;;;9290:19:45;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;9310:13:45;;9290:34;;;;;;;;9322:1;9290:40;;9274:60;9254:80;-1:-1:-1;9352:17:45;9372:21;9254:80;9386:6;9372:13;:21::i;:::-;9352:41;;9411:57;9428:6;9436:9;9447;9458;9411:16;:57::i;:::-;9104:379;;;;-1:-1:-1;;;;;9501:20:45;;;9497:379;;-1:-1:-1;;;;;9607:22:45;;9588:16;9607:22;;;:14;:22;;;;;;;;;9667:13;:60;;9726:1;9667:60;;;-1:-1:-1;;;;;9683:19:45;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;9703:13:45;;9683:34;;;;;;;;9715:1;9683:40;;9667:60;9647:80;-1:-1:-1;9745:17:45;9765:21;9647:80;9779:6;9765:13;:21::i;:::-;9745:41;;9804:57;9821:6;9829:9;9840;9851;9804:16;:57::i;9497:379::-;8963:929;;;:::o;8459:498::-;-1:-1:-1;;;;;8573:21:45;;;8547:23;8573:21;;;:10;:21;;;;;;;;;8608:28;;;;8604:347;;8651:24;8678:20;8688:9;8678;:20::i;:::-;-1:-1:-1;;;;;8758:21:45;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;8758:33:45;;;;;;;;;;8811:54;;8651:47;;-1:-1:-1;8758:33:45;8811:54;;;;;;8758:21;8811:54;8880:60;8895:15;8912:9;8923:16;8880:14;:60::i;2063:494:40:-;2155:12;;;;;;;2154:13;2146:68;;;;-1:-1:-1;;;2146:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2224:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2247:17:40;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2274:9:40;:14;;2414:104;;;2425:68;2414:104;;;;;;;;2357:9;2414:104;;;;2512:4;2414:104;;;;;;;;;;;;;;;;;;;;;;;;;2404:115;;;;;2274:14;2385:134;-1:-1:-1;;;;2274:14:40;;;2286:2;2274:14;2531:19;2274:14;2531:19;;;-1:-1:-1;2063:494:40:o;7637:156:34:-;7711:7;7761:22;7765:3;7777:5;7761:3;:22::i;6944:165::-;7024:4;7047:55;7057:3;-1:-1:-1;;;;;7077:23:34;;7047:9;:55::i;10755:149:45:-;10863:9;10755:149;:::o;7190:115:34:-;7253:7;7279:19;7287:3;7279:7;:19::i;10955:206:45:-;-1:-1:-1;;;;;11077:14:45;;;;;;;:10;:14;;;;;;11056:44;;11071:4;;11077:14;11093:6;11056:14;:44::i;:::-;11110;11137:4;11143:2;11147:6;11110:26;:44::i;6389:150:34:-;6459:4;6482:50;6487:3;-1:-1:-1;;;;;6507:23:34;;6482:4;:50::i;6707:156::-;6780:4;6803:53;6811:3;-1:-1:-1;;;;;6831:23:34;;6803:7;:53::i;3097:155:25:-;3155:7;3187:1;3182;:6;;3174:49;;;;;-1:-1:-1;;;3174:49:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3240:5:25;;;3097:155::o;9898:687:45:-;10069:18;10090:77;10097:12;10090:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;10069:98;;10197:1;10182:12;:16;;;:85;;;;-1:-1:-1;;;;;;10202:22:45;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;10225:16:45;;10202:40;;;;;;;;;:50;:65;;;:50;;:65;10182:85;10178:334;;;-1:-1:-1;;;;;10283:22:45;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;10306:16:45;;10283:40;;;;;;;;10321:1;10283:46;:57;;;10178:334;;;10410:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10371:22:45;;-1:-1:-1;10371:22:45;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;10371:72:45;;;;;;;;;;;;;10457:25;;;:14;:25;;;;;;:44;;10485:16;;;10457:44;;;;;;;;;;10178:334;10527:51;;;;;;;;;;;;;;-1:-1:-1;;;;;10527:51:45;;;;;;;;;;;9898:687;;;;;:::o;4412:201:34:-;4506:18;;4479:7;;4506:26;-1:-1:-1;4498:73:34;;;;-1:-1:-1;;;4498:73:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4588:3;:11;;4600:5;4588:18;;;;;;;;;;;;;;;;4581:25;;4412:201;;;;:::o;3765:127::-;3838:4;3861:19;;;:12;;;;;:19;;;;;;:24;;;3765:127::o;3973:107::-;4055:18;;3973:107::o;1600:404::-;1663:4;1684:21;1694:3;1699:5;1684:9;:21::i;:::-;1679:319;;-1:-1:-1;1721:23:34;;;;;;;;:11;:23;;;;;;;;;;;;;1901:18;;1879:19;;;:12;;;:19;;;;;;:40;;;;1933:11;;1679:319;-1:-1:-1;1982:5:34;1975:12;;2172:1512;2238:4;2375:19;;;:12;;;:19;;;;;;2409:15;;2405:1273;;2838:18;;-1:-1:-1;;2790:14:34;;;;2838:22;;;;2766:21;;2838:3;;:22;;3120;;;;;;;;;;;;;;3100:42;;3263:9;3234:3;:11;;3246:13;3234:26;;;;;;;;;;;;;;;;;;;:38;;;;3338:23;;;3380:1;3338:12;;;:23;;;;;;3364:17;;;3338:43;;3487:17;;3338:3;;3487:17;;;;;;;;;;;;;;;;;;;;;;3579:3;:12;;:19;3592:5;3579:19;;;;;;;;;;;3572:26;;;3620:4;3613:11;;;;;;;;2405:1273;3662:5;3655:12;;;;;10591:158:45;10666:6;10703:12;-1:-1:-1;;;10692:9:45;;10684:32;;;;-1:-1:-1;;;10684:32:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10740:1:45;;10591:158;-1:-1:-1;;10591:158:45:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "An event thats emitted when an account changes its delegate"
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "An event thats emitted when a delegate account's vote balance changes"
      }
    },
    "kind": "dev",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "checkpoints(address,uint32)": {
        "notice": "A record of votes checkpoints for each account, by index"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "delegates(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegator": "The address to get delegatee for"
        }
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`",
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getInitData(string,string,address,uint256)": {
        "details": "Generates init data for Token Factory",
        "params": {
          "_initialSupply": "Amount of tokens minted on creation",
          "_name": "- Token name",
          "_owner": "- Contract owner",
          "_symbol": "- Token symbol"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "notice": "Determine the prior number of votes for an account as of a block number",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "numCheckpoints(address)": {
        "notice": "The number of checkpoints for each account"
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Approves `value` from `owner_` to be spend by `spender`.",
        "params": {
          "deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
          "owner_": "Address of the owner.",
          "spender": "The address of the spender that gets approved to draw from `owner_`.",
          "value": "The maximum collective amount that `spender` can draw."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "sigNonces(address)": {
        "notice": "A record of states for signing / validating signatures"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenTemplate()": {
        "notice": "Miso template id for the token factory."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "tokenTemplate": {
        "details": "For different token types, this must be incremented."
      }
    },
    "version": 1
  },
  "offset": [
    593,
    11163
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x230 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x782D6FE1 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xC3CDA520 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xAEC JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0xB27 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0xF21F007C EQ PUSH2 0xB9B JUMPI DUP1 PUSH4 0xF990CCD7 EQ PUSH2 0xC75 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x9C2 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xA40 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xA9E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xAB3 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x956 JUMPI DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x98F JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x8DC7DF72 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x88A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x8BA JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0x60B1CC80 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6A7 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x4DDF47D4 EQ PUSH2 0x4F0 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x405 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x814D3DD EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x333 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x284 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2B1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xD61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xD67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xE9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xE8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1012 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x117A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1195 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x139D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD AND SWAP4 POP POP POP PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x896 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x141D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH2 0x1435 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x1496 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x149B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1503 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1517 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x157A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x17EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1803 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x1A9F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1B1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x1B47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xC28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1B98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD17 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0xD50 PUSH2 0x1C47 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD98 DUP5 DUP5 DUP5 PUSH2 0x1D37 JUMP JUMPDEST PUSH2 0xE08 DUP5 PUSH2 0xDA4 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xE03 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AAE PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xDE2 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xE4A SWAP1 PUSH2 0xE45 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x141D JUMP JUMPDEST PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2930 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP3 DUP3 PUSH2 0x1F2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEAA PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B8E PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE8F DUP3 DUP3 PUSH2 0x1F94 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0xF10 PUSH2 0x1C47 JUMP JUMPDEST DUP5 PUSH2 0xE03 DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0xF21 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0xF7D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xE45 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xFB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x295F PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC2 DUP3 DUP3 PUSH2 0x2057 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xE8F SWAP3 AND DUP4 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x100F CALLER DUP3 PUSH2 0x228B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 DUP6 DUP6 PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x1075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x10FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP7 SWAP11 POP SWAP2 SWAP9 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP7 POP POP PUSH1 0x20 ADD CALLDATALOAD SWAP4 POP PUSH2 0x115A SWAP3 POP DUP7 SWAP2 POP DUP6 SWAP1 POP DUP5 DUP5 PUSH2 0x13AF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A86 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1203 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0x1272 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1366 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0x12DF PUSH2 0x2840 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0x1341 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0xD5B SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0x1358 JUMPI DUP2 SWAP4 POP PUSH2 0x135F JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0x12B5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13B9 DUP5 DUP5 PUSH2 0x2323 JUMP JUMPDEST PUSH2 0x13C4 PUSH1 0x0 DUP4 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x13EE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x13F8 CALLER DUP3 PUSH2 0x2057 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1416 SWAP1 DUP4 PUSH2 0x2405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1416 SWAP1 DUP4 PUSH2 0x2411 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x14A8 PUSH2 0x1C47 JUMP JUMPDEST DUP5 PUSH2 0xE03 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B69 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x4 PUSH1 0x0 PUSH2 0x14D2 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x1510 PUSH2 0x1C47 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0x1542 JUMPI PUSH1 0x0 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0x15A5 PUSH2 0xCA8 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x15B4 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AF9 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AD6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2988 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E0 DUP2 DUP12 PUSH2 0x228B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD5B SWAP1 PUSH2 0x242A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x185E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x18A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115490CC8C0E88115E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE DUP9 DUP2 KECCAK256 DUP1 SLOAD SWAP6 DUP7 ADD SWAP1 SSTORE DUP9 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP9 ADD MSTORE DUP1 DUP11 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP15 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP5 ADD DUP13 SWAP1 MSTORE DUP8 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 SWAP8 MSTORE DUP7 MLOAD SWAP7 SWAP1 SWAP4 ADD SWAP6 SWAP1 SWAP6 KECCAK256 DUP5 MLOAD SWAP3 SWAP6 SWAP4 SWAP1 SWAP3 PUSH2 0x100 SWAP1 SWAP3 ADD SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x197C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x195D JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE DUP2 DUP5 ADD DUP1 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 SWAP3 PUSH1 0xE0 DUP1 DUP3 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20496E76616C6964205369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1A94 DUP10 DUP10 DUP10 PUSH2 0x1C4B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1AE1 SWAP1 PUSH2 0xE45 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0xEF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A21 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x60 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP10 DUP10 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP8 DUP8 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND SWAP1 SWAP5 ADD DUP3 DUP2 SUB SWAP1 SWAP5 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B45 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B20 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x290D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCC DUP4 DUP4 DUP4 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x1E09 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D1 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1E38 SWAP1 DUP3 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1F23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ED0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F15 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F43 SWAP1 DUP3 PUSH2 0x2467 JUMP JUMPDEST ISZERO PUSH2 0xE8F JUMPI PUSH2 0x1F50 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FAC SWAP1 DUP3 PUSH2 0x247C JUMP JUMPDEST ISZERO PUSH2 0xE8F JUMPI PUSH2 0x1FB9 PUSH2 0x1C47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x20BE PUSH1 0x0 DUP4 DUP4 PUSH2 0x2435 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20CB SWAP1 DUP3 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20F1 SWAP1 DUP3 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x216B JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2286 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x21FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x21AB JUMPI PUSH1 0x0 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21EB DUP3 DUP6 PUSH2 0x2491 JUMP JUMPDEST SWAP1 POP PUSH2 0x21F9 DUP7 DUP5 DUP5 DUP5 PUSH2 0x24EE JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x2286 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x2238 JUMPI PUSH1 0x0 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2278 DUP3 DUP6 PUSH2 0x1FFD JUMP JUMPDEST SWAP1 POP PUSH2 0x115A DUP6 DUP5 DUP5 DUP5 PUSH2 0x24EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x2286 JUMPI PUSH1 0x0 PUSH2 0x22BB DUP5 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x13F8 DUP3 DUP5 DUP4 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x236A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29F7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x237D SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2857 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x2391 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2857 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID DUP3 DUP5 ADD MSTORE ADDRESS PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 SSTORE PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP2 AND PUSH1 0x12 OR AND PUSH2 0x100 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP4 DUP4 PUSH2 0x2653 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x26B7 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B DUP3 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x245C SWAP2 DUP6 SWAP2 AND DUP4 PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2286 DUP4 DUP4 DUP4 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1416 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x271D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x24E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2512 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A51 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x27E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x255B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2598 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x28EB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26A4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DF DUP4 DUP4 PUSH2 0x26B7 JUMP JUMPDEST PUSH2 0x2715 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xD5B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x27D9 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2750 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x276D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x279D JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 SHL DUP5 LT PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1EE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ED0 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x2898 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x28C5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x28C5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28C5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x28AA JUMP JUMPDEST POP PUSH2 0x28D1 SWAP3 SWAP2 POP PUSH2 0x28D5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28D1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28D6 JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E647345524332303A207472616E PUSH20 0x66657220746F20746865207A65726F2061646472 PUSH6 0x737341636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F206772616E74 MSTORE8 PUSH22 0x736869546F6B656E3A206D7573742068617665206D69 PUSH15 0x74657220726F6C6520746F206D696E PUSH21 0x53555348493A3A64656C656761746542795369673A KECCAK256 PUSH20 0x69676E6174757265206578706972656445524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x6F6B656E2068617320616C7265616479206265656E KECCAK256 PUSH10 0x6E697469616C697A6564 0x21 COINBASE PUSH4 0x63657373 NUMBER PUSH16 0x6E74726F6C3A2073656E646572206D75 PUSH20 0x7420626520616E2061646D696E20746F20726576 PUSH16 0x6B6553555348493A3A5F777269746543 PUSH9 0x65636B706F696E743A KECCAK256 PUSH3 0x6C6F63 PUSH12 0x206E756D6265722065786365 PUSH6 0x647320333220 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F41636365 PUSH20 0x73436F6E74726F6C3A2063616E206F6E6C792072 PUSH6 0x6E6F756E6365 KECCAK256 PUSH19 0x6F6C657320666F722073656C66A26469706673 PC 0x22 SLT KECCAK256 PUSH10 0xDCBB4B3443203D09CB2F 0xEF 0xCD PUSH25 0xC89422145126F4069EE309E7F759390EDA7F64736F6C634300 MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "8": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "LT",
      "path": "45"
    },
    "9": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "12": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "13": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "16": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "SHR",
      "path": "45"
    },
    "19": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "20": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x782D6FE1"
    },
    "25": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "26": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12E"
    },
    "29": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "30": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "31": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC3CDA520"
    },
    "36": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "37": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "41": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "42": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDD62ED3E"
    },
    "47": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "48": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "52": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "53": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xDD62ED3E"
    },
    "58": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "59": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAEC"
    },
    "62": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "63": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "64": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE7A324DC"
    },
    "69": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "70": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB27"
    },
    "73": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "74": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "75": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF1127ED8"
    },
    "80": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "81": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB3C"
    },
    "84": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "85": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "86": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF21F007C"
    },
    "91": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "92": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB9B"
    },
    "95": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "96": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "97": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xF990CCD7"
    },
    "102": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "103": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC75"
    },
    "106": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "107": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "110": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "111": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "112": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "113": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC3CDA520"
    },
    "118": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "119": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9C2"
    },
    "122": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "123": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "124": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xCA15C873"
    },
    "129": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "130": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA16"
    },
    "133": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "134": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "135": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD505ACCF"
    },
    "140": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "141": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA40"
    },
    "144": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "145": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "146": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD5391393"
    },
    "151": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "152": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA9E"
    },
    "155": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "156": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "157": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xD547741F"
    },
    "162": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "163": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAB3"
    },
    "166": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "167": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "170": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "171": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "172": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "173": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "178": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "179": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "183": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "184": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "189": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "190": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x8F3"
    },
    "193": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "194": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "195": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA217FDDF"
    },
    "200": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "201": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x908"
    },
    "204": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "205": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "206": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA457C2D7"
    },
    "211": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "212": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x91D"
    },
    "215": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "216": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "217": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA9059CBB"
    },
    "222": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "223": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x956"
    },
    "226": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "227": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "228": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xB4B5EA57"
    },
    "233": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "234": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x98F"
    },
    "237": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "238": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "241": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "242": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "243": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "244": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x782D6FE1"
    },
    "249": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "250": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6DA"
    },
    "253": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "254": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "255": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x7ECEBE00"
    },
    "260": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "261": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x713"
    },
    "264": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "265": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "266": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x8DC7DF72"
    },
    "271": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "272": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x746"
    },
    "275": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "276": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "277": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x9010D07C"
    },
    "282": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "283": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x88A"
    },
    "286": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "287": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "288": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x91D14854"
    },
    "293": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "294": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x8BA"
    },
    "297": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "298": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "301": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "302": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "303": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "304": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3644E515"
    },
    "309": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "310": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BC"
    },
    "313": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "314": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "315": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x587CDE1E"
    },
    "320": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "321": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x180"
    },
    "324": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "325": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "326": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x587CDE1E"
    },
    "331": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "332": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x55E"
    },
    "335": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "336": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "337": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x5C19A95C"
    },
    "342": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "343": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5AD"
    },
    "346": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "347": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "348": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x60B1CC80"
    },
    "353": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "354": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5E0"
    },
    "357": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "358": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "359": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FCFFF45"
    },
    "364": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "365": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x65B"
    },
    "368": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "369": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "370": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x70A08231"
    },
    "375": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "376": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6A7"
    },
    "379": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "380": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "383": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "384": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "385": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "386": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x3644E515"
    },
    "391": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "392": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x430"
    },
    "395": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "396": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "397": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x36568ABE"
    },
    "402": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "403": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x445"
    },
    "406": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "407": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "408": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x39509351"
    },
    "413": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "414": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x47E"
    },
    "417": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "418": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "419": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x40C10F19"
    },
    "424": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "425": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4B7"
    },
    "428": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "429": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "430": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x4DDF47D4"
    },
    "435": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "436": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4F0"
    },
    "439": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "440": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "443": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "444": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "445": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "446": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x20606B70"
    },
    "451": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "GT",
      "path": "45"
    },
    "452": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x203"
    },
    "455": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "456": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "457": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x20606B70"
    },
    "462": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "463": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x348"
    },
    "466": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "467": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "468": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x23B872DD"
    },
    "473": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "474": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x35D"
    },
    "477": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "478": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "479": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x248A9CA3"
    },
    "484": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "485": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3A0"
    },
    "488": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "489": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "490": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x2F2FF15D"
    },
    "495": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "496": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3CA"
    },
    "499": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "500": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "501": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x313CE567"
    },
    "506": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "507": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x405"
    },
    "510": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "511": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x230"
    },
    "514": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMP",
      "path": "45"
    },
    "515": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "516": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "517": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FDDE03"
    },
    "522": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "523": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x235"
    },
    "526": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "527": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "528": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x814D3DD"
    },
    "533": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "534": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2BF"
    },
    "537": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "538": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "539": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95EA7B3"
    },
    "544": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "545": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2E6"
    },
    "548": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "549": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "550": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x18160DDD"
    },
    "555": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "EQ",
      "path": "45"
    },
    "556": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x333"
    },
    "559": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "560": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "561": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "563": {
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "DUP1",
      "path": "45"
    },
    "564": {
      "first_revert": true,
      "fn": null,
      "offset": [
        593,
        11163
      ],
      "op": "REVERT",
      "path": "45"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x241"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "REVERT",
      "path": "40"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x24A"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xCA8"
    },
    "585": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMP",
      "path": "40"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP3",
      "path": "40"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "600": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "601": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "604": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "605": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "606": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "610": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP6",
      "path": "40"
    },
    "613": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "622": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "623": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "LT",
      "path": "40"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x284"
    },
    "628": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "629": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "630": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "631": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "632": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "633": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "634": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP3",
      "path": "40"
    },
    "635": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "636": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "637": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "639": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "640": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x26C"
    },
    "643": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMP",
      "path": "40"
    },
    "644": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "645": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "646": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "647": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "648": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "649": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "650": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "651": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "652": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "653": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "654": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "655": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "657": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "AND",
      "path": "40"
    },
    "658": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "659": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "660": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B1"
    },
    "663": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "664": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "665": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP3",
      "path": "40"
    },
    "666": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SUB",
      "path": "40"
    },
    "667": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "668": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "669": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "671": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP4",
      "path": "40"
    },
    "672": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "674": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SUB",
      "path": "40"
    },
    "675": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "678": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "EXP",
      "path": "40"
    },
    "679": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SUB",
      "path": "40"
    },
    "680": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "NOT",
      "path": "40"
    },
    "681": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "AND",
      "path": "40"
    },
    "682": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP2",
      "path": "40"
    },
    "683": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "684": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "686": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "ADD",
      "path": "40"
    },
    "687": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "688": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "689": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "690": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "691": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "692": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "693": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "694": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "POP",
      "path": "40"
    },
    "695": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "698": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "DUP1",
      "path": "40"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SUB",
      "path": "40"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "RETURN",
      "path": "40"
    },
    "703": {
      "offset": [
        777,
        827
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "704": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "DUP1",
      "path": "45"
    },
    "706": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "707": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2CB"
    },
    "710": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "711": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "DUP1",
      "path": "45"
    },
    "714": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "REVERT",
      "path": "45"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "716": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "POP",
      "path": "45"
    },
    "717": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD3E"
    },
    "723": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        777,
        827
      ],
      "op": "JUMP",
      "path": "45"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "DUP1",
      "path": "45"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "DUP3",
      "path": "45"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "732": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "734": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "DUP2",
      "path": "45"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "SUB",
      "path": "45"
    },
    "737": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "739": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "ADD",
      "path": "45"
    },
    "740": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "741": {
      "fn": "ERC20.name",
      "offset": [
        777,
        827
      ],
      "op": "RETURN",
      "path": "45"
    },
    "742": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "743": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "744": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP1",
      "path": "40"
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2F2"
    },
    "749": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "750": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "752": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP1",
      "path": "40"
    },
    "753": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "REVERT",
      "path": "40"
    },
    "754": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "755": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "POP",
      "path": "40"
    },
    "756": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x31F"
    },
    "759": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "761": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP1",
      "path": "40"
    },
    "762": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "763": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SUB",
      "path": "40"
    },
    "764": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "766": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP2",
      "path": "40"
    },
    "767": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "LT",
      "path": "40"
    },
    "768": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "769": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x309"
    },
    "772": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "773": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "775": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP1",
      "path": "40"
    },
    "776": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "REVERT",
      "path": "40"
    },
    "777": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP2",
      "path": "40"
    },
    "788": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "789": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "AND",
      "path": "40"
    },
    "790": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "791": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "793": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ADD",
      "path": "40"
    },
    "794": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "795": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD43"
    },
    "798": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMP",
      "path": "40"
    },
    "799": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "800": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "802": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP1",
      "path": "40"
    },
    "803": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "804": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "805": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "807": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP3",
      "path": "40"
    },
    "808": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "809": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "810": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "811": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "DUP2",
      "path": "40"
    },
    "812": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "813": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SUB",
      "path": "40"
    },
    "814": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "816": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "ADD",
      "path": "40"
    },
    "817": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "818": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "RETURN",
      "path": "40"
    },
    "819": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "820": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "821": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "DUP1",
      "path": "40"
    },
    "822": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "823": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x33F"
    },
    "826": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "827": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "829": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "DUP1",
      "path": "40"
    },
    "830": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "REVERT",
      "path": "40"
    },
    "831": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "832": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "POP",
      "path": "40"
    },
    "833": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2D4"
    },
    "836": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD61"
    },
    "839": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMP",
      "path": "40"
    },
    "840": {
      "offset": [
        3456,
        3578
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "841": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "842": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "DUP1",
      "path": "45"
    },
    "843": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "844": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "848": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "DUP1",
      "path": "45"
    },
    "851": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "REVERT",
      "path": "45"
    },
    "852": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "853": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "POP",
      "path": "45"
    },
    "854": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "857": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3456,
        3578
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD67"
    },
    "860": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3456,
        3578
      ],
      "op": "JUMP",
      "path": "45"
    },
    "861": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "862": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "863": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP1",
      "path": "40"
    },
    "864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "865": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x369"
    },
    "868": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "871": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP1",
      "path": "40"
    },
    "872": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "REVERT",
      "path": "40"
    },
    "873": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "POP",
      "path": "40"
    },
    "875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x31F"
    },
    "878": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "880": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP1",
      "path": "40"
    },
    "881": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "882": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SUB",
      "path": "40"
    },
    "883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "886": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "LT",
      "path": "40"
    },
    "887": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x380"
    },
    "891": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "892": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "894": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP1",
      "path": "40"
    },
    "895": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "REVERT",
      "path": "40"
    },
    "896": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "907": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "908": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "909": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "AND",
      "path": "40"
    },
    "910": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "911": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "913": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "914": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "ADD",
      "path": "40"
    },
    "915": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "916": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "917": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "918": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "AND",
      "path": "40"
    },
    "919": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "920": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "922": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "ADD",
      "path": "40"
    },
    "923": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "924": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD8B"
    },
    "927": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMP",
      "path": "40"
    },
    "928": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "929": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "930": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "DUP1",
      "path": "22"
    },
    "931": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "932": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3AC"
    },
    "935": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "936": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "938": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "DUP1",
      "path": "22"
    },
    "939": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "REVERT",
      "path": "22"
    },
    "940": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "941": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "POP",
      "path": "22"
    },
    "942": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D4"
    },
    "945": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "947": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "DUP1",
      "path": "22"
    },
    "948": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "949": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "SUB",
      "path": "22"
    },
    "950": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "952": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "DUP2",
      "path": "22"
    },
    "953": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "LT",
      "path": "22"
    },
    "954": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "955": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C3"
    },
    "958": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "959": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "961": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "DUP1",
      "path": "22"
    },
    "962": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "REVERT",
      "path": "22"
    },
    "963": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "966": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE12"
    },
    "969": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMP",
      "path": "22"
    },
    "970": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "971": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "972": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "973": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "974": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D6"
    },
    "977": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "978": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "980": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "981": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "REVERT",
      "path": "22"
    },
    "982": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "983": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "POP",
      "path": "22"
    },
    "984": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x403"
    },
    "987": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "989": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "990": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "991": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "SUB",
      "path": "22"
    },
    "992": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "994": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP2",
      "path": "22"
    },
    "995": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "LT",
      "path": "22"
    },
    "996": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "997": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3ED"
    },
    "1000": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1001": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1003": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1004": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1005": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1008": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1009": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1010": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1012": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "ADD",
      "path": "22"
    },
    "1013": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "AND",
      "path": "22"
    },
    "1023": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE27"
    },
    "1026": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1027": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1028": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "STOP",
      "path": "22"
    },
    "1029": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1030": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1031": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1032": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1033": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x411"
    },
    "1036": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1037": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1039": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1040": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1041": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1042": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "POP",
      "path": "40"
    },
    "1043": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x41A"
    },
    "1046": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xE93"
    },
    "1049": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1050": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1051": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1054": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1055": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "1057": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1058": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1059": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "AND",
      "path": "40"
    },
    "1060": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1061": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1062": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1063": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1064": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1065": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1066": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SUB",
      "path": "40"
    },
    "1067": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1069": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "ADD",
      "path": "40"
    },
    "1070": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1071": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "RETURN",
      "path": "40"
    },
    "1072": {
      "offset": [
        1383,
        1414
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1073": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1074": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1075": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1076": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x43C"
    },
    "1079": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1080": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1082": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1083": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1084": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1085": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "POP",
      "path": "40"
    },
    "1086": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2D4"
    },
    "1089": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xE9C"
    },
    "1092": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        1383,
        1414
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1093": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1094": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1095": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1096": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1097": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x451"
    },
    "1100": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1101": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1103": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1104": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1105": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1106": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "POP",
      "path": "22"
    },
    "1107": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x403"
    },
    "1110": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1112": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1113": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1114": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "SUB",
      "path": "22"
    },
    "1115": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1117": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1118": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "LT",
      "path": "22"
    },
    "1119": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1120": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x468"
    },
    "1123": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1124": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1126": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1127": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1128": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1131": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1132": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1133": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1135": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "ADD",
      "path": "22"
    },
    "1136": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "AND",
      "path": "22"
    },
    "1146": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEA2"
    },
    "1149": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1150": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1151": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1152": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1153": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1154": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x48A"
    },
    "1157": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1158": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1160": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1161": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1162": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1163": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "POP",
      "path": "40"
    },
    "1164": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x31F"
    },
    "1167": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1169": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1170": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "1171": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "SUB",
      "path": "40"
    },
    "1172": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1174": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1175": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "LT",
      "path": "40"
    },
    "1176": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1177": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4A1"
    },
    "1180": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1181": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1184": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1185": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1196": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "1197": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "AND",
      "path": "40"
    },
    "1198": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1199": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1201": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "ADD",
      "path": "40"
    },
    "1202": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xF03"
    },
    "1206": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1207": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1208": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1209": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1210": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1211": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4C3"
    },
    "1214": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1215": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1217": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1218": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1219": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1220": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "POP",
      "path": "45"
    },
    "1221": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "1224": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1226": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1227": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1228": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "SUB",
      "path": "45"
    },
    "1229": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1231": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1232": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "LT",
      "path": "45"
    },
    "1233": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1234": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4DA"
    },
    "1237": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1238": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1240": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1241": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1242": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1253": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1254": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "AND",
      "path": "45"
    },
    "1255": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1256": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1258": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "ADD",
      "path": "45"
    },
    "1259": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1260": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF51"
    },
    "1263": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1264": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1265": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "1268": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1270": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1271": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1272": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SUB",
      "path": "45"
    },
    "1273": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1275": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1276": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "LT",
      "path": "45"
    },
    "1277": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1278": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x506"
    },
    "1281": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1282": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1284": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1285": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1286": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1287": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1288": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1289": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1290": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1292": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1293": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1294": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1295": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1302": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "GT",
      "path": "45"
    },
    "1303": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1304": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x520"
    },
    "1307": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1308": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1310": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1311": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1312": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1313": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1314": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1315": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1316": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1318": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1319": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1320": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "GT",
      "path": "45"
    },
    "1321": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1322": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x532"
    },
    "1325": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1326": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1328": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1329": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1330": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1331": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1332": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1333": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1334": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1336": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1337": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1338": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1339": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1341": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1342": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "MUL",
      "path": "45"
    },
    "1343": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1344": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ADD",
      "path": "45"
    },
    "1345": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "GT",
      "path": "45"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1352": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "GT",
      "path": "45"
    },
    "1353": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "OR",
      "path": "45"
    },
    "1354": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1355": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x553"
    },
    "1358": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1359": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1361": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1362": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1363": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1366": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "fn": "SushiToken.init",
      "offset": [
        1194,
        1258
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE8F"
    },
    "1373": {
      "fn": "SushiToken.init",
      "jump": "i",
      "offset": [
        1194,
        1258
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1374": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1375": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1376": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1377": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1378": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x56A"
    },
    "1381": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1382": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1384": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1385": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1386": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1387": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "POP",
      "path": "45"
    },
    "1388": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x591"
    },
    "1391": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1393": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1394": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1395": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SUB",
      "path": "45"
    },
    "1396": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1398": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1399": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "LT",
      "path": "45"
    },
    "1400": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1401": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x581"
    },
    "1404": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1405": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1407": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1408": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1409": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1410": {
      "op": "POP"
    },
    "1411": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "AND",
      "path": "45"
    },
    "1421": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xFE7"
    },
    "1424": {
      "fn": "SushiToken.delegates",
      "jump": "i",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1425": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1426": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1428": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1429": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1439": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1440": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "AND",
      "path": "45"
    },
    "1441": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1442": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1443": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1444": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1445": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1446": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1447": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SUB",
      "path": "45"
    },
    "1448": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1450": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "ADD",
      "path": "45"
    },
    "1451": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1452": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "RETURN",
      "path": "45"
    },
    "1453": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1454": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1455": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1456": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1457": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1461": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1463": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1464": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1465": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1466": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "POP",
      "path": "45"
    },
    "1467": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "1470": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1472": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1473": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1474": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "SUB",
      "path": "45"
    },
    "1475": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1477": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1478": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "LT",
      "path": "45"
    },
    "1479": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1480": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5D0"
    },
    "1483": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1484": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1486": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1487": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1488": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "AND",
      "path": "45"
    },
    "1500": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1005"
    },
    "1503": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1504": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1505": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1506": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1507": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1508": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5EC"
    },
    "1511": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1512": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1514": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1515": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1516": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1517": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "1518": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "1521": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1523": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1524": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1525": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SUB",
      "path": "45"
    },
    "1526": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1528": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1529": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "LT",
      "path": "45"
    },
    "1530": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1531": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x603"
    },
    "1534": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1535": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1537": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1538": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1539": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1540": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1541": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1542": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1543": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1545": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1546": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1547": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1548": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1555": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "GT",
      "path": "45"
    },
    "1556": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1557": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x61D"
    },
    "1560": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1561": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1563": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1564": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1565": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1566": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1567": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1568": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1569": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1571": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1572": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1573": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "GT",
      "path": "45"
    },
    "1574": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1575": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x62F"
    },
    "1578": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1579": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1581": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1582": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1583": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1584": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1585": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1586": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1587": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1589": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1590": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1591": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1592": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1594": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1595": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "MUL",
      "path": "45"
    },
    "1596": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1597": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ADD",
      "path": "45"
    },
    "1598": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "GT",
      "path": "45"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1605": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "GT",
      "path": "45"
    },
    "1606": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "OR",
      "path": "45"
    },
    "1607": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1608": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x650"
    },
    "1611": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1612": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1614": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1615": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1616": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1619": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1012"
    },
    "1626": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1627": {
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1628": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1629": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1630": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1631": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x667"
    },
    "1634": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1635": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1637": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1638": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1639": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1640": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "POP",
      "path": "45"
    },
    "1641": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x68E"
    },
    "1644": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1646": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1647": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1648": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SUB",
      "path": "45"
    },
    "1649": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1651": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1652": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "LT",
      "path": "45"
    },
    "1653": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1654": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x67E"
    },
    "1657": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1658": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1660": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1661": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1662": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "offset": [
        3337,
        3386
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "offset": [
        3337,
        3386
      ],
      "op": "AND",
      "path": "45"
    },
    "1674": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1162"
    },
    "1677": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1678": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1679": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1681": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1682": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1683": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "1688": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1689": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1690": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "AND",
      "path": "45"
    },
    "1691": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1692": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1693": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1694": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1695": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1696": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1697": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SUB",
      "path": "45"
    },
    "1698": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1700": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "ADD",
      "path": "45"
    },
    "1701": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1702": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "RETURN",
      "path": "45"
    },
    "1703": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1704": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1705": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1706": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1707": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x6B3"
    },
    "1710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1711": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1713": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1714": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1715": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1716": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "POP",
      "path": "40"
    },
    "1717": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2D4"
    },
    "1720": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1722": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1723": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "1724": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "SUB",
      "path": "40"
    },
    "1725": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1727": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1728": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "LT",
      "path": "40"
    },
    "1729": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1730": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x6CA"
    },
    "1733": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1734": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1736": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1737": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1738": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "op": "SUB"
    },
    "1749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "AND",
      "path": "40"
    },
    "1750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x117A"
    },
    "1753": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1754": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1755": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1756": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1757": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1758": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6E6"
    },
    "1761": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1762": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1764": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1765": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1766": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1767": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "POP",
      "path": "45"
    },
    "1768": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "1771": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1773": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1774": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1775": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "SUB",
      "path": "45"
    },
    "1776": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1778": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1779": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "LT",
      "path": "45"
    },
    "1780": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1781": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6FD"
    },
    "1784": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1785": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1787": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1788": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1789": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1800": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1801": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "AND",
      "path": "45"
    },
    "1802": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1803": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1805": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "ADD",
      "path": "45"
    },
    "1806": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1807": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1195"
    },
    "1810": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1811": {
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1812": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1813": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1814": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1815": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x71F"
    },
    "1818": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1819": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1821": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1822": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1823": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1824": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "POP",
      "path": "40"
    },
    "1825": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2D4"
    },
    "1828": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1830": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1831": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "1832": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "SUB",
      "path": "40"
    },
    "1833": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1835": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1836": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "LT",
      "path": "40"
    },
    "1837": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1838": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x736"
    },
    "1841": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1842": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1844": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1845": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1846": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "offset": [
        1473,
        1514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "offset": [
        1473,
        1514
      ],
      "op": "AND",
      "path": "40"
    },
    "1858": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x139D"
    },
    "1861": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1862": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1863": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "1864": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1865": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1866": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x752"
    },
    "1869": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1870": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1872": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1873": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1874": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1875": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "POP",
      "path": "45"
    },
    "1876": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "1879": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1881": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1882": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1883": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SUB",
      "path": "45"
    },
    "1884": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "1886": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1887": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "LT",
      "path": "45"
    },
    "1888": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1889": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x769"
    },
    "1892": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1893": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1895": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1896": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1897": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1898": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1899": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1900": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1901": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1903": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1904": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1905": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1906": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1913": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "1914": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1915": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x783"
    },
    "1918": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1919": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1921": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1922": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1923": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1924": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1925": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1926": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1927": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1929": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1930": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1931": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "1932": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1933": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x795"
    },
    "1936": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1937": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1939": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1940": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1941": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1942": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1943": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1944": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1945": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1947": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1948": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1949": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1950": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1952": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1953": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MUL",
      "path": "45"
    },
    "1954": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1955": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1956": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1963": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "1964": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "OR",
      "path": "45"
    },
    "1965": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1966": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7B6"
    },
    "1969": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1970": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1972": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1973": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1974": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1975": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1976": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1977": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1978": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1979": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1981": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1982": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1984": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1985": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1986": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DIV",
      "path": "45"
    },
    "1987": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MUL",
      "path": "45"
    },
    "1988": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1990": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1991": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1993": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1994": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1995": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1996": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "1997": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1999": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2000": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2001": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2002": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2003": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2004": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2005": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2006": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2007": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2008": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2010": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2011": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2012": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2013": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2014": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2015": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2016": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "2017": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2019": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2020": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2021": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2022": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2023": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2024": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2027": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "2028": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2029": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2030": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2032": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2033": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2034": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2037": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2046": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "2047": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2048": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x808"
    },
    "2051": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2052": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2054": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2055": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2056": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2057": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2058": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2059": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2060": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2062": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2063": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2064": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "2065": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2066": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81A"
    },
    "2069": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2070": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2072": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2073": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2074": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2075": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2076": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2077": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2078": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2080": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2081": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2082": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2083": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2085": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2086": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MUL",
      "path": "45"
    },
    "2087": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2088": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2089": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2096": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "GT",
      "path": "45"
    },
    "2097": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "OR",
      "path": "45"
    },
    "2098": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2099": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x83B"
    },
    "2102": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2103": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2105": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2106": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2107": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2108": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2109": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2110": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2111": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2112": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2114": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2115": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2117": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2118": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2119": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DIV",
      "path": "45"
    },
    "2120": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MUL",
      "path": "45"
    },
    "2121": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2123": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2124": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2126": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2127": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2128": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2129": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2130": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2132": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2133": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2134": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2135": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2136": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2137": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2138": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2139": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2140": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2141": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2143": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2144": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2145": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2146": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2147": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2148": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2149": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "2150": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2152": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2153": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2154": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2155": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2156": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2157": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2160": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "POP"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2172": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2173": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "AND",
      "path": "45"
    },
    "2174": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2180": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "ADD",
      "path": "45"
    },
    "2181": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2182": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13AF"
    },
    "2185": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        903,
        1188
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2186": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2187": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2188": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2189": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2190": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x896"
    },
    "2193": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2194": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2196": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2197": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2198": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2199": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "POP",
      "path": "22"
    },
    "2200": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x591"
    },
    "2203": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2205": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2206": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2207": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "SUB",
      "path": "22"
    },
    "2208": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2210": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2211": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "LT",
      "path": "22"
    },
    "2212": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2213": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8AD"
    },
    "2216": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2217": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2219": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2220": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2221": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2224": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2225": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2226": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2228": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "ADD",
      "path": "22"
    },
    "2229": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2230": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13FE"
    },
    "2233": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2234": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2235": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2236": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2237": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2238": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8C6"
    },
    "2241": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2242": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2244": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2245": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2246": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2247": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "POP",
      "path": "22"
    },
    "2248": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31F"
    },
    "2251": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2253": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2254": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2255": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "SUB",
      "path": "22"
    },
    "2256": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2258": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2259": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "LT",
      "path": "22"
    },
    "2260": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2261": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8DD"
    },
    "2264": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2265": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2267": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2268": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2269": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2272": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2273": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2274": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2276": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "ADD",
      "path": "22"
    },
    "2277": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "SUB"
    },
    "2286": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "AND",
      "path": "22"
    },
    "2287": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x141D"
    },
    "2290": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2291": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2292": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "2293": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2294": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2295": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8FF"
    },
    "2298": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2299": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2301": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2302": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2303": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2304": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "POP",
      "path": "40"
    },
    "2305": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x24A"
    },
    "2308": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1435"
    },
    "2311": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2825,
        2919
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2312": {
      "offset": [
        1624,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2313": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2314": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2315": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2316": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x914"
    },
    "2319": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2320": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2322": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2323": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2324": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2325": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "POP",
      "path": "22"
    },
    "2326": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D4"
    },
    "2329": {
      "fn": "ERC20.symbol",
      "offset": [
        1624,
        1673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1496"
    },
    "2332": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1624,
        1673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2333": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2334": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "2335": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2336": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2337": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x929"
    },
    "2340": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2346": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "POP",
      "path": "40"
    },
    "2347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x31F"
    },
    "2350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "2354": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "SUB",
      "path": "40"
    },
    "2355": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "LT",
      "path": "40"
    },
    "2359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x940"
    },
    "2363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2364": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2368": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2376": {
      "op": "SHL"
    },
    "2377": {
      "op": "SUB"
    },
    "2378": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2379": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2380": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "AND",
      "path": "40"
    },
    "2381": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2382": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2384": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "ADD",
      "path": "40"
    },
    "2385": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2386": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x149B"
    },
    "2389": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2390": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2391": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "2392": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2393": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2394": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x962"
    },
    "2397": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2398": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2400": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2401": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2402": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2403": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "POP",
      "path": "40"
    },
    "2404": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x31F"
    },
    "2407": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2409": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2410": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "2411": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "SUB",
      "path": "40"
    },
    "2412": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2414": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2415": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "LT",
      "path": "40"
    },
    "2416": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2417": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x979"
    },
    "2420": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2421": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2423": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2424": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2425": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2426": {
      "op": "POP"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2433": {
      "op": "SHL"
    },
    "2434": {
      "op": "SUB"
    },
    "2435": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2436": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2437": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "AND",
      "path": "40"
    },
    "2438": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2439": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2441": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "ADD",
      "path": "40"
    },
    "2442": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2443": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1503"
    },
    "2446": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2447": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2448": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2449": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2450": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2451": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x99B"
    },
    "2454": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2455": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2457": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2458": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2459": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2460": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "POP",
      "path": "45"
    },
    "2461": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "2464": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2466": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2467": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "2468": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "SUB",
      "path": "45"
    },
    "2469": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2471": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2472": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "LT",
      "path": "45"
    },
    "2473": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2474": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9B2"
    },
    "2477": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2478": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2480": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2481": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2482": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "SUB"
    },
    "2493": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "AND",
      "path": "45"
    },
    "2494": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1517"
    },
    "2497": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "i",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2498": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2499": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2500": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2501": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2502": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9CE"
    },
    "2505": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2506": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2508": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2509": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2510": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2511": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "2512": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x403"
    },
    "2515": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2517": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2518": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "2519": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SUB",
      "path": "45"
    },
    "2520": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xC0"
    },
    "2522": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2523": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "LT",
      "path": "45"
    },
    "2524": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2525": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9E5"
    },
    "2528": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2529": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2531": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2532": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2533": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2541": {
      "op": "SHL"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2544": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2545": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "AND",
      "path": "45"
    },
    "2546": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2547": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2549": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2550": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ADD",
      "path": "45"
    },
    "2551": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2552": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2553": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2555": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2556": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ADD",
      "path": "45"
    },
    "2557": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2558": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2559": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "2561": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "2563": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2564": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ADD",
      "path": "45"
    },
    "2565": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2566": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "AND",
      "path": "45"
    },
    "2567": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2568": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2570": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2571": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ADD",
      "path": "45"
    },
    "2572": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2573": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2574": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA0"
    },
    "2576": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "ADD",
      "path": "45"
    },
    "2577": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2578": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x157A"
    },
    "2581": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2582": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2583": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2584": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2585": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2586": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA22"
    },
    "2589": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2590": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2592": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2593": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2594": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2595": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "POP",
      "path": "22"
    },
    "2596": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D4"
    },
    "2599": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2601": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2602": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2603": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "SUB",
      "path": "22"
    },
    "2604": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2606": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2607": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "LT",
      "path": "22"
    },
    "2608": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2609": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA39"
    },
    "2612": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2613": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2615": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2616": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2617": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2620": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17EC"
    },
    "2623": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2624": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2625": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "2626": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2627": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2628": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xA4C"
    },
    "2631": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2632": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2634": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2635": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2636": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2637": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "2638": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x403"
    },
    "2641": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2644": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "2645": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SUB",
      "path": "40"
    },
    "2646": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "2648": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2649": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "LT",
      "path": "40"
    },
    "2650": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2651": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xA63"
    },
    "2654": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2655": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2657": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2658": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2659": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2660": {
      "op": "POP"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "SUB"
    },
    "2669": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2670": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2671": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2672": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "AND",
      "path": "40"
    },
    "2673": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2674": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2676": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2677": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2678": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2679": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2680": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2681": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "AND",
      "path": "40"
    },
    "2682": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2683": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2685": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2686": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2687": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2688": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2689": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "2691": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2692": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2693": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2694": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2695": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "2697": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "2699": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2700": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2701": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2702": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "AND",
      "path": "40"
    },
    "2703": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2704": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "2706": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2707": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2708": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2709": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2710": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "2712": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "ADD",
      "path": "40"
    },
    "2713": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2714": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1803"
    },
    "2717": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2718": {
      "offset": [
        834,
        896
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2719": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2720": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2721": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2722": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAAA"
    },
    "2725": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2726": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2728": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2729": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2730": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2731": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "POP",
      "path": "45"
    },
    "2732": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "2735": {
      "fn": "ERC20.permit",
      "offset": [
        834,
        896
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1A9F"
    },
    "2738": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        834,
        896
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2739": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2740": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "2741": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2742": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2743": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xABF"
    },
    "2746": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2747": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2749": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2750": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2751": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2752": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "POP",
      "path": "22"
    },
    "2753": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x403"
    },
    "2756": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2758": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2759": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "2760": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "SUB",
      "path": "22"
    },
    "2761": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2763": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2764": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "LT",
      "path": "22"
    },
    "2765": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2766": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD6"
    },
    "2769": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2770": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2772": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2773": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2774": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2777": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2778": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2779": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2781": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "ADD",
      "path": "22"
    },
    "2782": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "op": "SUB"
    },
    "2791": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "AND",
      "path": "22"
    },
    "2792": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AC3"
    },
    "2795": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2796": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2797": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "2798": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2799": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2800": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xAF8"
    },
    "2803": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2804": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2806": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2807": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2808": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2809": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "POP",
      "path": "40"
    },
    "2810": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2D4"
    },
    "2813": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2815": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2816": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "2817": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "SUB",
      "path": "40"
    },
    "2818": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2820": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2821": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "LT",
      "path": "40"
    },
    "2822": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2823": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xB0F"
    },
    "2826": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2827": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2829": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2830": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2831": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2839": {
      "op": "SHL"
    },
    "2840": {
      "op": "SUB"
    },
    "2841": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2842": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2843": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2844": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "AND",
      "path": "40"
    },
    "2845": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2846": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2848": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "ADD",
      "path": "40"
    },
    "2849": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "2850": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "AND",
      "path": "40"
    },
    "2851": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B1C"
    },
    "2854": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2855": {
      "offset": [
        3669,
        3786
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2856": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2857": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2858": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2859": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB33"
    },
    "2862": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2863": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2865": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2866": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2867": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2868": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "POP",
      "path": "45"
    },
    "2869": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "2872": {
      "fn": "ERC20.allowance",
      "offset": [
        3669,
        3786
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B47"
    },
    "2875": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3669,
        3786
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2876": {
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2877": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2878": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2879": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2880": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB48"
    },
    "2883": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2884": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2886": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2887": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2888": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2889": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "POP",
      "path": "45"
    },
    "2890": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB7B"
    },
    "2893": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2895": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2896": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "2897": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SUB",
      "path": "45"
    },
    "2898": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2900": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2901": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "LT",
      "path": "45"
    },
    "2902": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2903": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB5F"
    },
    "2906": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2907": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2909": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2910": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2911": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2914": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "offset": [
        3201,
        3271
      ],
      "op": "AND",
      "path": "45"
    },
    "2924": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2925": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2927": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ADD",
      "path": "45"
    },
    "2928": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "2929": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "2934": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "AND",
      "path": "45"
    },
    "2935": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B6B"
    },
    "2938": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2939": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2940": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2942": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2943": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2944": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "2949": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2950": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2951": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "AND",
      "path": "45"
    },
    "2952": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2953": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2954": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2956": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2957": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ADD",
      "path": "45"
    },
    "2958": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2959": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2960": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2961": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2962": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2963": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2964": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2965": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2966": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2967": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SUB",
      "path": "45"
    },
    "2968": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ADD",
      "path": "45"
    },
    "2969": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2970": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "RETURN",
      "path": "45"
    },
    "2971": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2972": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "2973": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2974": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2975": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBA7"
    },
    "2978": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2979": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2981": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2982": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2983": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2984": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "2985": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24A"
    },
    "2988": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2990": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2991": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "2992": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SUB",
      "path": "45"
    },
    "2993": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2995": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2996": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "LT",
      "path": "45"
    },
    "2997": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2998": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBBE"
    },
    "3001": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3002": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3004": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3005": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3006": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3007": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3008": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3009": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3010": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3012": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3013": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3014": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3015": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3022": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3023": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3024": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBD8"
    },
    "3027": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3028": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3030": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3031": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3032": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3033": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3034": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3035": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3036": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3038": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3039": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3040": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3041": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3042": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBEA"
    },
    "3045": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3046": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3048": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3049": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3050": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3051": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3052": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3053": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3054": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3056": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3057": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3058": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3059": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3061": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3062": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "MUL",
      "path": "45"
    },
    "3063": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3064": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3065": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3072": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3073": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "OR",
      "path": "45"
    },
    "3074": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3075": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC0B"
    },
    "3078": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3079": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3081": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3082": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3083": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3084": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3085": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3086": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3087": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3088": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3089": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3090": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3092": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3093": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3094": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3095": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3102": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3103": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3104": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC28"
    },
    "3107": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3108": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3110": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3111": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3112": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3113": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3114": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3115": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3116": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3118": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3119": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3120": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3121": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3122": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC3A"
    },
    "3125": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3126": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3128": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3129": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3130": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3131": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3132": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3133": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3134": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3136": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3137": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3138": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3139": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3141": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3142": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "MUL",
      "path": "45"
    },
    "3143": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3144": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3145": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3152": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "GT",
      "path": "45"
    },
    "3153": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "OR",
      "path": "45"
    },
    "3154": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3155": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC5B"
    },
    "3158": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3159": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3161": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3162": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3163": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3164": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3165": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3166": {
      "op": "POP"
    },
    "3167": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "op": "SUB"
    },
    "3177": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3178": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3179": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "AND",
      "path": "45"
    },
    "3180": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3181": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3183": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "ADD",
      "path": "45"
    },
    "3184": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3185": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1B98"
    },
    "3188": {
      "fn": "SushiToken.getInitData",
      "jump": "i",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3189": {
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3190": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "3191": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3192": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3193": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC81"
    },
    "3196": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3197": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3199": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3200": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3201": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3202": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "POP",
      "path": "45"
    },
    "3203": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2D4"
    },
    "3206": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3208": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3209": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "3210": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "SUB",
      "path": "45"
    },
    "3211": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3213": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3214": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "LT",
      "path": "45"
    },
    "3215": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3216": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC98"
    },
    "3219": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3220": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3222": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3223": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3224": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3225": {
      "op": "POP"
    },
    "3226": {
      "offset": [
        3864,
        3906
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3233": {
      "op": "SHL"
    },
    "3234": {
      "op": "SUB"
    },
    "3235": {
      "offset": [
        3864,
        3906
      ],
      "op": "AND",
      "path": "45"
    },
    "3236": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C35"
    },
    "3239": {
      "fn": "SushiToken.getInitData",
      "jump": "i",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3240": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3241": {
      "fn": "ERC20.name",
      "offset": [
        2700,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 0,
      "value": "0x6"
    },
    "3243": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3244": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3245": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3247": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3248": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "3249": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3251": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "3253": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3257": {
      "op": "NOT"
    },
    "3258": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "3261": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "3263": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP9",
      "path": "40"
    },
    "3264": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "AND",
      "path": "40"
    },
    "3265": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "3266": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MUL",
      "path": "40"
    },
    "3267": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3268": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3269": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "3270": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "AND",
      "path": "40"
    },
    "3271": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "3272": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3273": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "3274": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DIV",
      "path": "40"
    },
    "3275": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "3276": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3277": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3278": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3279": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3280": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DIV",
      "path": "40"
    },
    "3281": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3282": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MUL",
      "path": "40"
    },
    "3283": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3284": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3285": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3286": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3287": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3288": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "3289": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3290": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3291": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3292": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3293": {
      "fn": "ERC20.name",
      "offset": [
        2668,
        2681
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "3295": {
      "fn": "ERC20.name",
      "offset": [
        2668,
        2681
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "3296": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3297": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "3298": {
      "fn": "ERC20.name",
      "offset": [
        2700,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3299": {
      "fn": "ERC20.name",
      "offset": [
        2700,
        2705
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3300": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP4",
      "path": "40"
    },
    "3301": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3302": {
      "fn": "ERC20.name",
      "offset": [
        2700,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3303": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3304": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3305": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "3306": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD34"
    },
    "3309": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "3310": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3311": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "3313": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "LT",
      "path": "40"
    },
    "3314": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD09"
    },
    "3317": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "3318": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "3321": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3322": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP4",
      "path": "40"
    },
    "3323": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3324": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DIV",
      "path": "40"
    },
    "3325": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MUL",
      "path": "40"
    },
    "3326": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP4",
      "path": "40"
    },
    "3327": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3328": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3329": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3331": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3332": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3333": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD34"
    },
    "3336": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3337": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3338": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3339": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3340": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3341": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3342": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3344": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3345": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3347": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3349": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "3350": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3351": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3352": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3353": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3354": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3355": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3356": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3357": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "3359": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3360": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3361": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3363": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3364": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3365": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP4",
      "path": "40"
    },
    "3366": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "GT",
      "path": "40"
    },
    "3367": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD17"
    },
    "3370": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "3371": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3372": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3373": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SUB",
      "path": "40"
    },
    "3374": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "3376": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "AND",
      "path": "40"
    },
    "3377": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3378": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "40"
    },
    "3379": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3380": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3381": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3382": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3383": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3384": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3385": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3386": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3387": {
      "fn": "ERC20.name",
      "offset": [
        2693,
        2705
      ],
      "op": "POP",
      "path": "40"
    },
    "3388": {
      "fn": "ERC20.name",
      "offset": [
        2622,
        2712
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3389": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2622,
        2712
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3390": {
      "offset": [
        777,
        827
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3391": {
      "offset": [
        826,
        827
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x3"
    },
    "3393": {
      "offset": [
        777,
        827
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3394": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        777,
        827
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3395": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3396": {
      "fn": "ERC20.approve",
      "offset": [
        4759,
        4763
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3398": {
      "fn": "ERC20.approve",
      "offset": [
        4775,
        4814
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 1,
      "value": "0xD57"
    },
    "3401": {
      "fn": "ERC20.approve",
      "offset": [
        4784,
        4796
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD50"
    },
    "3404": {
      "fn": "ERC20.approve",
      "offset": [
        4784,
        4794
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "3407": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4784,
        4796
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3408": {
      "fn": "ERC20.approve",
      "offset": [
        4784,
        4796
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3409": {
      "fn": "ERC20.approve",
      "offset": [
        4798,
        4805
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3410": {
      "fn": "ERC20.approve",
      "offset": [
        4807,
        4813
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3411": {
      "fn": "ERC20.approve",
      "offset": [
        4775,
        4783
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C4B"
    },
    "3414": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4775,
        4814
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3415": {
      "fn": "ERC20.approve",
      "offset": [
        4775,
        4814
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "fn": "ERC20.approve",
      "offset": [
        4831,
        4835
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 2,
      "value": "0x1"
    },
    "3419": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3420": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "3421": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3422": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "POP",
      "path": "40"
    },
    "3423": {
      "fn": "ERC20.approve",
      "offset": [
        4676,
        4842
      ],
      "op": "POP",
      "path": "40"
    },
    "3424": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4676,
        4842
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3425": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3426": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3771,
        3783
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 3,
      "value": "0x5"
    },
    "3428": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3771,
        3783
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3429": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3692,
        3790
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3430": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3692,
        3790
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3431": {
      "offset": [
        3456,
        3578
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3432": {
      "offset": [
        3498,
        3578
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "3465": {
      "offset": [
        3456,
        3578
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3466": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3456,
        3578
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3467": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6990,
        6994
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3470": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7006,
        7042
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 4,
      "value": "0xD98"
    },
    "3473": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7016,
        7022
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3474": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7024,
        7033
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3475": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7035,
        7041
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7006,
        7015
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1D37"
    },
    "3479": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7006,
        7042
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7006,
        7042
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3481": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7052,
        7173
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 5,
      "value": "0xE08"
    },
    "3484": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7061,
        7067
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7069,
        7081
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xDA4"
    },
    "3488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7069,
        7079
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "3491": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7069,
        7081
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3492": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7069,
        7081
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3493": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xE03"
    },
    "3496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7121,
        7127
      ],
      "op": "DUP6",
      "path": "40"
    },
    "3497": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "3500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3501": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "3503": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "ADD",
      "path": "40"
    },
    "3504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3507": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3508": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x28"
    },
    "3510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3511": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3512": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "ADD",
      "path": "40"
    },
    "3515": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2AAE"
    },
    "3518": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x28"
    },
    "3520": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3521": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3528": {
      "op": "SHL"
    },
    "3529": {
      "op": "SUB"
    },
    "3530": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "DUP11",
      "path": "40"
    },
    "3531": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "AND",
      "path": "40"
    },
    "3532": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3534": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3535": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3536": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3537": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7094
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "3539": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3541": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3542": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3545": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "3546": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7102
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3547": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7103,
        7115
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xDE2"
    },
    "3550": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7103,
        7113
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "3553": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7103,
        7115
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7103,
        7115
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "op": "SUB"
    },
    "3563": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "AND",
      "path": "40"
    },
    "3564": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3565": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3568": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3569": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "ADD",
      "path": "40"
    },
    "3570": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3571": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3572": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3574": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "ADD",
      "path": "40"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3579": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "3580": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7116
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3582": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3583": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7120
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1E94"
    },
    "3586": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7083,
        7172
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7083,
        7172
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3588": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7052,
        7060
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C4B"
    },
    "3591": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7052,
        7173
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3592": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7052,
        7173
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3593": {
      "op": "POP"
    },
    "3594": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7190,
        7194
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 6,
      "value": "0x1"
    },
    "3596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "3597": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "3598": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "POP",
      "path": "40"
    },
    "3599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "POP",
      "path": "40"
    },
    "3600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6893,
        7201
      ],
      "op": "POP",
      "path": "40"
    },
    "3601": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        6893,
        7201
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3602": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3603": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4236,
        4243
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3605": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 7
    },
    "3606": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3607": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3608": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3610": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3611": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3612": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3613": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3615": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4274
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3617": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4284
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4284
      ],
      "op": "ADD",
      "path": "22"
    },
    "3620": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4284
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3621": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4262,
        4284
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3622": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "o",
      "offset": [
        4179,
        4291
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3623": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3624": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4638
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 8,
      "value": "0x0"
    },
    "3626": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3627": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3628": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3629": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3631": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3632": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3633": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3634": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3636": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3637": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4644
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3638": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4654
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3640": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4654
      ],
      "op": "ADD",
      "path": "22"
    },
    "3641": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4632,
        4654
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3642": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4624,
        4669
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE4A"
    },
    "3645": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4624,
        4669
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3646": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4656,
        4668
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE45"
    },
    "3649": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4656,
        4666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C47"
    },
    "3652": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4656,
        4668
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3653": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4656,
        4668
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3654": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4624,
        4631
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x141D"
    },
    "3657": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4624,
        4669
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3658": {
      "branch": 133,
      "fn": "AccessControl.grantRole",
      "offset": [
        4624,
        4669
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3659": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE85"
    },
    "3662": {
      "branch": 133,
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3663": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3665": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3674": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3675": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3677": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "ADD",
      "path": "22"
    },
    "3678": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3679": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3680": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3682": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "ADD",
      "path": "22"
    },
    "3683": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3684": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3685": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SUB",
      "path": "22"
    },
    "3686": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3687": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3688": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2F"
    },
    "3690": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3691": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3692": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3694": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "ADD",
      "path": "22"
    },
    "3695": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3696": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2930"
    },
    "3699": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2F"
    },
    "3701": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3702": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "CODECOPY",
      "path": "22"
    },
    "3703": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3705": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "ADD",
      "path": "22"
    },
    "3706": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3707": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "POP",
      "path": "22"
    },
    "3708": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "POP",
      "path": "22"
    },
    "3709": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3711": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3712": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3713": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3714": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SUB",
      "path": "22"
    },
    "3715": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3716": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3717": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4616,
        4721
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3718": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4732,
        4757
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 9,
      "value": "0xE8F"
    },
    "3721": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4743,
        4747
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3722": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4749,
        4756
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3723": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4732,
        4742
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F2B"
    },
    "3726": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4732,
        4757
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3727": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4732,
        4757
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3728": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "POP",
      "path": "22"
    },
    "3729": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4541,
        4764
      ],
      "op": "POP",
      "path": "22"
    },
    "3730": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4541,
        4764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3731": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3732": {
      "fn": "ERC20.decimals",
      "offset": [
        3616,
        3625
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 10,
      "value": "0x8"
    },
    "3734": {
      "fn": "ERC20.decimals",
      "offset": [
        3616,
        3625
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3735": {
      "fn": "ERC20.decimals",
      "offset": [
        3616,
        3625
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "3737": {
      "fn": "ERC20.decimals",
      "offset": [
        3616,
        3625
      ],
      "op": "AND",
      "path": "40"
    },
    "3738": {
      "fn": "ERC20.decimals",
      "offset": [
        3542,
        3632
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3739": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3542,
        3632
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3740": {
      "offset": [
        1383,
        1414
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3741": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "3743": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3744": {
      "fn": "ERC20.decimals",
      "offset": [
        1383,
        1414
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3745": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        1383,
        1414
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3746": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5715,
        5920
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3747": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5812,
        5824
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 11,
      "value": "0xEAA"
    },
    "3750": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5812,
        5822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C47"
    },
    "3753": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5812,
        5824
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3754": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5812,
        5824
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "SUB"
    },
    "3763": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5801,
        5824
      ],
      "op": "AND",
      "path": "22"
    },
    "3764": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5801,
        5808
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "op": "SUB"
    },
    "3773": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5801,
        5824
      ],
      "op": "AND",
      "path": "22"
    },
    "3774": {
      "branch": 134,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5801,
        5824
      ],
      "op": "EQ",
      "path": "22"
    },
    "3775": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEF9"
    },
    "3778": {
      "branch": 134,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3779": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3781": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3782": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3790": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3791": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3793": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "ADD",
      "path": "22"
    },
    "3794": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3795": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3796": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3798": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "ADD",
      "path": "22"
    },
    "3799": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3800": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3801": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SUB",
      "path": "22"
    },
    "3802": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3803": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3804": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2F"
    },
    "3806": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3807": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3808": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3810": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "ADD",
      "path": "22"
    },
    "3811": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3812": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B8E"
    },
    "3815": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2F"
    },
    "3817": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3818": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "CODECOPY",
      "path": "22"
    },
    "3819": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3821": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "ADD",
      "path": "22"
    },
    "3822": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3823": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "POP",
      "path": "22"
    },
    "3824": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "POP",
      "path": "22"
    },
    "3825": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3827": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3828": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3829": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3830": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SUB",
      "path": "22"
    },
    "3831": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3832": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3833": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5793,
        5876
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3834": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5887,
        5913
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 12,
      "value": "0xE8F"
    },
    "3837": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5899,
        5903
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3838": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5905,
        5912
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3839": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5887,
        5898
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F94"
    },
    "3842": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5887,
        5913
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7596,
        7811
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7684,
        7688
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7700,
        7783
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 13,
      "value": "0xD57"
    },
    "3849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7709,
        7721
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xF10"
    },
    "3852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7709,
        7719
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "3855": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7709,
        7721
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7709,
        7721
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "40"
    },
    "3858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7782
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xE03"
    },
    "3861": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7771,
        7781
      ],
      "op": "DUP6",
      "path": "40"
    },
    "3862": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7743
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "3864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "3866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7744,
        7756
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xF21"
    },
    "3869": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7744,
        7754
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "3872": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7744,
        7756
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3873": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7744,
        7756
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "op": "SUB"
    },
    "3882": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3883": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "AND",
      "path": "40"
    },
    "3885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3886": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3887": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "3889": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP1",
      "path": "40"
    },
    "3890": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP4",
      "path": "40"
    },
    "3891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "ADD",
      "path": "40"
    },
    "3892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "3893": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "3895": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3896": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "3898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP3",
      "path": "40"
    },
    "3900": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "ADD",
      "path": "40"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3904": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3905": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7757
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "3906": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "3907": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "DUP13",
      "path": "40"
    },
    "3908": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "AND",
      "path": "40"
    },
    "3909": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "DUP2",
      "path": "40"
    },
    "3910": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3911": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "3912": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "3913": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3914": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "3915": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "3916": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7766
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "3917": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7732,
        7770
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1FFD"
    },
    "3920": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7732,
        7782
      ],
      "op": "JUMP",
      "path": "40"
    },
    "3921": {
      "fn": "SushiToken.mint",
      "offset": [
        2214,
        2462
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3922": {
      "fn": "SushiToken.mint",
      "offset": [
        2284,
        2318
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 14,
      "value": "0xF7D"
    },
    "3925": {
      "offset": [
        872,
        896
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "3958": {
      "fn": "SushiToken.mint",
      "offset": [
        2305,
        2317
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE45"
    },
    "3961": {
      "fn": "SushiToken.mint",
      "offset": [
        2305,
        2315
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C47"
    },
    "3964": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        2305,
        2317
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3965": {
      "branch": 112,
      "fn": "SushiToken.mint",
      "offset": [
        2284,
        2318
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3966": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xFB8"
    },
    "3969": {
      "branch": 112,
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3970": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3972": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3979": {
      "op": "SHL"
    },
    "3980": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3981": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3982": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3984": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "ADD",
      "path": "45"
    },
    "3985": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3986": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3987": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3989": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "ADD",
      "path": "45"
    },
    "3990": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3991": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3992": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SUB",
      "path": "45"
    },
    "3993": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3994": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3995": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "3997": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3998": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3999": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4001": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "ADD",
      "path": "45"
    },
    "4002": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4003": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x295F"
    },
    "4006": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "4008": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4009": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "4010": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4012": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "ADD",
      "path": "45"
    },
    "4013": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4014": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "POP",
      "path": "45"
    },
    "4015": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "POP",
      "path": "45"
    },
    "4016": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4018": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4019": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4020": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4021": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SUB",
      "path": "45"
    },
    "4022": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4023": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4024": {
      "fn": "SushiToken.mint",
      "offset": [
        2276,
        2364
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4025": {
      "fn": "SushiToken.mint",
      "offset": [
        2374,
        2393
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 15,
      "value": "0xFC2"
    },
    "4028": {
      "fn": "SushiToken.mint",
      "offset": [
        2380,
        2383
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4029": {
      "fn": "SushiToken.mint",
      "offset": [
        2385,
        2392
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4030": {
      "fn": "SushiToken.mint",
      "offset": [
        2374,
        2379
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2057"
    },
    "4033": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        2374,
        2393
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4034": {
      "fn": "SushiToken.mint",
      "offset": [
        2374,
        2393
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4041": {
      "op": "SHL"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 16
    },
    "4044": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4045": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "AND",
      "path": "45"
    },
    "4046": {
      "fn": "SushiToken.mint",
      "offset": [
        2426,
        2427
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4048": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4049": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4050": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4051": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2440
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "4053": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4055": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4056": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4058": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4059": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4060": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4061": {
      "fn": "SushiToken.mint",
      "offset": [
        2403,
        2455
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE8F"
    },
    "4064": {
      "fn": "SushiToken.mint",
      "offset": [
        2403,
        2455
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4065": {
      "fn": "SushiToken.mint",
      "offset": [
        2430,
        2445
      ],
      "op": "AND",
      "path": "45"
    },
    "4066": {
      "fn": "SushiToken.mint",
      "offset": [
        2447,
        2454
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4067": {
      "fn": "SushiToken.mint",
      "offset": [
        2403,
        2417
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2149"
    },
    "4070": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        2403,
        2455
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4071": {
      "fn": "SushiToken.delegates",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4078": {
      "op": "SHL"
    },
    "4079": {
      "op": "SUB"
    },
    "4080": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "SWAP1",
      "path": "45",
      "statement": 17
    },
    "4081": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4082": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "AND",
      "path": "45"
    },
    "4083": {
      "fn": "SushiToken.delegates",
      "offset": [
        4507,
        4514
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4085": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4086": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4087": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4088": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4547
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "4090": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4092": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4093": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4095": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4096": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4097": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4098": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "AND",
      "path": "45"
    },
    "4099": {
      "fn": "SushiToken.delegates",
      "offset": [
        4537,
        4558
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4100": {
      "fn": "SushiToken.delegates",
      "jump": "o",
      "offset": [
        4422,
        4565
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4101": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4102": {
      "fn": "SushiToken.delegate",
      "offset": [
        4766,
        4798
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 18,
      "value": "0x100F"
    },
    "4105": {
      "fn": "SushiToken.delegate",
      "offset": [
        4776,
        4786
      ],
      "op": "CALLER",
      "path": "45"
    },
    "4106": {
      "fn": "SushiToken.delegate",
      "offset": [
        4788,
        4797
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4107": {
      "fn": "SushiToken.delegate",
      "offset": [
        4766,
        4775
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x228B"
    },
    "4110": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        4766,
        4798
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4111": {
      "fn": "SushiToken.delegate",
      "offset": [
        4766,
        4798
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4112": {
      "fn": "SushiToken.delegate",
      "offset": [
        4703,
        4805
      ],
      "op": "POP",
      "path": "45"
    },
    "4113": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        4703,
        4805
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4114": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4115": {
      "fn": "SushiToken.initToken",
      "offset": [
        1346,
        1365
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "4117": {
      "fn": "SushiToken.initToken",
      "offset": [
        1375,
        1396
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4118": {
      "fn": "SushiToken.initToken",
      "offset": [
        1406,
        1420
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4120": {
      "fn": "SushiToken.initToken",
      "offset": [
        1430,
        1452
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4121": {
      "fn": "SushiToken.initToken",
      "offset": [
        1467,
        1472
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4122": {
      "fn": "SushiToken.initToken",
      "offset": [
        1467,
        1472
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4123": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "4125": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4126": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "LT",
      "path": "45"
    },
    "4127": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4128": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1028"
    },
    "4131": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4132": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4134": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4135": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4136": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4137": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4138": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4139": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4140": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4142": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4143": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4144": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4145": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4152": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4153": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4154": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1042"
    },
    "4157": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4158": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4160": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4161": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4162": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4163": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4164": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4165": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4166": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4168": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4169": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4170": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4171": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4172": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1054"
    },
    "4175": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4176": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4178": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4179": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4180": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4181": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4182": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4183": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4184": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4186": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4187": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4188": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4189": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4191": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4192": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MUL",
      "path": "45"
    },
    "4193": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4194": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4195": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4200": {
      "op": "SHL"
    },
    "4201": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4202": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4203": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "OR",
      "path": "45"
    },
    "4204": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4205": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1075"
    },
    "4208": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4209": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4211": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4212": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4213": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4214": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4215": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4216": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4217": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4218": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "4220": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4221": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4223": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4224": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4225": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DIV",
      "path": "45"
    },
    "4226": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MUL",
      "path": "45"
    },
    "4227": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4229": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4230": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4232": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4233": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4234": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4235": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4236": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4238": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4239": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4240": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4241": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4242": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4243": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4244": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4245": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4246": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4247": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4249": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4250": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4251": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4252": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4253": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4254": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4255": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "4256": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4258": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4259": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4260": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4261": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4262": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4263": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4266": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "4267": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4268": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4269": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4271": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4272": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4273": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4276": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4283": {
      "op": "SHL"
    },
    "4284": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4285": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4286": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4287": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10C7"
    },
    "4290": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4291": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4293": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4294": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4295": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4296": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4297": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4298": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4299": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4301": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4302": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4303": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4304": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4305": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10D9"
    },
    "4308": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4309": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4311": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4312": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4313": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4314": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4315": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4316": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4317": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4319": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4320": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4321": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4322": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4324": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4325": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MUL",
      "path": "45"
    },
    "4326": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4327": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4328": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4333": {
      "op": "SHL"
    },
    "4334": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4335": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "GT",
      "path": "45"
    },
    "4336": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "OR",
      "path": "45"
    },
    "4337": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4338": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10FA"
    },
    "4341": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4342": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4344": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4345": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4346": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4347": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4348": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4349": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4350": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4351": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "4353": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4354": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4356": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4357": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4358": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DIV",
      "path": "45"
    },
    "4359": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MUL",
      "path": "45"
    },
    "4360": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4362": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4363": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4365": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4366": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4367": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4368": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4369": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4371": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4372": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4373": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4374": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4375": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4376": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4377": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4378": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4379": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4380": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4382": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4383": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4384": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4385": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4386": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4387": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4388": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "4389": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4391": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4392": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4393": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4394": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4395": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4396": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "fn": "SushiToken.initToken",
      "offset": [
        1345,
        1509
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "4399": {
      "fn": "SushiToken.initToken",
      "offset": [
        1345,
        1509
      ],
      "op": "SWAP11",
      "path": "45"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4402": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP9",
      "path": "45"
    },
    "4403": {
      "op": "POP"
    },
    "4404": {
      "op": "POP"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4411": {
      "op": "SHL"
    },
    "4412": {
      "op": "SUB"
    },
    "4413": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4414": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4415": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "AND",
      "path": "45"
    },
    "4416": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "4417": {
      "op": "POP"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4421": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "ADD",
      "path": "45"
    },
    "4422": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "4423": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4424": {
      "op": "POP"
    },
    "4425": {
      "fn": "SushiToken.initToken",
      "offset": [
        1520,
        1566
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 19,
      "value": "0x115A"
    },
    "4428": {
      "fn": "SushiToken.initToken",
      "offset": [
        1520,
        1566
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4429": {
      "op": "POP"
    },
    "4430": {
      "fn": "SushiToken.initToken",
      "offset": [
        1345,
        1509
      ],
      "op": "DUP7",
      "path": "45"
    },
    "4431": {
      "fn": "SushiToken.initToken",
      "offset": [
        1345,
        1509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4432": {
      "op": "POP"
    },
    "4433": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4434": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4437": {
      "fn": "SushiToken.initToken",
      "offset": [
        1456,
        1509
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4438": {
      "fn": "SushiToken.initToken",
      "offset": [
        1520,
        1529
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13AF"
    },
    "4441": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1520,
        1566
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4442": {
      "fn": "SushiToken.initToken",
      "offset": [
        1520,
        1566
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4443": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4444": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4445": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4446": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4447": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4448": {
      "fn": "SushiToken.initToken",
      "offset": [
        1264,
        1573
      ],
      "op": "POP",
      "path": "45"
    },
    "4449": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        1264,
        1573
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4450": {
      "offset": [
        3337,
        3386
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4451": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "4453": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4455": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4456": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4458": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4459": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4460": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4461": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4463": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4464": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4465": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4466": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4471": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "AND",
      "path": "45"
    },
    "4472": {
      "fn": "SushiToken.initToken",
      "offset": [
        3337,
        3386
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4473": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        3337,
        3386
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4474": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "SUB"
    },
    "4483": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "AND",
      "path": "40",
      "statement": 20
    },
    "4484": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3914,
        3921
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "4486": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "4487": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "DUP2",
      "path": "40"
    },
    "4488": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "4489": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3949
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "4491": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "4493": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "4494": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "4496": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "4497": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "4498": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "4499": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3940,
        3958
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "4500": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3848,
        3965
      ],
      "op": "JUMP",
      "path": "40"
    },
    "4501": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4502": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7340,
        7347
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4504": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7385,
        7397
      ],
      "op": "NUMBER",
      "path": "45",
      "statement": 21
    },
    "4505": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7371,
        7382
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4506": {
      "branch": 113,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7371,
        7397
      ],
      "op": "LT",
      "path": "45"
    },
    "4507": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x11D5"
    },
    "4510": {
      "branch": 113,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4511": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4513": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4522": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4523": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "4525": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "ADD",
      "path": "45"
    },
    "4526": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4527": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4528": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4530": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "ADD",
      "path": "45"
    },
    "4531": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4532": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4533": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SUB",
      "path": "45"
    },
    "4534": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4535": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4536": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x28"
    },
    "4538": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4539": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4540": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4542": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "ADD",
      "path": "45"
    },
    "4543": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4544": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A86"
    },
    "4547": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x28"
    },
    "4549": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4550": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "4551": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4553": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "ADD",
      "path": "45"
    },
    "4554": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4555": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "POP",
      "path": "45"
    },
    "4556": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "POP",
      "path": "45"
    },
    "4557": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4559": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4560": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4561": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4562": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SUB",
      "path": "45"
    },
    "4563": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4564": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4565": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7363,
        7442
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4575": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "AND",
      "path": "45"
    },
    "4576": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7453,
        7472
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4578": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4579": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4580": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4581": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7489
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "4583": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4585": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4586": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4588": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4589": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4590": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4591": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4596": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7475,
        7498
      ],
      "op": "AND",
      "path": "45"
    },
    "4597": {
      "branch": 114,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7512,
        7529
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4598": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7508,
        7564
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1203"
    },
    "4601": {
      "branch": 114,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7508,
        7564
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4602": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7552,
        7553
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 22,
      "value": "0x0"
    },
    "4604": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7545,
        7553
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4605": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7545,
        7553
      ],
      "op": "POP",
      "path": "45"
    },
    "4606": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7545,
        7553
      ],
      "op": "POP",
      "path": "45"
    },
    "4607": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7545,
        7553
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5B"
    },
    "4610": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7545,
        7553
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4611": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7508,
        7564
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4618": {
      "op": "SHL"
    },
    "4619": {
      "op": "SUB"
    },
    "4620": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4621": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "AND",
      "path": "45"
    },
    "4622": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4624": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4625": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4626": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4627": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7632
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "4629": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4631": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4632": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4633": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4634": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4636": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4637": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4638": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7641
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4639": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "NOT"
    },
    "4647": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7642,
        7658
      ],
      "op": "DUP7",
      "path": "45"
    },
    "4648": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7642,
        7658
      ],
      "op": "ADD",
      "path": "45"
    },
    "4649": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4650": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "AND",
      "path": "45"
    },
    "4651": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4652": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4653": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4654": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4655": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4656": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4657": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7659
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4658": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7669
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4659": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7669
      ],
      "op": "AND",
      "path": "45"
    },
    "4660": {
      "branch": 115,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7621,
        7684
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4661": {
      "op": "LT"
    },
    "4662": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7617,
        7762
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1272"
    },
    "4665": {
      "branch": 115,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7617,
        7762
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4672": {
      "op": "SHL"
    },
    "4673": {
      "op": "SUB"
    },
    "4674": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "DUP5",
      "path": "45",
      "statement": 23
    },
    "4675": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "AND",
      "path": "45"
    },
    "4676": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4678": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4679": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4680": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4681": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "4683": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4685": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4686": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4687": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4688": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4690": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4691": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4692": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7727
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4695": {
      "op": "NOT"
    },
    "4696": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7728,
        7744
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4697": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7728,
        7744
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4698": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7728,
        7744
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4699": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7728,
        7744
      ],
      "op": "ADD",
      "path": "45"
    },
    "4700": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4705": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "AND",
      "path": "45"
    },
    "4706": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4707": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4708": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4709": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4710": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4711": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7745
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4712": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7743,
        7744
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4714": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7751
      ],
      "op": "ADD",
      "path": "45"
    },
    "4715": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7751
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4716": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7707,
        7751
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7700,
        7751
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5B"
    },
    "4721": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7700,
        7751
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4722": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7617,
        7762
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "SUB"
    },
    "4731": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4732": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "AND",
      "path": "45"
    },
    "4733": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4735": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4736": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4737": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4738": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7831
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "4740": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4742": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4743": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4744": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4745": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4747": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4748": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4749": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7840
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4750": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4751": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4752": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4753": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4754": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4755": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4756": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4757": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4758": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7853
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4759": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7843
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4764": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7853
      ],
      "op": "AND",
      "path": "45"
    },
    "4765": {
      "branch": 116,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7820,
        7867
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4766": {
      "op": "LT"
    },
    "4767": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7816,
        7902
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4768": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7816,
        7902
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12AD"
    },
    "4771": {
      "branch": 116,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7816,
        7902
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4772": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7890,
        7891
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 24,
      "value": "0x0"
    },
    "4774": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7883,
        7891
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4775": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7883,
        7891
      ],
      "op": "POP",
      "path": "45"
    },
    "4776": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7883,
        7891
      ],
      "op": "POP",
      "path": "45"
    },
    "4777": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7883,
        7891
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5B"
    },
    "4780": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7883,
        7891
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4781": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7816,
        7902
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4782": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7912,
        7924
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4786": {
      "op": "NOT"
    },
    "4787": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7953,
        7969
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4788": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7953,
        7969
      ],
      "op": "ADD",
      "path": "45"
    },
    "4789": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4790": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7994,
        7999
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4791": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7999
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4796": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7999
      ],
      "op": "AND",
      "path": "45"
    },
    "4797": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4798": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7999
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4803": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7999
      ],
      "op": "AND",
      "path": "45"
    },
    "4804": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7986,
        7999
      ],
      "op": "GT",
      "path": "45"
    },
    "4805": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4806": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1366"
    },
    "4809": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4810": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8057,
        8058
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "4812": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8040,
        8053
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4813": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8040,
        8053
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4814": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8040,
        8053
      ],
      "op": "SUB",
      "path": "45"
    },
    "4815": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8039,
        8058
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4820": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8039,
        8058
      ],
      "op": "AND",
      "path": "45"
    },
    "4821": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8039,
        8058
      ],
      "op": "DIV",
      "path": "45"
    },
    "4822": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8031,
        8058
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4823": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8031,
        8058
      ],
      "op": "SUB",
      "path": "45"
    },
    "4824": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8119
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12DF"
    },
    "4827": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8119
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2840"
    },
    "4830": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        8099,
        8119
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4831": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8119
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "SUB"
    },
    "4841": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4842": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "AND",
      "path": "45"
    },
    "4843": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4845": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4846": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4847": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4848": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8133
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "4850": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4852": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4853": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4854": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4855": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4857": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4858": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4859": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8142
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4860": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4865": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4866": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "DUP7",
      "path": "45"
    },
    "4867": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "AND",
      "path": "45"
    },
    "4868": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4869": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4870": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4871": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4872": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4873": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4874": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4875": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4876": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8122,
        8150
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4877": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4878": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4879": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4880": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4881": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "ADD",
      "path": "45"
    },
    "4882": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4883": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4884": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4885": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4886": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4887": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4888": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4889": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "AND",
      "path": "45"
    },
    "4890": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4891": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4892": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4893": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4895": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4896": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4897": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "ADD",
      "path": "45"
    },
    "4898": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "4899": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4900": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4901": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "ADD",
      "path": "45"
    },
    "4902": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4903": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4904": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4905": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4906": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8099,
        8150
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4907": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8168,
        8195
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4908": {
      "branch": 117,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8168,
        8195
      ],
      "op": "EQ",
      "path": "45"
    },
    "4909": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8164,
        8387
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4910": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8164,
        8387
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1341"
    },
    "4913": {
      "branch": 117,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8164,
        8387
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4914": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8222,
        8230
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 25,
      "value": "0x20"
    },
    "4916": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8222,
        8230
      ],
      "op": "ADD",
      "path": "45"
    },
    "4917": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8222,
        8230
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4918": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8222,
        8230
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8215,
        8230
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5B"
    },
    "4923": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8215,
        8230
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "op": "POP"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "POP"
    },
    "4928": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8215,
        8230
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4929": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8164,
        8387
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4930": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8255,
        8267
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4931": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8255,
        8267
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4932": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8255,
        8281
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "4937": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8255,
        8281
      ],
      "op": "AND",
      "path": "45"
    },
    "4938": {
      "branch": 118,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8255,
        8281
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4939": {
      "op": "GT"
    },
    "4940": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4941": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1358"
    },
    "4944": {
      "branch": 118,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4945": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8309,
        8315
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 26
    },
    "4946": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8301,
        8315
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "4947": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8301,
        8315
      ],
      "op": "POP",
      "path": "45"
    },
    "4948": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x135F"
    },
    "4951": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4952": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4953": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8371,
        8372
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 27,
      "value": "0x1"
    },
    "4955": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8362,
        8368
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4956": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8362,
        8372
      ],
      "op": "SUB",
      "path": "45"
    },
    "4957": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8354,
        8372
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "4958": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8354,
        8372
      ],
      "op": "POP",
      "path": "45"
    },
    "4959": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8251,
        8387
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4960": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "POP",
      "path": "45"
    },
    "4961": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "POP",
      "path": "45"
    },
    "4962": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12B5"
    },
    "4965": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4966": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7979,
        8397
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4974": {
      "op": "SHL"
    },
    "4975": {
      "op": "SUB"
    },
    "4976": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "DUP6",
      "path": "45",
      "statement": 28
    },
    "4977": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "AND",
      "path": "45"
    },
    "4978": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4980": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4981": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4982": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4983": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8424
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "4985": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4987": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4988": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4989": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4990": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4992": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4993": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4994": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8433
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "4995": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5000": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5001": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "5002": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "AND",
      "path": "45"
    },
    "5003": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5004": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5005": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5006": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5007": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5008": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8440
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5009": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8446
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "5011": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8446
      ],
      "op": "ADD",
      "path": "45"
    },
    "5012": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8446
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "5013": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        8413,
        8446
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5017": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5018": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "POP",
      "path": "45"
    },
    "5019": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        7235,
        8453
      ],
      "op": "POP",
      "path": "45"
    },
    "5020": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        7235,
        8453
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5021": {
      "offset": [
        1473,
        1514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5022": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "5024": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "5026": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5027": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "5029": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5030": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5031": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5032": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "5034": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5035": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "5036": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "5037": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        1473,
        1514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5038": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        1473,
        1514
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5039": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5040": {
      "fn": "SushiToken.initToken",
      "offset": [
        1023,
        1049
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 29,
      "value": "0x13B9"
    },
    "5043": {
      "fn": "SushiToken.initToken",
      "offset": [
        1034,
        1039
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5044": {
      "fn": "SushiToken.initToken",
      "offset": [
        1041,
        1048
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5045": {
      "fn": "SushiToken.initToken",
      "offset": [
        1023,
        1033
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2323"
    },
    "5048": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1023,
        1049
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5049": {
      "fn": "SushiToken.initToken",
      "offset": [
        1023,
        1049
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5050": {
      "fn": "SushiToken.initToken",
      "offset": [
        1059,
        1097
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 30,
      "value": "0x13C4"
    },
    "5053": {
      "offset": [
        1669,
        1673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5055": {
      "fn": "SushiToken.initToken",
      "offset": [
        1090,
        1096
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5056": {
      "fn": "SushiToken.initToken",
      "offset": [
        1059,
        1069
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE85"
    },
    "5059": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1059,
        1097
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5060": {
      "fn": "SushiToken.initToken",
      "offset": [
        1059,
        1097
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5061": {
      "fn": "SushiToken.initToken",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 31,
      "value": "0x13EE"
    },
    "5064": {
      "offset": [
        872,
        896
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "5097": {
      "fn": "SushiToken.initToken",
      "offset": [
        1131,
        1137
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5098": {
      "fn": "SushiToken.initToken",
      "offset": [
        1107,
        1117
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE85"
    },
    "5101": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1107,
        1138
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5102": {
      "fn": "SushiToken.initToken",
      "offset": [
        1107,
        1138
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5103": {
      "fn": "SushiToken.initToken",
      "offset": [
        1148,
        1181
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 32,
      "value": "0x13F8"
    },
    "5106": {
      "fn": "SushiToken.initToken",
      "offset": [
        1154,
        1164
      ],
      "op": "CALLER",
      "path": "45"
    },
    "5107": {
      "fn": "SushiToken.initToken",
      "offset": [
        1166,
        1180
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5108": {
      "fn": "SushiToken.initToken",
      "offset": [
        1148,
        1153
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2057"
    },
    "5111": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        1148,
        1181
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5112": {
      "fn": "SushiToken.initToken",
      "offset": [
        1148,
        1181
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5113": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "POP",
      "path": "45"
    },
    "5114": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "POP",
      "path": "45"
    },
    "5115": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "POP",
      "path": "45"
    },
    "5116": {
      "fn": "SushiToken.initToken",
      "offset": [
        903,
        1188
      ],
      "op": "POP",
      "path": "45"
    },
    "5117": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        903,
        1188
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5118": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5119": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3935,
        3942
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5121": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 33
    },
    "5122": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5123": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5124": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5126": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5127": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5128": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5129": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5131": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5132": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3973
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5133": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3991
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1416"
    },
    "5136": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3991
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5137": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3985,
        3990
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5138": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3984
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2405"
    },
    "5141": {
      "fn": "AccessControl.getRoleMember",
      "jump": "i",
      "offset": [
        3961,
        3991
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5142": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3961,
        3991
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5143": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3954,
        3991
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5144": {
      "fn": "AccessControl.getRoleMember",
      "offset": [
        3862,
        3998
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "POP"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "fn": "AccessControl.getRoleMember",
      "jump": "o",
      "offset": [
        3862,
        3998
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5149": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2847,
        2984
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5150": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2916,
        2920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5152": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 34
    },
    "5153": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5154": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5155": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5157": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5158": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5159": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5160": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5162": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5163": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2951
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5164": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1416"
    },
    "5167": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2977
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5168": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2969,
        2976
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5169": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2939,
        2968
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2411"
    },
    "5172": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2939,
        2977
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5173": {
      "fn": "ERC20.symbol",
      "offset": [
        2825,
        2919
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5174": {
      "fn": "ERC20.symbol",
      "offset": [
        2905,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 35,
      "value": "0x7"
    },
    "5176": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5177": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "5178": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "5180": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5181": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "5182": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "5184": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "5186": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5190": {
      "op": "NOT"
    },
    "5191": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "5194": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "5196": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP9",
      "path": "40"
    },
    "5197": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "AND",
      "path": "40"
    },
    "5198": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "5199": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MUL",
      "path": "40"
    },
    "5200": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5201": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5202": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "5203": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "AND",
      "path": "40"
    },
    "5204": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "5205": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5206": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "5207": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DIV",
      "path": "40"
    },
    "5208": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "5209": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP5",
      "path": "40"
    },
    "5210": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5211": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5212": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5213": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DIV",
      "path": "40"
    },
    "5214": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5215": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MUL",
      "path": "40"
    },
    "5216": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5217": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5218": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5219": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5220": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5221": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "5222": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5223": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5224": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5225": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5226": {
      "fn": "ERC20.symbol",
      "offset": [
        2873,
        2886
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "5228": {
      "fn": "ERC20.symbol",
      "offset": [
        2873,
        2886
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "5229": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5230": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "5231": {
      "fn": "ERC20.symbol",
      "offset": [
        2905,
        2912
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5232": {
      "fn": "ERC20.symbol",
      "offset": [
        2905,
        2912
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5233": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP4",
      "path": "40"
    },
    "5234": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5235": {
      "fn": "ERC20.symbol",
      "offset": [
        2905,
        2912
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5236": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5237": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5238": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "5239": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD34"
    },
    "5242": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "5243": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5244": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "5246": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "LT",
      "path": "40"
    },
    "5247": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD09"
    },
    "5250": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "5251": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "5254": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5255": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP4",
      "path": "40"
    },
    "5256": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "5257": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DIV",
      "path": "40"
    },
    "5258": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MUL",
      "path": "40"
    },
    "5259": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "DUP4",
      "path": "40"
    },
    "5260": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5261": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5262": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "5264": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "ADD",
      "path": "40"
    },
    "5265": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5266": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD34"
    },
    "5269": {
      "fn": "ERC20.symbol",
      "offset": [
        2898,
        2912
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5270": {
      "offset": [
        1624,
        1673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5271": {
      "offset": [
        1669,
        1673
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5273": {
      "offset": [
        1624,
        1673
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5274": {
      "fn": "ERC20.symbol",
      "jump": "o",
      "offset": [
        1624,
        1673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5275": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8298,
        8564
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5276": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8391,
        8395
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "5278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8407,
        8536
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 36,
      "value": "0xD57"
    },
    "5281": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8416,
        8428
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x14A8"
    },
    "5284": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8416,
        8426
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "5287": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8416,
        8428
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5288": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8416,
        8428
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5289": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8430,
        8437
      ],
      "op": "DUP5",
      "path": "40"
    },
    "5290": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xE03"
    },
    "5293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8478,
        8493
      ],
      "op": "DUP6",
      "path": "40"
    },
    "5294": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "5296": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "5297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "5300": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "ADD",
      "path": "40"
    },
    "5301": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "5303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5304": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5305": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "5307": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5308": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5309": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "5311": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "ADD",
      "path": "40"
    },
    "5312": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B69"
    },
    "5315": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "5317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5318": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "5319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8450
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "5321": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "5323": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8451,
        8463
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x14D2"
    },
    "5326": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8451,
        8461
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "5329": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8451,
        8463
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8451,
        8463
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5337": {
      "op": "SHL"
    },
    "5338": {
      "op": "SUB"
    },
    "5339": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5340": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "AND",
      "path": "40"
    },
    "5342": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "5346": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP1",
      "path": "40"
    },
    "5347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP4",
      "path": "40"
    },
    "5348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "ADD",
      "path": "40"
    },
    "5349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "5350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "5352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "5355": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5356": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP3",
      "path": "40"
    },
    "5357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "ADD",
      "path": "40"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5362": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8464
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "5363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5364": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "DUP14",
      "path": "40"
    },
    "5365": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "AND",
      "path": "40"
    },
    "5366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "DUP2",
      "path": "40"
    },
    "5367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5368": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "5369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5370": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "5372": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "5373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8473
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "5374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8535
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "5375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8439,
        8477
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1E94"
    },
    "5378": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8439,
        8535
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5379": {
      "fn": "ERC20.transfer",
      "offset": [
        4168,
        4331
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5380": {
      "fn": "ERC20.transfer",
      "offset": [
        4245,
        4249
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "5382": {
      "fn": "ERC20.transfer",
      "offset": [
        4261,
        4303
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 37,
      "value": "0xD57"
    },
    "5385": {
      "fn": "ERC20.transfer",
      "offset": [
        4271,
        4283
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1510"
    },
    "5388": {
      "fn": "ERC20.transfer",
      "offset": [
        4271,
        4281
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C47"
    },
    "5391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4271,
        4283
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5392": {
      "fn": "ERC20.transfer",
      "offset": [
        4271,
        4283
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "5393": {
      "fn": "ERC20.transfer",
      "offset": [
        4285,
        4294
      ],
      "op": "DUP5",
      "path": "40"
    },
    "5394": {
      "fn": "ERC20.transfer",
      "offset": [
        4296,
        4302
      ],
      "op": "DUP5",
      "path": "40"
    },
    "5395": {
      "fn": "ERC20.transfer",
      "offset": [
        4261,
        4270
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1D37"
    },
    "5398": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4261,
        4303
      ],
      "op": "JUMP",
      "path": "40"
    },
    "5399": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5409": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "AND",
      "path": "45"
    },
    "5410": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6654,
        6661
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5412": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5413": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5414": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5415": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6713
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "5417": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5419": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5420": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5422": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5423": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5424": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "5425": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5430": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6699,
        6722
      ],
      "op": "AND",
      "path": "45"
    },
    "5431": {
      "branch": 119,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6755
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 38
    },
    "5432": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6806
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1542"
    },
    "5435": {
      "branch": 119,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6806
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5436": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6805,
        6806
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5438": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6806
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1416"
    },
    "5441": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6806
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5442": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6739,
        6806
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5449": {
      "op": "SHL"
    },
    "5450": {
      "op": "SUB"
    },
    "5451": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5452": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "AND",
      "path": "45"
    },
    "5453": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5455": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5456": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5457": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5458": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6769
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "5460": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5462": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5463": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5464": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5465": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5467": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5468": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5469": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6778
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5470": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5477": {
      "op": "NOT"
    },
    "5478": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6779,
        6795
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5479": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6779,
        6795
      ],
      "op": "ADD",
      "path": "45"
    },
    "5480": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "AND",
      "path": "45"
    },
    "5481": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5482": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5483": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5484": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5485": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5486": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5487": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6796
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5488": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6794,
        6795
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "5490": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6802
      ],
      "op": "ADD",
      "path": "45"
    },
    "5491": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6758,
        6802
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "5492": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6732,
        6806
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5493": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        6565,
        6813
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5494": {
      "op": "POP"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "o",
      "offset": [
        6565,
        6813
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5498": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5499": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5411,
        5434
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5501": {
      "offset": [
        3498,
        3578
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "5534": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5537,
        5543
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15A5"
    },
    "5537": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5537,
        5541
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCA8"
    },
    "5540": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        5537,
        5543
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5541": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5537,
        5543
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5542": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5543": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5544": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5545": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5547": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "ADD",
      "path": "45"
    },
    "5548": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5521,
        5545
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5549": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5563,
        5575
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15B4"
    },
    "5552": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5563,
        5573
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2426"
    },
    "5555": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        5563,
        5575
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5556": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5563,
        5575
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5557": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5559": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5560": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5561": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5563": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5564": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5565": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5566": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "5567": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5568": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "5569": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5570": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5571": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5572": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5573": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5574": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5575": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5576": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5577": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "5579": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5580": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5581": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5582": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5583": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5584": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5585": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5601,
        5605
      ],
      "op": "ADDRESS",
      "path": "45"
    },
    "5586": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "5588": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5589": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5590": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5591": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5592": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5593": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5594": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5595": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5596": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5597": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5598": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5599": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SUB",
      "path": "45"
    },
    "5600": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5601": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5602": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5603": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5604": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5605": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA0"
    },
    "5607": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5608": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "ADD",
      "path": "45"
    },
    "5609": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5610": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5460,
        5620
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5613": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5614": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "ADD",
      "path": "45"
    },
    "5616": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5617": {
      "offset": [
        3715,
        3786
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "5650": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xC0"
    },
    "5652": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5653": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5654": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5661": {
      "op": "SHL"
    },
    "5662": {
      "op": "SUB"
    },
    "5663": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP12",
      "path": "45"
    },
    "5664": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "AND",
      "path": "45"
    },
    "5665": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "5667": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5668": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5669": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5670": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "5673": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5674": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5675": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP11",
      "path": "45"
    },
    "5676": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5677": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5678": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x120"
    },
    "5681": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5682": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5683": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5684": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP11",
      "path": "45"
    },
    "5685": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5686": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5687": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5688": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5689": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5690": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5691": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "SUB",
      "path": "45"
    },
    "5692": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5693": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5694": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5695": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5696": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5697": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x140"
    },
    "5700": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5701": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "ADD",
      "path": "45"
    },
    "5702": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5703": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5685,
        5820
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5704": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5705": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5706": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5707": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5708": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "ADD",
      "path": "45"
    },
    "5709": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5710": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5715": {
      "op": "SHL"
    },
    "5716": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x160"
    },
    "5719": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5720": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "ADD",
      "path": "45"
    },
    "5721": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5722": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x162"
    },
    "5725": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5726": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "ADD",
      "path": "45"
    },
    "5727": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5728": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5729": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5730": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x182"
    },
    "5733": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5734": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5735": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "ADD",
      "path": "45"
    },
    "5736": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5737": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5738": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5739": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5740": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5741": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5742": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5743": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "SUB",
      "path": "45"
    },
    "5744": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5745": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5746": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "ADD",
      "path": "45"
    },
    "5747": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5748": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5749": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1A2"
    },
    "5752": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5753": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "ADD",
      "path": "45"
    },
    "5754": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5755": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5756": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5881,
        6000
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5757": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5758": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5759": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5760": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "DUP8",
      "path": "45"
    },
    "5761": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "ADD",
      "path": "45"
    },
    "5762": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5763": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5764": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5765": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5768": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5769": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5770": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5771": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5772": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C2"
    },
    "5775": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5776": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5777": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5778": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5779": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5780": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5781": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5782": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5783": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "5785": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP12",
      "path": "45"
    },
    "5786": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "AND",
      "path": "45"
    },
    "5787": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E2"
    },
    "5790": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP8",
      "path": "45"
    },
    "5791": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5792": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5793": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x202"
    },
    "5796": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5797": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5798": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP11",
      "path": "45"
    },
    "5799": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5800": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5801": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x222"
    },
    "5804": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP7",
      "path": "45"
    },
    "5805": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5806": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP10",
      "path": "45"
    },
    "5807": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5808": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5809": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5810": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5811": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5812": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5437,
        5630
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "5813": {
      "op": "POP"
    },
    "5814": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5815": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5662,
        5830
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "5816": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5817": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5858,
        6010
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5818": {
      "op": "SWAP1"
    },
    "5819": {
      "op": "SWAP3"
    },
    "5820": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "5822": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5823": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x242"
    },
    "5826": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5827": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP5",
      "path": "45"
    },
    "5828": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5829": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5832": {
      "op": "NOT"
    },
    "5833": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5834": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5835": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5836": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5837": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5838": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5839": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SUB",
      "path": "45"
    },
    "5840": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5841": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5842": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5843": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5844": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP6",
      "path": "45"
    },
    "5845": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "GAS",
      "path": "45"
    },
    "5846": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "STATICCALL",
      "path": "45"
    },
    "5847": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5848": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5849": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5850": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x16E7"
    },
    "5853": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5854": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "5855": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5857": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5858": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "RETURNDATACOPY",
      "path": "45"
    },
    "5859": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "RETURNDATASIZE",
      "path": "45"
    },
    "5860": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5862": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "REVERT",
      "path": "45"
    },
    "5863": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "POP"
    },
    "5866": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5868": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5871": {
      "op": "NOT"
    },
    "5872": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "ADD",
      "path": "45"
    },
    "5873": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5874": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6041,
        6067
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5883": {
      "op": "SHL"
    },
    "5884": {
      "op": "SUB"
    },
    "5885": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6085,
        6108
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 39
    },
    "5886": {
      "branch": 120,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6085,
        6108
      ],
      "op": "AND",
      "path": "45"
    },
    "5887": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1739"
    },
    "5890": {
      "branch": 120,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5891": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5893": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5902": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5903": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "5905": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "ADD",
      "path": "45"
    },
    "5906": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5907": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5908": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5910": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "ADD",
      "path": "45"
    },
    "5911": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5912": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5913": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SUB",
      "path": "45"
    },
    "5914": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5915": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5916": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x27"
    },
    "5918": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5919": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5920": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5922": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "ADD",
      "path": "45"
    },
    "5923": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5924": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2AF9"
    },
    "5927": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x27"
    },
    "5929": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5930": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "5931": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5933": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "ADD",
      "path": "45"
    },
    "5934": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5935": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "POP",
      "path": "45"
    },
    "5936": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "POP",
      "path": "45"
    },
    "5937": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5939": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5940": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5941": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5942": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SUB",
      "path": "45"
    },
    "5943": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5944": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "REVERT",
      "path": "45"
    },
    "5945": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6077,
        6152
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5952": {
      "op": "SHL"
    },
    "5953": {
      "op": "SUB"
    },
    "5954": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 40
    },
    "5955": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "AND",
      "path": "45"
    },
    "5956": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5958": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5959": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5960": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5961": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6188
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xC"
    },
    "5963": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5965": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5966": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5968": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5969": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6199
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "5970": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5971": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "5972": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "5974": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5975": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "ADD",
      "path": "45"
    },
    "5976": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5977": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5978": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6179,
        6201
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "5979": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6170,
        6201
      ],
      "op": "DUP10",
      "path": "45"
    },
    "5980": {
      "branch": 121,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6170,
        6201
      ],
      "op": "EQ",
      "path": "45"
    },
    "5981": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1797"
    },
    "5984": {
      "branch": 121,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5985": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5987": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5994": {
      "op": "SHL"
    },
    "5995": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5996": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5997": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "5999": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "ADD",
      "path": "45"
    },
    "6000": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6001": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6002": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6004": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "ADD",
      "path": "45"
    },
    "6005": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6006": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6007": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SUB",
      "path": "45"
    },
    "6008": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6009": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6010": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x23"
    },
    "6012": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6013": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6014": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6016": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "ADD",
      "path": "45"
    },
    "6017": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6018": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2AD6"
    },
    "6021": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x23"
    },
    "6023": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6024": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "6025": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6027": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "ADD",
      "path": "45"
    },
    "6028": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6029": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "POP",
      "path": "45"
    },
    "6030": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "POP",
      "path": "45"
    },
    "6031": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6033": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "6034": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6035": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6036": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SUB",
      "path": "45"
    },
    "6037": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6038": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "REVERT",
      "path": "45"
    },
    "6039": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6162,
        6241
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6040": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6266,
        6272
      ],
      "op": "DUP8",
      "path": "45",
      "statement": 41
    },
    "6041": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6259,
        6262
      ],
      "op": "TIMESTAMP",
      "path": "45"
    },
    "6042": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6259,
        6272
      ],
      "op": "GT",
      "path": "45"
    },
    "6043": {
      "branch": 122,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6259,
        6272
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "6044": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x17D6"
    },
    "6047": {
      "branch": 122,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "6048": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6050": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "6051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6057": {
      "op": "SHL"
    },
    "6058": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6059": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6060": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "6062": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "ADD",
      "path": "45"
    },
    "6063": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6064": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6065": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6067": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "ADD",
      "path": "45"
    },
    "6068": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6069": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6070": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SUB",
      "path": "45"
    },
    "6071": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP3",
      "path": "45"
    },
    "6072": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6073": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x27"
    },
    "6075": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6076": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "6077": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "6079": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "ADD",
      "path": "45"
    },
    "6080": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6081": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2988"
    },
    "6084": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x27"
    },
    "6086": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6087": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "6088": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6090": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "ADD",
      "path": "45"
    },
    "6091": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6092": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "POP",
      "path": "45"
    },
    "6093": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "POP",
      "path": "45"
    },
    "6094": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "6096": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "6097": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "DUP1",
      "path": "45"
    },
    "6098": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "6099": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SUB",
      "path": "45"
    },
    "6100": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "6101": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "REVERT",
      "path": "45"
    },
    "6102": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6251,
        6316
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6103": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6333,
        6364
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 42,
      "value": "0x17E0"
    },
    "6106": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6343,
        6352
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6107": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6354,
        6363
      ],
      "op": "DUP12",
      "path": "45"
    },
    "6108": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6333,
        6342
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x228B"
    },
    "6111": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        6333,
        6364
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6112": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6333,
        6364
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6113": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6326,
        6364
      ],
      "op": "POP",
      "path": "45"
    },
    "6114": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6326,
        6364
      ],
      "op": "POP",
      "path": "45"
    },
    "6115": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6326,
        6364
      ],
      "op": "POP",
      "path": "45"
    },
    "6116": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        6326,
        6364
      ],
      "op": "POP",
      "path": "45"
    },
    "6117": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6118": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6119": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6120": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6121": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6122": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        5228,
        6371
      ],
      "op": "POP",
      "path": "45"
    },
    "6123": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        5228,
        6371
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6124": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3152,
        3277
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6125": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3215,
        3222
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6127": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 43
    },
    "6128": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6129": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6130": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6132": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6133": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6134": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6135": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6137": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6138": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3253
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6139": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3270
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5B"
    },
    "6142": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3270
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6143": {
      "fn": "AccessControl.getRoleMemberCount",
      "offset": [
        3241,
        3268
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x242A"
    },
    "6146": {
      "fn": "AccessControl.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3241,
        3270
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6147": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6154": {
      "op": "SHL"
    },
    "6155": {
      "op": "SUB"
    },
    "6156": {
      "fn": "ERC20.permit",
      "offset": [
        5803,
        5823
      ],
      "op": "DUP8",
      "path": "40",
      "statement": 44
    },
    "6157": {
      "branch": 138,
      "fn": "ERC20.permit",
      "offset": [
        5803,
        5823
      ],
      "op": "AND",
      "path": "40"
    },
    "6158": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x185E"
    },
    "6161": {
      "branch": 138,
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6162": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6164": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6165": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6172": {
      "op": "SHL"
    },
    "6173": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6174": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6175": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6177": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6179": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6180": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "ADD",
      "path": "40"
    },
    "6181": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6182": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x18"
    },
    "6184": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "6186": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6187": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "ADD",
      "path": "40"
    },
    "6188": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6189": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000"
    },
    "6222": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "6224": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6225": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "ADD",
      "path": "40"
    },
    "6226": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6227": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6228": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6229": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6230": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6231": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6232": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "SUB",
      "path": "40"
    },
    "6233": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "6235": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "ADD",
      "path": "40"
    },
    "6236": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6237": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "REVERT",
      "path": "40"
    },
    "6238": {
      "fn": "ERC20.permit",
      "offset": [
        5795,
        5852
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6239": {
      "fn": "ERC20.permit",
      "offset": [
        5888,
        5896
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 45
    },
    "6240": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5885
      ],
      "op": "TIMESTAMP",
      "path": "40"
    },
    "6241": {
      "branch": 139,
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5896
      ],
      "op": "LT",
      "path": "40"
    },
    "6242": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x18A3"
    },
    "6245": {
      "branch": 139,
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6246": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6248": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6249": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6256": {
      "op": "SHL"
    },
    "6257": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6258": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6259": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6261": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6263": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6264": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "ADD",
      "path": "40"
    },
    "6265": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6266": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE"
    },
    "6268": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "6270": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6271": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "ADD",
      "path": "40"
    },
    "6272": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6273": {
      "op": "PUSH14",
      "value": "0x115490CC8C0E88115E1C1A5C9959"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "6293": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6294": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "ADD",
      "path": "40"
    },
    "6295": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6296": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6297": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6298": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6299": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6300": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6301": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "SUB",
      "path": "40"
    },
    "6302": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "6304": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "ADD",
      "path": "40"
    },
    "6305": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6306": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "REVERT",
      "path": "40"
    },
    "6307": {
      "fn": "ERC20.permit",
      "offset": [
        5862,
        5915
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6308": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6310": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6311": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6312": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6313": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6314": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "ADD",
      "path": "40"
    },
    "6315": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6316": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6317": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "6319": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6320": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6321": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6326": {
      "op": "SHL"
    },
    "6327": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6329": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6330": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6331": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "ADD",
      "path": "40"
    },
    "6332": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6333": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6334": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6335": {
      "fn": "ERC20.permit",
      "offset": [
        6081,
        6097
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "6337": {
      "fn": "ERC20.permit",
      "offset": [
        6081,
        6097
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6338": {
      "fn": "ERC20.permit",
      "offset": [
        6081,
        6097
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6345": {
      "op": "SHL"
    },
    "6346": {
      "op": "SUB"
    },
    "6347": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6348": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP15",
      "path": "40"
    },
    "6349": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "AND",
      "path": "40"
    },
    "6350": {
      "fn": "ERC20.permit",
      "offset": [
        5925,
        5939
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6352": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6353": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6354": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6355": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6193
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "6357": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6358": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6359": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP9",
      "path": "40"
    },
    "6360": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6361": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6201
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "6362": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6363": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "6364": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "6365": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6366": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "ADD",
      "path": "40"
    },
    "6367": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6368": {
      "fn": "ERC20.permit",
      "offset": [
        6187,
        6203
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "6369": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP9",
      "path": "40"
    },
    "6370": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6371": {
      "offset": [
        5132,
        5198
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "6404": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6405": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP9",
      "path": "40"
    },
    "6406": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6407": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6408": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6409": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP11",
      "path": "40"
    },
    "6410": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6411": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6412": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6413": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6414": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6415": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6416": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP15",
      "path": "40"
    },
    "6417": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "AND",
      "path": "40"
    },
    "6418": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6420": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6421": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6422": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6423": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "6425": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6426": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6427": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP14",
      "path": "40"
    },
    "6428": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6429": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6430": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "6432": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6433": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6434": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6435": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6436": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6437": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6438": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "6440": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6441": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6442": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6443": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP13",
      "path": "40"
    },
    "6444": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6445": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6446": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP8",
      "path": "40"
    },
    "6447": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6448": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6449": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6450": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SUB",
      "path": "40"
    },
    "6451": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6452": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6453": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6454": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6455": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6456": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "6458": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6459": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "ADD",
      "path": "40"
    },
    "6460": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6461": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "SWAP8",
      "path": "40"
    },
    "6462": {
      "fn": "ERC20.permit",
      "offset": [
        6129,
        6214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6463": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6464": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6465": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP7",
      "path": "40"
    },
    "6466": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6467": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6468": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "ADD",
      "path": "40"
    },
    "6469": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "6470": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6471": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "6472": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "6473": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6474": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6475": {
      "fn": "ERC20.permit",
      "offset": [
        5925,
        5939
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6476": {
      "fn": "ERC20.permit",
      "offset": [
        5925,
        5939
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "6477": {
      "fn": "ERC20.permit",
      "offset": [
        6081,
        6097
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6478": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6479": {
      "fn": "ERC20.permit",
      "offset": [
        6119,
        6215
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6480": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "6483": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6484": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6485": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6486": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6487": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6488": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6489": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6490": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6491": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6492": {
      "fn": "ERC20.permit",
      "offset": [
        6019,
        6059
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6493": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6494": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6496": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6497": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "LT",
      "path": "40"
    },
    "6498": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x197C"
    },
    "6501": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6502": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6503": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6504": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6505": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6508": {
      "op": "NOT"
    },
    "6509": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6510": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6511": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6512": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6513": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6515": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6516": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6517": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6518": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6519": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6520": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x195D"
    },
    "6523": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6524": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6525": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6526": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6527": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6528": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6530": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6531": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6532": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SUB",
      "path": "40"
    },
    "6533": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "6536": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "EXP",
      "path": "40"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6539": {
      "op": "NOT"
    },
    "6540": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6541": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6542": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "NOT",
      "path": "40"
    },
    "6543": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6544": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6545": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "AND",
      "path": "40"
    },
    "6546": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6547": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "AND",
      "path": "40"
    },
    "6548": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "OR",
      "path": "40"
    },
    "6549": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6550": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6551": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6552": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6553": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "6554": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6555": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6556": {
      "op": "POP"
    },
    "6557": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6558": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6559": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6560": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6561": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6562": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6563": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6564": {
      "op": "POP"
    },
    "6565": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6567": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6568": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6569": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6570": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6571": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SUB",
      "path": "40"
    },
    "6572": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6573": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6574": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6575": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6576": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6577": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6578": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "ADD",
      "path": "40"
    },
    "6579": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6580": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6581": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6582": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6583": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6584": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6585": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6586": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "ADD",
      "path": "40"
    },
    "6587": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6588": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6589": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6590": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6593": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6594": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6595": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6596": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6597": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "6599": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6600": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6601": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6602": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP5",
      "path": "40"
    },
    "6603": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6604": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6605": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6606": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6607": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "6609": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP11",
      "path": "40"
    },
    "6610": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "AND",
      "path": "40"
    },
    "6611": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "6613": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP7",
      "path": "40"
    },
    "6614": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6615": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6616": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "6618": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6619": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6620": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP10",
      "path": "40"
    },
    "6621": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6622": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6623": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "6625": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6626": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6627": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP9",
      "path": "40"
    },
    "6628": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6629": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6630": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6631": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6632": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6633": {
      "fn": "ERC20.permit",
      "offset": [
        5954,
        6247
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "SWAP4"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "6639": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6640": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "6642": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6643": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6644": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6645": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6646": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6649": {
      "op": "NOT"
    },
    "6650": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6651": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6652": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "6653": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6654": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6655": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SUB",
      "path": "40"
    },
    "6656": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6657": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6658": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ADD",
      "path": "40"
    },
    "6659": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6660": {
      "fn": "ERC20.permit",
      "offset": [
        5981,
        6233
      ],
      "op": "DUP6",
      "path": "40"
    },
    "6661": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "GAS",
      "path": "40"
    },
    "6662": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "STATICCALL",
      "path": "40"
    },
    "6663": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "6664": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6665": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "6666": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1A17"
    },
    "6669": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6670": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6671": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6673": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6674": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "6675": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "6676": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6678": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "REVERT",
      "path": "40"
    },
    "6679": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6680": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "POP",
      "path": "40"
    },
    "6681": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "POP",
      "path": "40"
    },
    "6682": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "POP",
      "path": "40"
    },
    "6683": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6685": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6687": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6688": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "SUB",
      "path": "40"
    },
    "6689": {
      "fn": "ERC20.permit",
      "offset": [
        6284,
        6310
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6690": {
      "fn": "ERC20.permit",
      "offset": [
        6257,
        6310
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6691": {
      "fn": "ERC20.permit",
      "offset": [
        6257,
        6310
      ],
      "op": "POP",
      "path": "40"
    },
    "6692": {
      "fn": "ERC20.permit",
      "offset": [
        6348,
        6354
      ],
      "op": "DUP9",
      "path": "40",
      "statement": 46
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6699": {
      "op": "SHL"
    },
    "6700": {
      "op": "SUB"
    },
    "6701": {
      "fn": "ERC20.permit",
      "offset": [
        6328,
        6354
      ],
      "op": "AND",
      "path": "40"
    },
    "6702": {
      "fn": "ERC20.permit",
      "offset": [
        6328,
        6344
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6709": {
      "op": "SHL"
    },
    "6710": {
      "op": "SUB"
    },
    "6711": {
      "fn": "ERC20.permit",
      "offset": [
        6328,
        6354
      ],
      "op": "AND",
      "path": "40"
    },
    "6712": {
      "branch": 140,
      "fn": "ERC20.permit",
      "offset": [
        6328,
        6354
      ],
      "op": "EQ",
      "path": "40"
    },
    "6713": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1A89"
    },
    "6716": {
      "branch": 140,
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "6717": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6719": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6720": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6727": {
      "op": "SHL"
    },
    "6728": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6729": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6730": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6732": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6734": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6735": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "ADD",
      "path": "40"
    },
    "6736": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6737": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x18"
    },
    "6739": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "6741": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6742": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "ADD",
      "path": "40"
    },
    "6743": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6744": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x45524332303A20496E76616C6964205369676E61747572650000000000000000"
    },
    "6777": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "6779": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6780": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "ADD",
      "path": "40"
    },
    "6781": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6782": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6783": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "6784": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6785": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6786": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6787": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "SUB",
      "path": "40"
    },
    "6788": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "6790": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "ADD",
      "path": "40"
    },
    "6791": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6792": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "REVERT",
      "path": "40"
    },
    "6793": {
      "fn": "ERC20.permit",
      "offset": [
        6320,
        6383
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6794": {
      "fn": "ERC20.permit",
      "offset": [
        6393,
        6425
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 47,
      "value": "0x1A94"
    },
    "6797": {
      "fn": "ERC20.permit",
      "offset": [
        6402,
        6408
      ],
      "op": "DUP10",
      "path": "40"
    },
    "6798": {
      "fn": "ERC20.permit",
      "offset": [
        6410,
        6417
      ],
      "op": "DUP10",
      "path": "40"
    },
    "6799": {
      "fn": "ERC20.permit",
      "offset": [
        6419,
        6424
      ],
      "op": "DUP10",
      "path": "40"
    },
    "6800": {
      "fn": "ERC20.permit",
      "offset": [
        6393,
        6401
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C4B"
    },
    "6803": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        6393,
        6425
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6804": {
      "fn": "ERC20.permit",
      "offset": [
        6393,
        6425
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6805": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6806": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6807": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6808": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6809": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6810": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6811": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6812": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6813": {
      "fn": "ERC20.permit",
      "offset": [
        5592,
        6433
      ],
      "op": "POP",
      "path": "40"
    },
    "6814": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        5592,
        6433
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6815": {
      "offset": [
        834,
        896
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6816": {
      "offset": [
        872,
        896
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
    },
    "6849": {
      "offset": [
        834,
        896
      ],
      "op": "DUP2",
      "path": "45"
    },
    "6850": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        834,
        896
      ],
      "op": "JUMP",
      "path": "45"
    },
    "6851": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        4998,
        5224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6852": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5096
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 48,
      "value": "0x0"
    },
    "6854": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6855": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6856": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6857": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6859": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6860": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6861": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6862": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6864": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6865": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5102
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6866": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "6868": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5112
      ],
      "op": "ADD",
      "path": "22"
    },
    "6869": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5090,
        5112
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6870": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5082,
        5127
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AE1"
    },
    "6873": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5082,
        5127
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6874": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5114,
        5126
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE45"
    },
    "6877": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5114,
        5124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C47"
    },
    "6880": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5114,
        5126
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6881": {
      "branch": 135,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5082,
        5127
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6882": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEF9"
    },
    "6885": {
      "branch": 135,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6886": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6888": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6895": {
      "op": "SHL"
    },
    "6896": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6897": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6898": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6900": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "ADD",
      "path": "22"
    },
    "6901": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6902": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6903": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6905": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "ADD",
      "path": "22"
    },
    "6906": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6907": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6908": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SUB",
      "path": "22"
    },
    "6909": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6910": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6911": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x30"
    },
    "6913": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6914": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6915": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6917": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "ADD",
      "path": "22"
    },
    "6918": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6919": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A21"
    },
    "6922": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x30"
    },
    "6924": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6925": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "CODECOPY",
      "path": "22"
    },
    "6926": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6928": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "ADD",
      "path": "22"
    },
    "6929": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6930": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "POP",
      "path": "22"
    },
    "6931": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "POP",
      "path": "22"
    },
    "6932": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6934": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6935": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6936": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6937": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SUB",
      "path": "22"
    },
    "6938": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6939": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5074,
        5180
      ],
      "op": "REVERT",
      "path": "22"
    },
    "6940": {
      "fn": "ERC20.allowance",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6947": {
      "op": "SHL"
    },
    "6948": {
      "op": "SUB"
    },
    "6949": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "SWAP2",
      "path": "40",
      "statement": 49
    },
    "6950": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6951": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "AND",
      "path": "40"
    },
    "6952": {
      "fn": "ERC20.allowance",
      "offset": [
        4478,
        4485
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "6954": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6955": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6956": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6957": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4515
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "6959": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "6961": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6962": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "DUP2",
      "path": "40"
    },
    "6963": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6964": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "6966": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "DUP1",
      "path": "40"
    },
    "6967": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "DUP4",
      "path": "40"
    },
    "6968": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4522
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "6969": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "6970": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6971": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "6972": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "AND",
      "path": "40"
    },
    "6973": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "DUP3",
      "path": "40"
    },
    "6974": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6975": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6976": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6977": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "6978": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "6979": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "6980": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "6981": {
      "fn": "ERC20.allowance",
      "offset": [
        4504,
        4531
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "6982": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4389,
        4538
      ],
      "op": "JUMP",
      "path": "40"
    },
    "6983": {
      "offset": [
        3669,
        3786
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "6984": {
      "offset": [
        3715,
        3786
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "7017": {
      "offset": [
        3669,
        3786
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7018": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3669,
        3786
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7019": {
      "offset": [
        3201,
        3271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7020": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "7022": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7024": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7025": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7026": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7027": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7029": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7030": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7031": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7032": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7034": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7035": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7036": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7037": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7038": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7039": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7040": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7041": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7042": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7043": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7044": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7045": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7046": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7047": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "7049": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7050": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7051": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "ADD",
      "path": "45"
    },
    "7052": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7053": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "7058": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7059": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7060": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "AND",
      "path": "45"
    },
    "7061": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7062": {
      "fn": "ERC20.allowance",
      "offset": [
        3201,
        3271
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7063": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3201,
        3271
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7064": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7065": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2013,
        2031
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "7067": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2065,
        2070
      ],
      "op": "DUP7",
      "path": "45",
      "statement": 50
    },
    "7068": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2065,
        2070
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7069": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2072,
        2079
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7070": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2072,
        2079
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7071": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2081,
        2087
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7072": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2089,
        2103
      ],
      "op": "DUP7",
      "path": "45"
    },
    "7073": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7075": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7076": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7078": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7079": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7080": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7081": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7083": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7084": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7085": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7087": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7088": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP6",
      "path": "45"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7095": {
      "op": "SHL"
    },
    "7096": {
      "op": "SUB"
    },
    "7097": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "AND",
      "path": "45"
    },
    "7098": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7099": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7100": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7102": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7103": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7104": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7105": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7106": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7108": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7109": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7110": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7111": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SUB",
      "path": "45"
    },
    "7112": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7113": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7114": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP10",
      "path": "45"
    },
    "7115": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP10",
      "path": "45"
    },
    "7116": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7117": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7118": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7119": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7120": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7122": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7123": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7124": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "POP",
      "path": "45"
    },
    "7125": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7126": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7127": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7128": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "7129": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7131": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7132": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7133": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7134": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7135": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7137": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7140": {
      "op": "NOT"
    },
    "7141": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "AND",
      "path": "45"
    },
    "7142": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7143": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "7144": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7145": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7146": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7147": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SUB",
      "path": "45"
    },
    "7148": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7149": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7150": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP8",
      "path": "45"
    },
    "7151": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7152": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7153": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7155": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7156": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7157": {
      "op": "POP"
    },
    "7158": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP8",
      "path": "45"
    },
    "7159": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP8",
      "path": "45"
    },
    "7160": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7161": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7162": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP5",
      "path": "45"
    },
    "7163": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "7164": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7166": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP4",
      "path": "45"
    },
    "7167": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7168": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7169": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7170": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7172": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7173": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "7174": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "7176": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7177": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7178": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7181": {
      "op": "NOT"
    },
    "7182": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7183": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7184": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "AND",
      "path": "45"
    },
    "7185": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7186": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "7187": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7188": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7189": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7190": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SUB",
      "path": "45"
    },
    "7191": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7192": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "7193": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "ADD",
      "path": "45"
    },
    "7194": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "DUP3",
      "path": "45"
    },
    "7195": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7196": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7197": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7198": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "7199": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7200": {
      "op": "POP"
    },
    "7201": {
      "fn": "SushiToken.getInitData",
      "offset": [
        2054,
        2104
      ],
      "op": "SWAP10",
      "path": "45"
    },
    "7202": {
      "op": "POP"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "op": "POP"
    },
    "7205": {
      "op": "POP"
    },
    "7206": {
      "op": "POP"
    },
    "7207": {
      "op": "POP"
    },
    "7208": {
      "op": "POP"
    },
    "7209": {
      "op": "POP"
    },
    "7210": {
      "op": "POP"
    },
    "7211": {
      "op": "POP"
    },
    "7212": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "7213": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "7214": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7215": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7216": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7217": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7218": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7219": {
      "fn": "SushiToken.getInitData",
      "offset": [
        1819,
        2111
      ],
      "op": "POP",
      "path": "45"
    },
    "7220": {
      "fn": "SushiToken.getInitData",
      "jump": "o",
      "offset": [
        1819,
        2111
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7221": {
      "offset": [
        3864,
        3906
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "7222": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xC"
    },
    "7224": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "7226": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7227": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "7229": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7230": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7231": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "7232": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "7234": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "7235": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "7236": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "7237": {
      "fn": "SushiToken.getInitData",
      "offset": [
        3864,
        3906
      ],
      "op": "DUP2",
      "path": "45"
    },
    "7238": {
      "fn": "SushiToken.getInitData",
      "jump": "o",
      "offset": [
        3864,
        3906
      ],
      "op": "JUMP",
      "path": "45"
    },
    "7239": {
      "fn": "Context._msgSender",
      "offset": [
        559,
        663
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "7240": {
      "fn": "Context._msgSender",
      "offset": [
        646,
        656
      ],
      "op": "CALLER",
      "path": "31",
      "statement": 51
    },
    "7241": {
      "fn": "Context._msgSender",
      "offset": [
        559,
        663
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "7242": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        559,
        663
      ],
      "op": "JUMP",
      "path": "31"
    },
    "7243": {
      "fn": "ERC20._approve",
      "offset": [
        11360,
        11700
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7250": {
      "op": "SHL"
    },
    "7251": {
      "op": "SUB"
    },
    "7252": {
      "fn": "ERC20._approve",
      "offset": [
        11461,
        11480
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 52
    },
    "7253": {
      "branch": 141,
      "fn": "ERC20._approve",
      "offset": [
        11461,
        11480
      ],
      "op": "AND",
      "path": "40"
    },
    "7254": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C90"
    },
    "7257": {
      "branch": 141,
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7258": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7260": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7267": {
      "op": "SHL"
    },
    "7268": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7269": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7270": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7272": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "ADD",
      "path": "40"
    },
    "7273": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7274": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7275": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7277": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "ADD",
      "path": "40"
    },
    "7278": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7279": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7280": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SUB",
      "path": "40"
    },
    "7281": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7282": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7283": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "7285": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7286": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7287": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7289": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "ADD",
      "path": "40"
    },
    "7290": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7291": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B45"
    },
    "7294": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "7296": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7297": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "7298": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7300": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "ADD",
      "path": "40"
    },
    "7301": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7302": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "POP",
      "path": "40"
    },
    "7303": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "POP",
      "path": "40"
    },
    "7304": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7306": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7307": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7308": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7309": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SUB",
      "path": "40"
    },
    "7310": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7311": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "REVERT",
      "path": "40"
    },
    "7312": {
      "fn": "ERC20._approve",
      "offset": [
        11453,
        11521
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7319": {
      "op": "SHL"
    },
    "7320": {
      "op": "SUB"
    },
    "7321": {
      "fn": "ERC20._approve",
      "offset": [
        11539,
        11560
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 53
    },
    "7322": {
      "branch": 142,
      "fn": "ERC20._approve",
      "offset": [
        11539,
        11560
      ],
      "op": "AND",
      "path": "40"
    },
    "7323": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1CD5"
    },
    "7326": {
      "branch": 142,
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7327": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7329": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7336": {
      "op": "SHL"
    },
    "7337": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7338": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7339": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7341": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "ADD",
      "path": "40"
    },
    "7342": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7343": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7344": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7346": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "ADD",
      "path": "40"
    },
    "7347": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7348": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7349": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SUB",
      "path": "40"
    },
    "7350": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7351": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7352": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x22"
    },
    "7354": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7355": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7356": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7358": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "ADD",
      "path": "40"
    },
    "7359": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7360": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x29AF"
    },
    "7363": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x22"
    },
    "7365": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7366": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "7367": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7369": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "ADD",
      "path": "40"
    },
    "7370": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7371": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "POP",
      "path": "40"
    },
    "7372": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "POP",
      "path": "40"
    },
    "7373": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7375": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7376": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7377": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7378": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SUB",
      "path": "40"
    },
    "7379": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7380": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "REVERT",
      "path": "40"
    },
    "7381": {
      "fn": "ERC20._approve",
      "offset": [
        11531,
        11599
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7388": {
      "op": "SHL"
    },
    "7389": {
      "op": "SUB"
    },
    "7390": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 54
    },
    "7391": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP5",
      "path": "40"
    },
    "7392": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "AND",
      "path": "40"
    },
    "7393": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "7395": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7396": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7397": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7398": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11621
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7400": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7402": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7403": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7404": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7405": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7407": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7408": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "DUP4",
      "path": "40"
    },
    "7409": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11628
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7410": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "7411": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "DUP8",
      "path": "40"
    },
    "7412": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "AND",
      "path": "40"
    },
    "7413": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7414": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "DUP5",
      "path": "40"
    },
    "7415": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7416": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "7417": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7418": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7419": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7420": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7421": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7422": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11637
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7423": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11646
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7424": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11646
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7425": {
      "fn": "ERC20._approve",
      "offset": [
        11610,
        11646
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "7426": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 55
    },
    "7427": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7428": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7429": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7430": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7431": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7432": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7433": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7466": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "7467": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7468": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7469": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SUB",
      "path": "40"
    },
    "7470": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7471": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7472": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "ADD",
      "path": "40"
    },
    "7473": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7474": {
      "fn": "ERC20._approve",
      "offset": [
        11661,
        11693
      ],
      "op": "LOG3",
      "path": "40"
    },
    "7475": {
      "fn": "ERC20._approve",
      "offset": [
        11360,
        11700
      ],
      "op": "POP",
      "path": "40"
    },
    "7476": {
      "fn": "ERC20._approve",
      "offset": [
        11360,
        11700
      ],
      "op": "POP",
      "path": "40"
    },
    "7477": {
      "fn": "ERC20._approve",
      "offset": [
        11360,
        11700
      ],
      "op": "POP",
      "path": "40"
    },
    "7478": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        11360,
        11700
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7479": {
      "fn": "ERC20._transfer",
      "offset": [
        9038,
        9568
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "op": "SUB"
    },
    "7488": {
      "fn": "ERC20._transfer",
      "offset": [
        9143,
        9163
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 56
    },
    "7489": {
      "branch": 143,
      "fn": "ERC20._transfer",
      "offset": [
        9143,
        9163
      ],
      "op": "AND",
      "path": "40"
    },
    "7490": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1D7C"
    },
    "7493": {
      "branch": 143,
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7494": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7496": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7497": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7503": {
      "op": "SHL"
    },
    "7504": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7505": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7506": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7508": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "ADD",
      "path": "40"
    },
    "7509": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7510": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7511": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7513": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "ADD",
      "path": "40"
    },
    "7514": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7515": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7516": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SUB",
      "path": "40"
    },
    "7517": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7518": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7519": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "7521": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7522": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7523": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7525": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "ADD",
      "path": "40"
    },
    "7526": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7527": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B20"
    },
    "7530": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "7532": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7533": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "7534": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7536": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "ADD",
      "path": "40"
    },
    "7537": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7538": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "POP",
      "path": "40"
    },
    "7539": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "POP",
      "path": "40"
    },
    "7540": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7542": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7543": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7544": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7545": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SUB",
      "path": "40"
    },
    "7546": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7547": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "REVERT",
      "path": "40"
    },
    "7548": {
      "fn": "ERC20._transfer",
      "offset": [
        9135,
        9205
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7555": {
      "op": "SHL"
    },
    "7556": {
      "op": "SUB"
    },
    "7557": {
      "fn": "ERC20._transfer",
      "offset": [
        9223,
        9246
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 57
    },
    "7558": {
      "branch": 144,
      "fn": "ERC20._transfer",
      "offset": [
        9223,
        9246
      ],
      "op": "AND",
      "path": "40"
    },
    "7559": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1DC1"
    },
    "7562": {
      "branch": 144,
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7563": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7565": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7572": {
      "op": "SHL"
    },
    "7573": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7574": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7575": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7577": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "7578": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7579": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7580": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7582": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "7583": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7584": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7585": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SUB",
      "path": "40"
    },
    "7586": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7587": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7588": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x23"
    },
    "7590": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7591": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7592": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7594": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "7595": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7596": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x290D"
    },
    "7599": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x23"
    },
    "7601": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7602": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "7603": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7605": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "7606": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7607": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "POP",
      "path": "40"
    },
    "7608": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "POP",
      "path": "40"
    },
    "7609": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7611": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7612": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7613": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7614": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SUB",
      "path": "40"
    },
    "7615": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7616": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "REVERT",
      "path": "40"
    },
    "7617": {
      "fn": "ERC20._transfer",
      "offset": [
        9215,
        9286
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7618": {
      "fn": "ERC20._transfer",
      "offset": [
        9297,
        9344
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 58,
      "value": "0x1DCC"
    },
    "7621": {
      "fn": "ERC20._transfer",
      "offset": [
        9318,
        9324
      ],
      "op": "DUP4",
      "path": "40"
    },
    "7622": {
      "fn": "ERC20._transfer",
      "offset": [
        9326,
        9335
      ],
      "op": "DUP4",
      "path": "40"
    },
    "7623": {
      "fn": "ERC20._transfer",
      "offset": [
        9337,
        9343
      ],
      "op": "DUP4",
      "path": "40"
    },
    "7624": {
      "fn": "ERC20._transfer",
      "offset": [
        9297,
        9317
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2435"
    },
    "7627": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9297,
        9344
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7628": {
      "fn": "ERC20._transfer",
      "offset": [
        9297,
        9344
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7629": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 59,
      "value": "0x1E09"
    },
    "7632": {
      "fn": "ERC20._transfer",
      "offset": [
        9397,
        9403
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7633": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7635": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7636": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7637": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "7639": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "ADD",
      "path": "40"
    },
    "7640": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7642": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7643": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7644": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x26"
    },
    "7646": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7647": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7648": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7650": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "ADD",
      "path": "40"
    },
    "7651": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x29D1"
    },
    "7654": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x26"
    },
    "7656": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7657": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7664": {
      "op": "SHL"
    },
    "7665": {
      "op": "SUB"
    },
    "7666": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "DUP7",
      "path": "40"
    },
    "7667": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "AND",
      "path": "40"
    },
    "7668": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "7670": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7671": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7672": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7673": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9384
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "7675": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7677": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7678": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7680": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7681": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7682": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "7683": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9392
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7684": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7685": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9396
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1E94"
    },
    "7688": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9375,
        9446
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7689": {
      "fn": "ERC20._transfer",
      "offset": [
        9375,
        9446
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7696": {
      "op": "SHL"
    },
    "7697": {
      "op": "SUB"
    },
    "7698": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7699": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7700": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "AND",
      "path": "40"
    },
    "7701": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "7703": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7704": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7705": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7706": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9364
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "7708": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7710": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7711": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7713": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7714": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7715": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9372
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7716": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9446
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "7717": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9446
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7718": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9446
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "7719": {
      "fn": "ERC20._transfer",
      "offset": [
        9355,
        9446
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "7720": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "SWAP1",
      "path": "40",
      "statement": 60
    },
    "7721": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "DUP5",
      "path": "40"
    },
    "7722": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "AND",
      "path": "40"
    },
    "7723": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7724": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7725": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7726": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9499
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "7727": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9511
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1E38"
    },
    "7730": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9511
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7731": {
      "fn": "ERC20._transfer",
      "offset": [
        9504,
        9510
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7732": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9503
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1FFD"
    },
    "7735": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9479,
        9511
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7736": {
      "fn": "ERC20._transfer",
      "offset": [
        9479,
        9511
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7743": {
      "op": "SHL"
    },
    "7744": {
      "op": "SUB"
    },
    "7745": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7746": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP5",
      "path": "40"
    },
    "7747": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "AND",
      "path": "40"
    },
    "7748": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "7750": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7751": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7752": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7753": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9465
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "7755": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "7757": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7758": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7759": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7760": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7762": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7763": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7764": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7765": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "7766": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9511
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "7767": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9511
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7768": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9511
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "7769": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9511
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "7770": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 61
    },
    "7771": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7772": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7773": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7774": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7775": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7776": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7777": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7778": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9476
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "7779": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "7780": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "DUP8",
      "path": "40"
    },
    "7781": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "AND",
      "path": "40"
    },
    "7782": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "7783": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7816": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "7817": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "7818": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7819": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7820": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SUB",
      "path": "40"
    },
    "7821": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "ADD",
      "path": "40"
    },
    "7822": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "7823": {
      "fn": "ERC20._transfer",
      "offset": [
        9526,
        9561
      ],
      "op": "LOG3",
      "path": "40"
    },
    "7824": {
      "fn": "ERC20._transfer",
      "offset": [
        9038,
        9568
      ],
      "op": "POP",
      "path": "40"
    },
    "7825": {
      "fn": "ERC20._transfer",
      "offset": [
        9038,
        9568
      ],
      "op": "POP",
      "path": "40"
    },
    "7826": {
      "fn": "ERC20._transfer",
      "offset": [
        9038,
        9568
      ],
      "op": "POP",
      "path": "40"
    },
    "7827": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        9038,
        9568
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7828": {
      "fn": "SafeMath.sub",
      "offset": [
        5393,
        5556
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7829": {
      "fn": "SafeMath.sub",
      "offset": [
        5479,
        5486
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7831": {
      "fn": "SafeMath.sub",
      "offset": [
        5514,
        5526
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 62
    },
    "7832": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7833": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "DUP5",
      "path": "25"
    },
    "7834": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "GT",
      "path": "25"
    },
    "7835": {
      "branch": 150,
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7836": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F23"
    },
    "7839": {
      "branch": 150,
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7840": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7842": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7849": {
      "op": "SHL"
    },
    "7850": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7851": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7852": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7854": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7855": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7856": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7857": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7859": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7860": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7861": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7862": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "7863": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7864": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7865": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7866": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7867": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7868": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7869": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7870": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7871": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7873": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7874": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7875": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7876": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7877": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7878": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7879": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7881": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7882": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7883": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7884": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7885": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7886": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "7888": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7889": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7890": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7891": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "LT",
      "path": "25"
    },
    "7892": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7893": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1EE8"
    },
    "7896": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7897": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7898": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7899": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7900": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7901": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7902": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7903": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7904": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7905": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7907": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7908": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1ED0"
    },
    "7911": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7912": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7913": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7914": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7915": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7916": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7917": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7918": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7919": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7920": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7921": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7922": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7923": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "7925": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "AND",
      "path": "25"
    },
    "7926": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7927": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "7928": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1F15"
    },
    "7931": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "7932": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7933": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "7934": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "7935": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7936": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7937": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "7939": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "7940": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7942": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "7943": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "7946": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "EXP",
      "path": "25"
    },
    "7947": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "7948": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "NOT",
      "path": "25"
    },
    "7949": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "AND",
      "path": "25"
    },
    "7950": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "7951": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "7952": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "7954": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "7955": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7956": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7957": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7958": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7959": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "7960": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7961": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7962": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "7963": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "7965": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "7966": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7967": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "7968": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "7969": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7970": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "REVERT",
      "path": "25"
    },
    "7971": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "7972": {
      "op": "POP"
    },
    "7973": {
      "op": "POP"
    },
    "7974": {
      "op": "POP"
    },
    "7975": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 63
    },
    "7976": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SUB",
      "path": "25"
    },
    "7977": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "7978": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5393,
        5556
      ],
      "op": "JUMP",
      "path": "25"
    },
    "7979": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6922,
        7106
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7980": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7001
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7983": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7984": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7985": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7987": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7988": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7989": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7990": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7992": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7993": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7007
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "7994": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F43"
    },
    "7997": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7998": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7020,
        7027
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7999": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7019
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2467"
    },
    "8002": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        6995,
        7028
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8003": {
      "branch": 136,
      "fn": "AccessControl._grantRole",
      "offset": [
        6995,
        7028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8004": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6991,
        7100
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8005": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6991,
        7100
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8F"
    },
    "8008": {
      "branch": 136,
      "fn": "AccessControl._grantRole",
      "offset": [
        6991,
        7100
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "8009": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7076,
        7088
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 64,
      "value": "0x1F50"
    },
    "8012": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7076,
        7086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C47"
    },
    "8015": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7076,
        7088
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8016": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7076,
        7088
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8023": {
      "op": "SHL"
    },
    "8024": {
      "op": "SUB"
    },
    "8025": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "AND",
      "path": "22"
    },
    "8026": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7067,
        7074
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8033": {
      "op": "SHL"
    },
    "8034": {
      "op": "SUB"
    },
    "8035": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "AND",
      "path": "22"
    },
    "8036": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7061,
        7065
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8037": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "8070": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8072": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8073": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8075": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8076": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8077": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8078": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "SUB",
      "path": "22"
    },
    "8079": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8080": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7049,
        7089
      ],
      "op": "LOG4",
      "path": "22"
    },
    "8081": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6922,
        7106
      ],
      "op": "POP",
      "path": "22"
    },
    "8082": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6922,
        7106
      ],
      "op": "POP",
      "path": "22"
    },
    "8083": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6922,
        7106
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8084": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7112,
        7300
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8085": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7192
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "8087": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8088": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8089": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8090": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "8092": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8093": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8094": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "8095": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8097": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8098": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7198
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "8099": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7222
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FAC"
    },
    "8102": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8103": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7214,
        7221
      ],
      "op": "DUP3",
      "path": "22"
    },
    "8104": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7213
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x247C"
    },
    "8107": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7186,
        7222
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8108": {
      "branch": 137,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7186,
        7222
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8109": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7294
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8110": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7294
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8F"
    },
    "8113": {
      "branch": 137,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7294
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "8114": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7270,
        7282
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 65,
      "value": "0x1FB9"
    },
    "8117": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7270,
        7280
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C47"
    },
    "8120": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7270,
        7282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8121": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7270,
        7282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8128": {
      "op": "SHL"
    },
    "8129": {
      "op": "SUB"
    },
    "8130": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "AND",
      "path": "22"
    },
    "8131": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7261,
        7268
      ],
      "op": "DUP2",
      "path": "22"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8138": {
      "op": "SHL"
    },
    "8139": {
      "op": "SUB"
    },
    "8140": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "AND",
      "path": "22"
    },
    "8141": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7255,
        7259
      ],
      "op": "DUP4",
      "path": "22"
    },
    "8142": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "8175": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8177": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8178": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "8180": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "8181": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "DUP1",
      "path": "22"
    },
    "8182": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "8183": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "SUB",
      "path": "22"
    },
    "8184": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "8185": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7243,
        7283
      ],
      "op": "LOG4",
      "path": "22"
    },
    "8186": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7112,
        7300
      ],
      "op": "POP",
      "path": "22"
    },
    "8187": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7112,
        7300
      ],
      "op": "POP",
      "path": "22"
    },
    "8188": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7112,
        7300
      ],
      "op": "JUMP",
      "path": "22"
    },
    "8189": {
      "fn": "SafeMath.add",
      "offset": [
        2651,
        2826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8190": {
      "fn": "SafeMath.add",
      "offset": [
        2709,
        2716
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8192": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8193": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8194": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "ADD",
      "path": "25"
    },
    "8195": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "DUP4",
      "path": "25",
      "statement": 66
    },
    "8196": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8197": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "LT",
      "path": "25"
    },
    "8198": {
      "branch": 151,
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8199": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1416"
    },
    "8202": {
      "branch": 151,
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "8203": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8205": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8206": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8213": {
      "op": "SHL"
    },
    "8214": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8215": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8216": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8218": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "8220": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8221": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "8222": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8223": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1B"
    },
    "8225": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "8227": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8228": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "8229": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8230": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "8263": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "8265": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "8266": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "8267": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8268": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8269": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8270": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8271": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8272": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8273": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SUB",
      "path": "25"
    },
    "8274": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "8276": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "8277": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8278": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "REVERT",
      "path": "25"
    },
    "8279": {
      "fn": "ERC20._mint",
      "offset": [
        9838,
        10208
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8286": {
      "op": "SHL"
    },
    "8287": {
      "op": "SUB"
    },
    "8288": {
      "fn": "ERC20._mint",
      "offset": [
        9921,
        9942
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 67
    },
    "8289": {
      "branch": 145,
      "fn": "ERC20._mint",
      "offset": [
        9921,
        9942
      ],
      "op": "AND",
      "path": "40"
    },
    "8290": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x20B2"
    },
    "8293": {
      "branch": 145,
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "8294": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "8296": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP1",
      "path": "40"
    },
    "8297": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "8298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8304": {
      "op": "SHL"
    },
    "8305": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8306": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8307": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "8309": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "8311": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP3",
      "path": "40"
    },
    "8312": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "ADD",
      "path": "40"
    },
    "8313": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8314": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "8316": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "8318": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP3",
      "path": "40"
    },
    "8319": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "ADD",
      "path": "40"
    },
    "8320": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8321": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8354": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "8356": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP3",
      "path": "40"
    },
    "8357": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "ADD",
      "path": "40"
    },
    "8358": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8359": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8360": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "8361": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8362": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8363": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8364": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "SUB",
      "path": "40"
    },
    "8365": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "8367": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "ADD",
      "path": "40"
    },
    "8368": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8369": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "REVERT",
      "path": "40"
    },
    "8370": {
      "fn": "ERC20._mint",
      "offset": [
        9913,
        9978
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8371": {
      "fn": "ERC20._mint",
      "offset": [
        9989,
        10038
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 68,
      "value": "0x20BE"
    },
    "8374": {
      "fn": "ERC20._mint",
      "offset": [
        10018,
        10019
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "8376": {
      "fn": "ERC20._mint",
      "offset": [
        10022,
        10029
      ],
      "op": "DUP4",
      "path": "40"
    },
    "8377": {
      "fn": "ERC20._mint",
      "offset": [
        10031,
        10037
      ],
      "op": "DUP4",
      "path": "40"
    },
    "8378": {
      "fn": "ERC20._mint",
      "offset": [
        9989,
        10009
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2435"
    },
    "8381": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        9989,
        10038
      ],
      "op": "JUMP",
      "path": "40"
    },
    "8382": {
      "fn": "ERC20._mint",
      "offset": [
        9989,
        10038
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8383": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10076
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 69,
      "value": "0x5"
    },
    "8385": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10076
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "8386": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10088
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x20CB"
    },
    "8389": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10088
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8390": {
      "fn": "ERC20._mint",
      "offset": [
        10081,
        10087
      ],
      "op": "DUP3",
      "path": "40"
    },
    "8391": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10080
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1FFD"
    },
    "8394": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        10064,
        10088
      ],
      "op": "JUMP",
      "path": "40"
    },
    "8395": {
      "fn": "ERC20._mint",
      "offset": [
        10064,
        10088
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8396": {
      "fn": "ERC20._mint",
      "offset": [
        10049,
        10061
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x5"
    },
    "8398": {
      "fn": "ERC20._mint",
      "offset": [
        10049,
        10088
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8405": {
      "op": "SHL"
    },
    "8406": {
      "op": "SUB"
    },
    "8407": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 70
    },
    "8408": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "AND",
      "path": "40"
    },
    "8409": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "8411": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8412": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8413": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8414": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10128
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "8416": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "8418": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8419": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "8421": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8422": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "8423": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10137
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "8424": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10149
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x20F1"
    },
    "8427": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10149
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8428": {
      "fn": "ERC20._mint",
      "offset": [
        10142,
        10148
      ],
      "op": "DUP3",
      "path": "40"
    },
    "8429": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10141
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1FFD"
    },
    "8432": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMP",
      "path": "40"
    },
    "8433": {
      "fn": "ERC20._mint",
      "offset": [
        10119,
        10149
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8440": {
      "op": "SHL"
    },
    "8441": {
      "op": "SUB"
    },
    "8442": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP4",
      "path": "40"
    },
    "8443": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "AND",
      "path": "40"
    },
    "8444": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "8446": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8447": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8448": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8449": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10107
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "8451": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "8453": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8454": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8455": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8456": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "8458": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP1",
      "path": "40"
    },
    "8459": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "DUP4",
      "path": "40"
    },
    "8460": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "8461": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10149
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "8462": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10149
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8463": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10149
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "8464": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10149
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "8465": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 71
    },
    "8466": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "8467": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "DUP6",
      "path": "40"
    },
    "8468": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8469": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "8470": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "8471": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "8472": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "8473": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "8474": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "8475": {
      "fn": "ERC20._mint",
      "offset": [
        10098,
        10116
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "8476": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8509": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "8510": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "DUP2",
      "path": "40"
    },
    "8511": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8512": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SUB",
      "path": "40"
    },
    "8513": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8514": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "8515": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "ADD",
      "path": "40"
    },
    "8516": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "8517": {
      "fn": "ERC20._mint",
      "offset": [
        10164,
        10201
      ],
      "op": "LOG3",
      "path": "40"
    },
    "8518": {
      "fn": "ERC20._mint",
      "offset": [
        9838,
        10208
      ],
      "op": "POP",
      "path": "40"
    },
    "8519": {
      "fn": "ERC20._mint",
      "offset": [
        9838,
        10208
      ],
      "op": "POP",
      "path": "40"
    },
    "8520": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        9838,
        10208
      ],
      "op": "JUMP",
      "path": "40"
    },
    "8521": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8963,
        9892
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8522": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9068,
        9074
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8529": {
      "op": "SHL"
    },
    "8530": {
      "op": "SUB"
    },
    "8531": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9074
      ],
      "op": "AND",
      "path": "45"
    },
    "8532": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9064
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8539": {
      "op": "SHL"
    },
    "8540": {
      "op": "SUB"
    },
    "8541": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9074
      ],
      "op": "AND",
      "path": "45"
    },
    "8542": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9074
      ],
      "op": "EQ",
      "path": "45"
    },
    "8543": {
      "branch": 123,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9074
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8544": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8545": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8546": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x216B"
    },
    "8549": {
      "branch": 123,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8550": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "POP",
      "path": "45"
    },
    "8551": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9087,
        9088
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8553": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9078,
        9084
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8554": {
      "branch": 124,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9078,
        9088
      ],
      "op": "GT",
      "path": "45"
    },
    "8555": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9058,
        9088
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8556": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9054,
        9886
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8557": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9054,
        9886
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2286"
    },
    "8560": {
      "branch": 124,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9054,
        9886
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8567": {
      "op": "SHL"
    },
    "8568": {
      "op": "SUB"
    },
    "8569": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9108,
        9128
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8570": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9108,
        9128
      ],
      "op": "AND",
      "path": "45"
    },
    "8571": {
      "branch": 125,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9108,
        9128
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8572": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21FD"
    },
    "8575": {
      "branch": 125,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8582": {
      "op": "SHL"
    },
    "8583": {
      "op": "SUB"
    },
    "8584": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8585": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "AND",
      "path": "45"
    },
    "8586": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9195,
        9211
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8588": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8589": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8590": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8591": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9228
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "8593": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8595": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8596": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8598": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8599": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8600": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8601": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "8606": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "AND",
      "path": "45"
    },
    "8607": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9214,
        9236
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8608": {
      "branch": 126,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9287
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8609": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21AB"
    },
    "8612": {
      "branch": 126,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8613": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9333,
        9334
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8615": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21DD"
    },
    "8618": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8619": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8626": {
      "op": "SHL"
    },
    "8627": {
      "op": "SUB"
    },
    "8628": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8629": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "AND",
      "path": "45"
    },
    "8630": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8632": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8633": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8634": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8635": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9301
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "8637": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8639": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8640": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8641": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8642": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8644": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8645": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8646": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9309
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8647": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8654": {
      "op": "NOT"
    },
    "8655": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9310,
        9323
      ],
      "op": "DUP8",
      "path": "45"
    },
    "8656": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9310,
        9323
      ],
      "op": "ADD",
      "path": "45"
    },
    "8657": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "AND",
      "path": "45"
    },
    "8658": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8659": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8660": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8661": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8662": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8663": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8664": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9324
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8665": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9322,
        9323
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "8667": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9330
      ],
      "op": "ADD",
      "path": "45"
    },
    "8668": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9290,
        9330
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8669": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9274,
        9334
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8670": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9254,
        9334
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8671": {
      "op": "POP"
    },
    "8672": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9352,
        9369
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8674": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9372,
        9393
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x21EB"
    },
    "8677": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9254,
        9334
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8678": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9386,
        9392
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8679": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9372,
        9385
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2491"
    },
    "8682": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        9372,
        9393
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8683": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9372,
        9393
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8684": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9352,
        9393
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8685": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9352,
        9393
      ],
      "op": "POP",
      "path": "45"
    },
    "8686": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9411,
        9468
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 72,
      "value": "0x21F9"
    },
    "8689": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9428,
        9434
      ],
      "op": "DUP7",
      "path": "45"
    },
    "8690": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9436,
        9445
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8691": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9447,
        9456
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8692": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9458,
        9467
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8693": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9411,
        9427
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24EE"
    },
    "8696": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        9411,
        9468
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8697": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9411,
        9468
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8698": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "POP",
      "path": "45"
    },
    "8699": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "POP",
      "path": "45"
    },
    "8700": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "POP",
      "path": "45"
    },
    "8701": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9104,
        9483
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8708": {
      "op": "SHL"
    },
    "8709": {
      "op": "SUB"
    },
    "8710": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9501,
        9521
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8711": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9501,
        9521
      ],
      "op": "AND",
      "path": "45"
    },
    "8712": {
      "branch": 127,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9501,
        9521
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8713": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9497,
        9876
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2286"
    },
    "8716": {
      "branch": 127,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9497,
        9876
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8723": {
      "op": "SHL"
    },
    "8724": {
      "op": "SUB"
    },
    "8725": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8726": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "AND",
      "path": "45"
    },
    "8727": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9588,
        9604
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8729": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8730": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8731": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8732": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "8734": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8736": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8737": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8739": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8740": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8741": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8742": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "8747": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "AND",
      "path": "45"
    },
    "8748": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9607,
        9629
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8749": {
      "branch": 128,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9680
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8750": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2238"
    },
    "8753": {
      "branch": 128,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8754": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9726,
        9727
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8756": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x226A"
    },
    "8759": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8760": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8767": {
      "op": "SHL"
    },
    "8768": {
      "op": "SUB"
    },
    "8769": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8770": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "AND",
      "path": "45"
    },
    "8771": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8773": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8774": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8775": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8776": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9694
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "8778": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8780": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8781": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8782": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8783": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8785": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8786": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8787": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9702
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8788": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8795": {
      "op": "NOT"
    },
    "8796": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9703,
        9716
      ],
      "op": "DUP8",
      "path": "45"
    },
    "8797": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9703,
        9716
      ],
      "op": "ADD",
      "path": "45"
    },
    "8798": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "AND",
      "path": "45"
    },
    "8799": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8800": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8801": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8802": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8803": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8804": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8805": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9717
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8806": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9715,
        9716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "8808": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9723
      ],
      "op": "ADD",
      "path": "45"
    },
    "8809": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9683,
        9723
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8810": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9667,
        9727
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8811": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9647,
        9727
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8812": {
      "op": "POP"
    },
    "8813": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9745,
        9762
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8815": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9765,
        9786
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2278"
    },
    "8818": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9647,
        9727
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8819": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9779,
        9785
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8820": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9765,
        9778
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1FFD"
    },
    "8823": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        9765,
        9786
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8824": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9765,
        9786
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8825": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9745,
        9786
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8826": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9745,
        9786
      ],
      "op": "POP",
      "path": "45"
    },
    "8827": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9804,
        9861
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 73,
      "value": "0x115A"
    },
    "8830": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9821,
        9827
      ],
      "op": "DUP6",
      "path": "45"
    },
    "8831": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9829,
        9838
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8832": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9840,
        9849
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8833": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9851,
        9860
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8834": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9804,
        9820
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x24EE"
    },
    "8837": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        9804,
        9861
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8838": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        9497,
        9876
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8839": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8963,
        9892
      ],
      "op": "POP",
      "path": "45"
    },
    "8840": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8963,
        9892
      ],
      "op": "POP",
      "path": "45"
    },
    "8841": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        8963,
        9892
      ],
      "op": "POP",
      "path": "45"
    },
    "8842": {
      "fn": "SushiToken._moveDelegates",
      "jump": "o",
      "offset": [
        8963,
        9892
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8843": {
      "fn": "SushiToken._delegate",
      "offset": [
        8459,
        8957
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8850": {
      "op": "SHL"
    },
    "8851": {
      "op": "SUB"
    },
    "8852": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8853": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8854": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "AND",
      "path": "45"
    },
    "8855": {
      "fn": "SushiToken._delegate",
      "offset": [
        8547,
        8570
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8857": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8858": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8859": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8860": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8583
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "8862": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8864": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8865": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8867": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8868": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8869": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8870": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8871": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "AND",
      "path": "45"
    },
    "8872": {
      "fn": "SushiToken._delegate",
      "offset": [
        8573,
        8594
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8873": {
      "fn": "SushiToken._delegate",
      "offset": [
        8608,
        8636
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8874": {
      "fn": "SushiToken._delegate",
      "offset": [
        8608,
        8636
      ],
      "op": "AND",
      "path": "45"
    },
    "8875": {
      "fn": "SushiToken._delegate",
      "offset": [
        8608,
        8636
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8876": {
      "branch": 129,
      "fn": "SushiToken._delegate",
      "offset": [
        8608,
        8636
      ],
      "op": "EQ",
      "path": "45"
    },
    "8877": {
      "fn": "SushiToken._delegate",
      "offset": [
        8604,
        8951
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2286"
    },
    "8880": {
      "branch": 129,
      "fn": "SushiToken._delegate",
      "offset": [
        8604,
        8951
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "8881": {
      "fn": "SushiToken._delegate",
      "offset": [
        8651,
        8675
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8883": {
      "fn": "SushiToken._delegate",
      "offset": [
        8678,
        8698
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22BB"
    },
    "8886": {
      "fn": "SushiToken._delegate",
      "offset": [
        8688,
        8697
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8887": {
      "fn": "SushiToken._delegate",
      "offset": [
        8678,
        8687
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x117A"
    },
    "8890": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        8678,
        8698
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8891": {
      "fn": "SushiToken._delegate",
      "offset": [
        8678,
        8698
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8898": {
      "op": "SHL"
    },
    "8899": {
      "op": "SUB"
    },
    "8900": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP6",
      "path": "45",
      "statement": 74
    },
    "8901": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8902": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "AND",
      "path": "45"
    },
    "8903": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "8905": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8906": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8907": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8908": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8768
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "8910": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "8912": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "8913": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "8915": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8916": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8917": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "8918": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "DUP1",
      "path": "45"
    },
    "8919": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8926": {
      "op": "SHL"
    },
    "8927": {
      "op": "SUB"
    },
    "8928": {
      "op": "NOT"
    },
    "8929": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "AND",
      "path": "45"
    },
    "8930": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "DUP10",
      "path": "45"
    },
    "8931": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "DUP7",
      "path": "45"
    },
    "8932": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "AND",
      "path": "45"
    },
    "8933": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8934": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "DUP2",
      "path": "45"
    },
    "8935": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "OR",
      "path": "45"
    },
    "8936": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8937": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8938": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "8939": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "SWAP1",
      "path": "45",
      "statement": 75
    },
    "8940": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "8941": {
      "fn": "SushiToken._delegate",
      "offset": [
        8651,
        8698
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "8942": {
      "fn": "SushiToken._delegate",
      "offset": [
        8651,
        8698
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8791
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "8945": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "8946": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "DUP7",
      "path": "45"
    },
    "8947": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "AND",
      "path": "45"
    },
    "8948": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "8949": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "8982": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "8983": {
      "fn": "SushiToken._delegate",
      "offset": [
        8758,
        8779
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "8984": {
      "fn": "SushiToken._delegate",
      "offset": [
        8811,
        8865
      ],
      "op": "LOG4",
      "path": "45"
    },
    "8985": {
      "fn": "SushiToken._delegate",
      "offset": [
        8880,
        8940
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 76,
      "value": "0x13F8"
    },
    "8988": {
      "fn": "SushiToken._delegate",
      "offset": [
        8895,
        8910
      ],
      "op": "DUP3",
      "path": "45"
    },
    "8989": {
      "fn": "SushiToken._delegate",
      "offset": [
        8912,
        8921
      ],
      "op": "DUP5",
      "path": "45"
    },
    "8990": {
      "fn": "SushiToken._delegate",
      "offset": [
        8923,
        8939
      ],
      "op": "DUP4",
      "path": "45"
    },
    "8991": {
      "fn": "SushiToken._delegate",
      "offset": [
        8880,
        8894
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2149"
    },
    "8994": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        8880,
        8940
      ],
      "op": "JUMP",
      "path": "45"
    },
    "8995": {
      "fn": "ERC20._initERC20",
      "offset": [
        2063,
        2557
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "8996": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 77,
      "value": "0x8"
    },
    "8998": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "8999": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "9002": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9003": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "DIV",
      "path": "40"
    },
    "9004": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "9006": {
      "fn": "ERC20._initERC20",
      "offset": [
        2155,
        2167
      ],
      "op": "AND",
      "path": "40"
    },
    "9007": {
      "branch": 146,
      "fn": "ERC20._initERC20",
      "offset": [
        2154,
        2167
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "9008": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x236A"
    },
    "9011": {
      "branch": 146,
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "9012": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9014": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9021": {
      "op": "SHL"
    },
    "9022": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9023": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9024": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "9026": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "ADD",
      "path": "40"
    },
    "9027": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9028": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9029": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9031": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "ADD",
      "path": "40"
    },
    "9032": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9033": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9034": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SUB",
      "path": "40"
    },
    "9035": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9036": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9037": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2A"
    },
    "9039": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9040": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9041": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9043": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "ADD",
      "path": "40"
    },
    "9044": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9045": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x29F7"
    },
    "9048": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2A"
    },
    "9050": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9051": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "9052": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9054": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "ADD",
      "path": "40"
    },
    "9055": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9056": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "POP",
      "path": "40"
    },
    "9057": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "POP",
      "path": "40"
    },
    "9058": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "9060": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9061": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9062": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9063": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SUB",
      "path": "40"
    },
    "9064": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9065": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "REVERT",
      "path": "40"
    },
    "9066": {
      "fn": "ERC20._initERC20",
      "offset": [
        2146,
        2214
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9067": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 78
    },
    "9068": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9069": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x237D"
    },
    "9072": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9073": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2229
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x6"
    },
    "9075": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2229
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9076": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9078": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "DUP6",
      "path": "40"
    },
    "9079": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "ADD",
      "path": "40"
    },
    "9080": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9081": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2857"
    },
    "9084": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2224,
        2237
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9085": {
      "fn": "ERC20._initERC20",
      "offset": [
        2224,
        2237
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9086": {
      "op": "POP"
    },
    "9087": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 79
    },
    "9088": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9089": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2391"
    },
    "9092": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9093": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2254
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x7"
    },
    "9095": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2254
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9096": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9098": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9099": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "ADD",
      "path": "40"
    },
    "9100": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9101": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2857"
    },
    "9104": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2247,
        2264
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9105": {
      "fn": "ERC20._initERC20",
      "offset": [
        2247,
        2264
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "9106": {
      "op": "POP"
    },
    "9107": {
      "op": "POP"
    },
    "9108": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2283
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 80,
      "value": "0x8"
    },
    "9110": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9111": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "9112": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 81,
      "value": "0x40"
    },
    "9114": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9115": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9116": {
      "fn": "ERC20._initERC20",
      "offset": [
        2425,
        2493
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x47E79534A245952E8B16893A336B85A3D9EA9FA8C573F3D803AFB92A79469218"
    },
    "9149": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "9151": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9152": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP4",
      "path": "40"
    },
    "9153": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "ADD",
      "path": "40"
    },
    "9154": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9155": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9156": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9157": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9158": {
      "fn": "ERC20._initERC20",
      "offset": [
        2357,
        2366
      ],
      "op": "CHAINID",
      "path": "40"
    },
    "9159": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP3",
      "path": "40"
    },
    "9160": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9161": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "ADD",
      "path": "40"
    },
    "9162": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9163": {
      "fn": "ERC20._initERC20",
      "offset": [
        2512,
        2516
      ],
      "op": "ADDRESS",
      "path": "40"
    },
    "9164": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "9166": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9167": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9168": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "ADD",
      "path": "40"
    },
    "9169": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9170": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9171": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9172": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9173": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP4",
      "path": "40"
    },
    "9174": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9175": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9176": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP5",
      "path": "40"
    },
    "9177": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SUB",
      "path": "40"
    },
    "9178": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9179": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9180": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "ADD",
      "path": "40"
    },
    "9181": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "DUP2",
      "path": "40"
    },
    "9182": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9183": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "9185": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9186": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "9187": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "ADD",
      "path": "40"
    },
    "9188": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9189": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "9190": {
      "fn": "ERC20._initERC20",
      "offset": [
        2414,
        2518
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "9191": {
      "fn": "ERC20._initERC20",
      "offset": [
        2404,
        2519
      ],
      "op": "DUP1",
      "path": "40"
    },
    "9192": {
      "fn": "ERC20._initERC20",
      "offset": [
        2404,
        2519
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "9193": {
      "fn": "ERC20._initERC20",
      "offset": [
        2404,
        2519
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9194": {
      "fn": "ERC20._initERC20",
      "offset": [
        2404,
        2519
      ],
      "op": "ADD",
      "path": "40"
    },
    "9195": {
      "fn": "ERC20._initERC20",
      "offset": [
        2404,
        2519
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "9196": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "9198": {
      "fn": "ERC20._initERC20",
      "offset": [
        2385,
        2519
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "9199": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "9202": {
      "op": "NOT"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9205": {
      "op": "NOT"
    },
    "9206": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9207": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "9208": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "AND",
      "path": "40"
    },
    "9209": {
      "fn": "ERC20._initERC20",
      "offset": [
        2286,
        2288
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x12"
    },
    "9211": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "OR",
      "path": "40"
    },
    "9212": {
      "fn": "ERC20._initERC20",
      "offset": [
        2531,
        2550
      ],
      "op": "AND",
      "path": "40",
      "statement": 82
    },
    "9213": {
      "fn": "ERC20._initERC20",
      "offset": [
        2274,
        2288
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "9216": {
      "fn": "ERC20._initERC20",
      "offset": [
        2531,
        2550
      ],
      "op": "OR",
      "path": "40"
    },
    "9217": {
      "fn": "ERC20._initERC20",
      "offset": [
        2531,
        2550
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "9218": {
      "fn": "ERC20._initERC20",
      "offset": [
        2531,
        2550
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "9219": {
      "op": "POP"
    },
    "9220": {
      "fn": "ERC20._initERC20",
      "jump": "o",
      "offset": [
        2063,
        2557
      ],
      "op": "JUMP",
      "path": "40"
    },
    "9221": {
      "fn": "EnumerableSet.at",
      "offset": [
        7637,
        7793
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9222": {
      "fn": "EnumerableSet.at",
      "offset": [
        7711,
        7718
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9224": {
      "fn": "EnumerableSet.at",
      "offset": [
        7761,
        7783
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 83,
      "value": "0x1416"
    },
    "9227": {
      "fn": "EnumerableSet.at",
      "offset": [
        7765,
        7768
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9228": {
      "fn": "EnumerableSet.at",
      "offset": [
        7777,
        7782
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9229": {
      "fn": "EnumerableSet.at",
      "offset": [
        7761,
        7764
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2653"
    },
    "9232": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7761,
        7783
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9233": {
      "fn": "EnumerableSet.contains",
      "offset": [
        6944,
        7109
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9234": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7024,
        7028
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9236": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7047,
        7102
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 84,
      "value": "0x1416"
    },
    "9239": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7057,
        7060
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9246": {
      "op": "SHL"
    },
    "9247": {
      "op": "SUB"
    },
    "9248": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7077,
        7100
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9249": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7077,
        7100
      ],
      "op": "AND",
      "path": "34"
    },
    "9250": {
      "fn": "EnumerableSet.contains",
      "offset": [
        7047,
        7056
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26B7"
    },
    "9253": {
      "fn": "EnumerableSet.contains",
      "jump": "i",
      "offset": [
        7047,
        7102
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9254": {
      "fn": "SushiToken.getChainId",
      "offset": [
        10755,
        10904
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9255": {
      "fn": "SushiToken.getChainId",
      "offset": [
        10863,
        10872
      ],
      "op": "CHAINID",
      "path": "45"
    },
    "9256": {
      "fn": "SushiToken.getChainId",
      "offset": [
        10755,
        10904
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9257": {
      "fn": "SushiToken.getChainId",
      "jump": "o",
      "offset": [
        10755,
        10904
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9258": {
      "fn": "EnumerableSet.length",
      "offset": [
        7190,
        7305
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9259": {
      "fn": "EnumerableSet.length",
      "offset": [
        7253,
        7260
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9261": {
      "fn": "EnumerableSet.length",
      "offset": [
        7279,
        7298
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 85,
      "value": "0xD5B"
    },
    "9264": {
      "fn": "EnumerableSet.length",
      "offset": [
        7287,
        7290
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9265": {
      "fn": "EnumerableSet.length",
      "offset": [
        7279,
        7286
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26CF"
    },
    "9268": {
      "fn": "EnumerableSet.length",
      "jump": "i",
      "offset": [
        7279,
        7298
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9269": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        10955,
        11161
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9276": {
      "op": "SHL"
    },
    "9277": {
      "op": "SUB"
    },
    "9278": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 86
    },
    "9279": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9280": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "AND",
      "path": "45"
    },
    "9281": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9283": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9284": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9285": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9286": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11087
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "9288": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9290": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9291": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9293": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9294": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9295": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9296": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11056,
        11100
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x245C"
    },
    "9299": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11056,
        11100
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9300": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11071,
        11075
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9301": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11071,
        11075
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9302": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11077,
        11091
      ],
      "op": "AND",
      "path": "45"
    },
    "9303": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11093,
        11099
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9304": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11056,
        11070
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2149"
    },
    "9307": {
      "fn": "SushiToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11056,
        11100
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9308": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11056,
        11100
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9309": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11110,
        11154
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 87,
      "value": "0x2286"
    },
    "9312": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11137,
        11141
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9313": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11143,
        11145
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9314": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11147,
        11153
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9315": {
      "fn": "SushiToken._beforeTokenTransfer",
      "offset": [
        11110,
        11136
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2286"
    },
    "9318": {
      "fn": "SushiToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11110,
        11154
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9319": {
      "fn": "EnumerableSet.add",
      "offset": [
        6389,
        6539
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9320": {
      "fn": "EnumerableSet.add",
      "offset": [
        6459,
        6463
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9322": {
      "fn": "EnumerableSet.add",
      "offset": [
        6482,
        6532
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 88,
      "value": "0x1416"
    },
    "9325": {
      "fn": "EnumerableSet.add",
      "offset": [
        6487,
        6490
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9332": {
      "op": "SHL"
    },
    "9333": {
      "op": "SUB"
    },
    "9334": {
      "fn": "EnumerableSet.add",
      "offset": [
        6507,
        6530
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9335": {
      "fn": "EnumerableSet.add",
      "offset": [
        6507,
        6530
      ],
      "op": "AND",
      "path": "34"
    },
    "9336": {
      "fn": "EnumerableSet.add",
      "offset": [
        6482,
        6486
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26D3"
    },
    "9339": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6482,
        6532
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9340": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6707,
        6863
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9341": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6780,
        6784
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9343": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6803,
        6856
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 89,
      "value": "0x1416"
    },
    "9346": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6811,
        6814
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9353": {
      "op": "SHL"
    },
    "9354": {
      "op": "SUB"
    },
    "9355": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6831,
        6854
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9356": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6831,
        6854
      ],
      "op": "AND",
      "path": "34"
    },
    "9357": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6803,
        6810
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x271D"
    },
    "9360": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6803,
        6856
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9361": {
      "fn": "SafeMath.sub",
      "offset": [
        3097,
        3252
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9362": {
      "fn": "SafeMath.sub",
      "offset": [
        3155,
        3162
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "9364": {
      "fn": "SafeMath.sub",
      "offset": [
        3187,
        3188
      ],
      "op": "DUP3",
      "path": "25",
      "statement": 90
    },
    "9365": {
      "fn": "SafeMath.sub",
      "offset": [
        3182,
        3183
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9366": {
      "fn": "SafeMath.sub",
      "offset": [
        3182,
        3188
      ],
      "op": "GT",
      "path": "25"
    },
    "9367": {
      "branch": 152,
      "fn": "SafeMath.sub",
      "offset": [
        3182,
        3188
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "9368": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x24E8"
    },
    "9371": {
      "branch": 152,
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "9372": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "9374": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP1",
      "path": "25"
    },
    "9375": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9382": {
      "op": "SHL"
    },
    "9383": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9384": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9385": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "9387": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "9389": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9390": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "ADD",
      "path": "25"
    },
    "9391": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9392": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1E"
    },
    "9394": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "9396": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9397": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "ADD",
      "path": "25"
    },
    "9398": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9399": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "9432": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "9434": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP3",
      "path": "25"
    },
    "9435": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "ADD",
      "path": "25"
    },
    "9436": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "9437": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9438": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "9439": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9440": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "DUP2",
      "path": "25"
    },
    "9441": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9442": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "SUB",
      "path": "25"
    },
    "9443": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "9445": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "ADD",
      "path": "25"
    },
    "9446": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9447": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "REVERT",
      "path": "25"
    },
    "9448": {
      "fn": "SafeMath.sub",
      "offset": [
        3174,
        3223
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "9449": {
      "op": "POP"
    },
    "9450": {
      "fn": "SafeMath.sub",
      "offset": [
        3240,
        3245
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 91
    },
    "9451": {
      "fn": "SafeMath.sub",
      "offset": [
        3240,
        3245
      ],
      "op": "SUB",
      "path": "25"
    },
    "9452": {
      "fn": "SafeMath.sub",
      "offset": [
        3240,
        3245
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "9453": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3097,
        3252
      ],
      "op": "JUMP",
      "path": "25"
    },
    "9454": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9455": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10069,
        10087
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9457": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2512"
    },
    "9460": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10097,
        10109
      ],
      "op": "NUMBER",
      "path": "45"
    },
    "9461": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9463": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9464": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9465": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "9467": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "ADD",
      "path": "45"
    },
    "9468": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9470": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9471": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9472": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x35"
    },
    "9474": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9475": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9476": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9478": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "ADD",
      "path": "45"
    },
    "9479": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2A51"
    },
    "9482": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x35"
    },
    "9484": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9485": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "9486": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10096
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27E3"
    },
    "9489": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "i",
      "offset": [
        10090,
        10167
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9490": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10090,
        10167
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9491": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10069,
        10167
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9492": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10069,
        10167
      ],
      "op": "POP",
      "path": "45"
    },
    "9493": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10197,
        10198
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9495": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10194
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9496": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10198
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9501": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10198
      ],
      "op": "AND",
      "path": "45"
    },
    "9502": {
      "branch": 130,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10198
      ],
      "op": "GT",
      "path": "45"
    },
    "9503": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10267
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9504": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10267
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "9505": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10267
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x255B"
    },
    "9508": {
      "branch": 130,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10267
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9509": {
      "op": "POP"
    },
    "9510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9516": {
      "op": "SHL"
    },
    "9517": {
      "op": "SUB"
    },
    "9518": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9519": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "AND",
      "path": "45"
    },
    "9520": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9522": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9523": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9524": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9525": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10213
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "9527": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9529": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9530": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9531": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9532": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9534": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9535": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9536": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10224
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9537": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10267
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9544": {
      "op": "NOT"
    },
    "9545": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10225,
        10241
      ],
      "op": "DUP10",
      "path": "45"
    },
    "9546": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10225,
        10241
      ],
      "op": "ADD",
      "path": "45"
    },
    "9547": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9548": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "AND",
      "path": "45"
    },
    "9549": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "DUP6",
      "path": "45"
    },
    "9550": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9551": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9552": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9553": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9554": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9555": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10242
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9556": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10252
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9557": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10267
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9558": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10267
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9559": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10267
      ],
      "op": "AND",
      "path": "45"
    },
    "9560": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10252
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9561": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10252
      ],
      "op": "AND",
      "path": "45"
    },
    "9562": {
      "branch": 131,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10202,
        10267
      ],
      "op": "EQ",
      "path": "45"
    },
    "9563": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10182,
        10267
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9564": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "9565": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2598"
    },
    "9568": {
      "branch": 131,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9575": {
      "op": "SHL"
    },
    "9576": {
      "op": "SUB"
    },
    "9577": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "DUP6",
      "path": "45",
      "statement": 92
    },
    "9578": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "AND",
      "path": "45"
    },
    "9579": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "9581": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9582": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9583": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9584": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10294
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "9586": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9588": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9589": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9590": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9591": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "9593": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9594": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9595": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10305
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9596": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9603": {
      "op": "NOT"
    },
    "9604": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10306,
        10322
      ],
      "op": "DUP10",
      "path": "45"
    },
    "9605": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10306,
        10322
      ],
      "op": "ADD",
      "path": "45"
    },
    "9606": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "AND",
      "path": "45"
    },
    "9607": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9608": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9609": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9610": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9611": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9612": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9613": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10323
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9614": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10321,
        10322
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9616": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10329
      ],
      "op": "ADD",
      "path": "45"
    },
    "9617": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10340
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9618": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10340
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9619": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10283,
        10340
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9620": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2609"
    },
    "9623": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9624": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9625": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 93,
      "value": "0x40"
    },
    "9627": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9628": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9629": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9630": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9631": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "ADD",
      "path": "45"
    },
    "9632": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9633": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9634": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xFFFFFFFF"
    },
    "9639": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9640": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9641": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "AND",
      "path": "45"
    },
    "9642": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9643": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9644": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9646": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9647": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP4",
      "path": "45"
    },
    "9648": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "ADD",
      "path": "45"
    },
    "9649": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9650": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9651": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10410,
        10443
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9658": {
      "op": "SHL"
    },
    "9659": {
      "op": "SUB"
    },
    "9660": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP11",
      "path": "45"
    },
    "9661": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "AND",
      "path": "45"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9664": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9665": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9666": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9667": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10382
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xA"
    },
    "9669": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9670": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9671": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9672": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9673": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10393
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9674": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP12",
      "path": "45"
    },
    "9675": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9676": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "AND",
      "path": "45"
    },
    "9677": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9678": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9679": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9680": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9681": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9682": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9683": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10407
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9684": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "9685": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9686": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9687": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9688": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9689": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "DUP7",
      "path": "45"
    },
    "9690": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "AND",
      "path": "45"
    },
    "9691": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9696": {
      "op": "NOT"
    },
    "9697": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9698": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9699": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "AND",
      "path": "45"
    },
    "9700": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "OR",
      "path": "45"
    },
    "9701": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "DUP8",
      "path": "45"
    },
    "9702": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9703": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9704": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9705": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "9707": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SWAP7",
      "path": "45"
    },
    "9708": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "DUP8",
      "path": "45"
    },
    "9709": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "ADD",
      "path": "45"
    },
    "9710": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10371,
        10443
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9711": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "SWAP1",
      "path": "45",
      "statement": 94
    },
    "9712": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9713": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9714": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10471
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xB"
    },
    "9716": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9717": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9718": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9719": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "9720": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9721": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10482
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "9722": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9723": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "9724": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10485,
        10501
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9725": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10485,
        10501
      ],
      "op": "DUP9",
      "path": "45"
    },
    "9726": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10485,
        10501
      ],
      "op": "ADD",
      "path": "45"
    },
    "9727": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9728": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9729": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "AND",
      "path": "45"
    },
    "9730": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "9731": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9732": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9733": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "AND",
      "path": "45"
    },
    "9734": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "OR",
      "path": "45"
    },
    "9735": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9736": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10457,
        10501
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "9737": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10178,
        10512
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "9738": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 95,
      "value": "0x40"
    },
    "9740": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP1",
      "path": "45"
    },
    "9741": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9742": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9743": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9744": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9745": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "9747": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9748": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "ADD",
      "path": "45"
    },
    "9749": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP5",
      "path": "45"
    },
    "9750": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9751": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "9752": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP2",
      "path": "45"
    },
    "9753": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9760": {
      "op": "SHL"
    },
    "9761": {
      "op": "SUB"
    },
    "9762": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP9",
      "path": "45"
    },
    "9763": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "AND",
      "path": "45"
    },
    "9764": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9765": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "9798": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "9799": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "DUP3",
      "path": "45"
    },
    "9800": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9801": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SUB",
      "path": "45"
    },
    "9802": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "ADD",
      "path": "45"
    },
    "9803": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "9804": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        10527,
        10578
      ],
      "op": "LOG2",
      "path": "45"
    },
    "9805": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "POP",
      "path": "45"
    },
    "9806": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "POP",
      "path": "45"
    },
    "9807": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "POP",
      "path": "45"
    },
    "9808": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "POP",
      "path": "45"
    },
    "9809": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        9898,
        10585
      ],
      "op": "POP",
      "path": "45"
    },
    "9810": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "o",
      "offset": [
        9898,
        10585
      ],
      "op": "JUMP",
      "path": "45"
    },
    "9811": {
      "fn": "EnumerableSet._at",
      "offset": [
        4412,
        4613
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9812": {
      "fn": "EnumerableSet._at",
      "offset": [
        4506,
        4524
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 96
    },
    "9813": {
      "fn": "EnumerableSet._at",
      "offset": [
        4506,
        4524
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9814": {
      "fn": "EnumerableSet._at",
      "offset": [
        4479,
        4486
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9816": {
      "fn": "EnumerableSet._at",
      "offset": [
        4479,
        4486
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9817": {
      "branch": 147,
      "fn": "EnumerableSet._at",
      "offset": [
        4506,
        4532
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9818": {
      "op": "LT"
    },
    "9819": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2695"
    },
    "9822": {
      "branch": 147,
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "9823": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "9825": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "9826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9832": {
      "op": "SHL"
    },
    "9833": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9834": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9835": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "9837": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "ADD",
      "path": "34"
    },
    "9838": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP1",
      "path": "34"
    },
    "9839": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP1",
      "path": "34"
    },
    "9840": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "9842": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "ADD",
      "path": "34"
    },
    "9843": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9844": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9845": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SUB",
      "path": "34"
    },
    "9846": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9847": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9848": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x22"
    },
    "9850": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9851": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9852": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "9854": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "ADD",
      "path": "34"
    },
    "9855": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP1",
      "path": "34"
    },
    "9856": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x28EB"
    },
    "9859": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x22"
    },
    "9861": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9862": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "CODECOPY",
      "path": "34"
    },
    "9863": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "9865": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "ADD",
      "path": "34"
    },
    "9866": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9867": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "POP",
      "path": "34"
    },
    "9868": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "POP",
      "path": "34"
    },
    "9869": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "9871": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "9872": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "DUP1",
      "path": "34"
    },
    "9873": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9874": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SUB",
      "path": "34"
    },
    "9875": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9876": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "REVERT",
      "path": "34"
    },
    "9877": {
      "fn": "EnumerableSet._at",
      "offset": [
        4498,
        4571
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9878": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4591
      ],
      "op": "DUP3",
      "path": "34",
      "statement": 97
    },
    "9879": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4599
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9881": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4599
      ],
      "op": "ADD",
      "path": "34"
    },
    "9882": {
      "fn": "EnumerableSet._at",
      "offset": [
        4600,
        4605
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9883": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9884": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9885": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9886": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "LT",
      "path": "34"
    },
    "9887": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26A4"
    },
    "9890": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "9891": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "INVALID",
      "path": "34"
    },
    "9892": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9893": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9894": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9896": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9897": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "9899": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9901": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "9902": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "ADD",
      "path": "34"
    },
    "9903": {
      "fn": "EnumerableSet._at",
      "offset": [
        4588,
        4606
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9904": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4606
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9905": {
      "fn": "EnumerableSet._at",
      "offset": [
        4581,
        4606
      ],
      "op": "POP",
      "path": "34"
    },
    "9906": {
      "fn": "EnumerableSet._at",
      "offset": [
        4412,
        4613
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "9907": {
      "fn": "EnumerableSet._at",
      "offset": [
        4412,
        4613
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9908": {
      "fn": "EnumerableSet._at",
      "offset": [
        4412,
        4613
      ],
      "op": "POP",
      "path": "34"
    },
    "9909": {
      "fn": "EnumerableSet._at",
      "offset": [
        4412,
        4613
      ],
      "op": "POP",
      "path": "34"
    },
    "9910": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4412,
        4613
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9911": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3765,
        3892
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9912": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3838,
        3842
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9914": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "SWAP1",
      "path": "34",
      "statement": 98
    },
    "9915": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9916": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9917": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3873
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "9919": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3873
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9920": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3873
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9921": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3873
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9922": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3873
      ],
      "op": "ADD",
      "path": "34"
    },
    "9923": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "9925": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9926": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "9928": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9929": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "9930": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3880
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9931": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3885
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "9932": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3885
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "9933": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3861,
        3885
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9934": {
      "fn": "EnumerableSet._contains",
      "jump": "o",
      "offset": [
        3765,
        3892
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9935": {
      "fn": "EnumerableSet._length",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9936": {
      "fn": "EnumerableSet._length",
      "offset": [
        4055,
        4073
      ],
      "op": "SLOAD",
      "path": "34",
      "statement": 99
    },
    "9937": {
      "fn": "EnumerableSet._length",
      "offset": [
        4055,
        4073
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9938": {
      "fn": "EnumerableSet._length",
      "jump": "o",
      "offset": [
        3973,
        4080
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9939": {
      "fn": "EnumerableSet._add",
      "offset": [
        1600,
        2004
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9940": {
      "fn": "EnumerableSet._add",
      "offset": [
        1663,
        1667
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9942": {
      "fn": "EnumerableSet._add",
      "offset": [
        1684,
        1705
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26DF"
    },
    "9945": {
      "fn": "EnumerableSet._add",
      "offset": [
        1694,
        1697
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9946": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1704
      ],
      "op": "DUP4",
      "path": "34"
    },
    "9947": {
      "fn": "EnumerableSet._add",
      "offset": [
        1684,
        1693
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x26B7"
    },
    "9950": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1684,
        1705
      ],
      "op": "JUMP",
      "path": "34"
    },
    "9951": {
      "branch": 148,
      "fn": "EnumerableSet._add",
      "offset": [
        1684,
        1705
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "9952": {
      "fn": "EnumerableSet._add",
      "offset": [
        1679,
        1998
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2715"
    },
    "9955": {
      "branch": 148,
      "fn": "EnumerableSet._add",
      "offset": [
        1679,
        1998
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "9956": {
      "op": "POP"
    },
    "9957": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 100
    },
    "9958": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9959": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "9961": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9962": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9963": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "ADD",
      "path": "34"
    },
    "9964": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9965": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "9966": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1732
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "9968": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9969": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP2",
      "path": "34"
    },
    "9970": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9971": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "9973": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP1",
      "path": "34"
    },
    "9974": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9975": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "9976": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9977": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "9978": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "ADD",
      "path": "34"
    },
    "9979": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9980": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9981": {
      "fn": "EnumerableSet._add",
      "offset": [
        1721,
        1744
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "9982": {
      "fn": "EnumerableSet._add",
      "offset": [
        1901,
        1919
      ],
      "op": "DUP5",
      "path": "34",
      "statement": 101
    },
    "9983": {
      "fn": "EnumerableSet._add",
      "offset": [
        1901,
        1919
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "9984": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "DUP5",
      "path": "34"
    },
    "9985": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9986": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9987": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1891
      ],
      "op": "DUP3",
      "path": "34"
    },
    "9988": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1891
      ],
      "op": "DUP7",
      "path": "34"
    },
    "9989": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1891
      ],
      "op": "ADD",
      "path": "34"
    },
    "9990": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9991": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "9992": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "9993": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "9995": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9996": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1898
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "9997": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1919
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "9998": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1919
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "9999": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1919
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10000": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1919
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10001": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1944
      ],
      "op": "PUSH2",
      "path": "34",
      "statement": 102,
      "value": "0xD5B"
    },
    "10004": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1944
      ],
      "op": "JUMP",
      "path": "34"
    },
    "10005": {
      "fn": "EnumerableSet._add",
      "offset": [
        1679,
        1998
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10006": {
      "op": "POP"
    },
    "10007": {
      "fn": "EnumerableSet._add",
      "offset": [
        1982,
        1987
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 103,
      "value": "0x0"
    },
    "10009": {
      "fn": "EnumerableSet._add",
      "offset": [
        1975,
        1987
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xD5B"
    },
    "10012": {
      "fn": "EnumerableSet._add",
      "offset": [
        1975,
        1987
      ],
      "op": "JUMP",
      "path": "34"
    },
    "10013": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2172,
        3684
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10014": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2238,
        2242
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10016": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10017": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10018": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10019": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2387
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "10021": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2387
      ],
      "op": "DUP4",
      "path": "34"
    },
    "10022": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2387
      ],
      "op": "ADD",
      "path": "34"
    },
    "10023": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10025": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10026": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "10028": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10029": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10030": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2375,
        2394
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10031": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2409,
        2424
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10032": {
      "branch": 149,
      "fn": "EnumerableSet._remove",
      "offset": [
        2409,
        2424
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "10033": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2405,
        3678
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x27D9"
    },
    "10036": {
      "branch": 149,
      "fn": "EnumerableSet._remove",
      "offset": [
        2405,
        3678
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "10037": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2856
      ],
      "op": "DUP4",
      "path": "34"
    },
    "10038": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2856
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10041": {
      "op": "NOT"
    },
    "10042": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2790,
        2804
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10043": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2790,
        2804
      ],
      "op": "DUP4",
      "path": "34"
    },
    "10044": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2790,
        2804
      ],
      "op": "ADD",
      "path": "34"
    },
    "10045": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2790,
        2804
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10046": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10047": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10048": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "ADD",
      "path": "34"
    },
    "10049": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10050": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2766,
        2787
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10052": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2766,
        2787
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10053": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2841
      ],
      "op": "DUP8",
      "path": "34"
    },
    "10054": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2841
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10055": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "DUP4",
      "path": "34"
    },
    "10056": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2838,
        2860
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10057": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10058": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "LT",
      "path": "34"
    },
    "10059": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x2750"
    },
    "10062": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "10063": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "INVALID",
      "path": "34"
    },
    "10064": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10065": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10066": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10068": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10069": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10071": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10073": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10074": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "ADD",
      "path": "34"
    },
    "10075": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3120,
        3142
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10076": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3100,
        3142
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10077": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3100,
        3142
      ],
      "op": "POP",
      "path": "34"
    },
    "10078": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3263,
        3272
      ],
      "op": "DUP1",
      "path": "34",
      "statement": 104
    },
    "10079": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3237
      ],
      "op": "DUP8",
      "path": "34"
    },
    "10080": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3245
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10082": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3245
      ],
      "op": "ADD",
      "path": "34"
    },
    "10083": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3246,
        3259
      ],
      "op": "DUP5",
      "path": "34"
    },
    "10084": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10085": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10086": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10087": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "LT",
      "path": "34"
    },
    "10088": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x276D"
    },
    "10091": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "10092": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "INVALID",
      "path": "34"
    },
    "10093": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10094": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10096": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10097": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "DUP3",
      "path": "34"
    },
    "10098": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10099": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10101": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10102": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "DUP4",
      "path": "34"
    },
    "10103": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10104": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10105": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10106": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3260
      ],
      "op": "ADD",
      "path": "34"
    },
    "10107": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3272
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10108": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3272
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10109": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3272
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10110": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3234,
        3272
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10111": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "DUP3",
      "path": "34",
      "statement": 105
    },
    "10112": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10113": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10114": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3380,
        3381
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "10116": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3350
      ],
      "op": "DUP10",
      "path": "34"
    },
    "10117": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3350
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10118": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3350
      ],
      "op": "ADD",
      "path": "34"
    },
    "10119": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10120": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "10121": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10122": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "10124": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10125": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3361
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10126": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3364,
        3381
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10127": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3364,
        3381
      ],
      "op": "DUP5",
      "path": "34"
    },
    "10128": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3364,
        3381
      ],
      "op": "ADD",
      "path": "34"
    },
    "10129": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3381
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10130": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3381
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10131": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP7",
      "path": "34",
      "statement": 106
    },
    "10132": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SLOAD",
      "path": "34"
    },
    "10133": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3341
      ],
      "op": "DUP8",
      "path": "34"
    },
    "10134": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3338,
        3341
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10135": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP1",
      "path": "34"
    },
    "10136": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x279D"
    },
    "10139": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "10140": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "INVALID",
      "path": "34"
    },
    "10141": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10142": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "10144": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10145": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SUB",
      "path": "34"
    },
    "10146": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10147": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10148": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10149": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10151": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10152": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10154": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10157": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "ADD",
      "path": "34"
    },
    "10158": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10160": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10162": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3487,
        3504
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10164": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3582
      ],
      "op": "DUP7",
      "path": "34",
      "statement": 107
    },
    "10165": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3591
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "10167": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3591
      ],
      "op": "ADD",
      "path": "34"
    },
    "10168": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10170": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3592,
        3597
      ],
      "op": "DUP8",
      "path": "34"
    },
    "10171": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10172": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10173": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10175": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "ADD",
      "path": "34"
    },
    "10176": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10177": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "DUP2",
      "path": "34"
    },
    "10178": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "10179": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "10181": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "ADD",
      "path": "34"
    },
    "10182": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3579,
        3598
      ],
      "op": "KECCAK256",
      "path": "34"
    },
    "10185": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3572,
        3598
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "10187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3572,
        3598
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "10188": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3572,
        3598
      ],
      "op": "SSTORE",
      "path": "34"
    },
    "10189": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3620,
        3624
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 108,
      "value": "0x1"
    },
    "10191": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "SWAP5",
      "path": "34"
    },
    "10192": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "POP",
      "path": "34"
    },
    "10193": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "POP",
      "path": "34"
    },
    "10194": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "POP",
      "path": "34"
    },
    "10195": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "POP",
      "path": "34"
    },
    "10196": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "POP",
      "path": "34"
    },
    "10197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xD5B"
    },
    "10200": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3613,
        3624
      ],
      "op": "JUMP",
      "path": "34"
    },
    "10201": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2405,
        3678
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "10202": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3662,
        3667
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 109,
      "value": "0x0"
    },
    "10204": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3655,
        3667
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "10205": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3655,
        3667
      ],
      "op": "POP",
      "path": "34"
    },
    "10206": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3655,
        3667
      ],
      "op": "POP",
      "path": "34"
    },
    "10207": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3655,
        3667
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xD5B"
    },
    "10210": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3655,
        3667
      ],
      "op": "JUMP",
      "path": "34"
    },
    "10211": {
      "fn": "SushiToken.safe32",
      "offset": [
        10591,
        10749
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "10212": {
      "fn": "SushiToken.safe32",
      "offset": [
        10666,
        10672
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "10214": {
      "fn": "SushiToken.safe32",
      "offset": [
        10703,
        10715
      ],
      "op": "DUP2",
      "path": "45",
      "statement": 110
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10219": {
      "op": "SHL"
    },
    "10220": {
      "fn": "SushiToken.safe32",
      "offset": [
        10692,
        10701
      ],
      "op": "DUP5",
      "path": "45"
    },
    "10221": {
      "branch": 132,
      "fn": "SushiToken.safe32",
      "offset": [
        10692,
        10701
      ],
      "op": "LT",
      "path": "45"
    },
    "10222": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2838"
    },
    "10225": {
      "branch": 132,
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "10226": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "10228": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "10229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10235": {
      "op": "SHL"
    },
    "10236": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP2",
      "path": "45"
    },
    "10237": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "10238": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "10240": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "10242": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP3",
      "path": "45"
    },
    "10243": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10244": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP2",
      "path": "45"
    },
    "10245": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP2",
      "path": "45"
    },
    "10246": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "10247": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10248": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "10249": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "10251": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP5",
      "path": "45"
    },
    "10252": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10253": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "10254": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10255": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "10256": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "10257": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "10258": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10259": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "10260": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "10262": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "10263": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "10264": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10265": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "10266": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "10267": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP6",
      "path": "45"
    },
    "10268": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10269": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "10270": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP1",
      "path": "45"
    },
    "10271": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10272": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10273": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "10275": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10276": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "10277": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1EE8"
    },
    "10280": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "10281": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP2",
      "path": "45"
    },
    "10282": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP2",
      "path": "45"
    },
    "10283": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10284": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "10285": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP4",
      "path": "45"
    },
    "10286": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "DUP3",
      "path": "45"
    },
    "10287": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10288": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "10289": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "10291": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "ADD",
      "path": "45"
    },
    "10292": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1ED0"
    },
    "10295": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "JUMP",
      "path": "45"
    },
    "10296": {
      "fn": "SushiToken.safe32",
      "offset": [
        10684,
        10716
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "10297": {
      "op": "POP"
    },
    "10298": {
      "fn": "SushiToken.safe32",
      "offset": [
        10740,
        10741
      ],
      "op": "SWAP2",
      "path": "45",
      "statement": 111
    },
    "10299": {
      "fn": "SushiToken.safe32",
      "offset": [
        10740,
        10741
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "10300": {
      "fn": "SushiToken.safe32",
      "offset": [
        10591,
        10749
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "10301": {
      "op": "POP"
    },
    "10302": {
      "op": "POP"
    },
    "10303": {
      "fn": "SushiToken.safe32",
      "jump": "o",
      "offset": [
        10591,
        10749
      ],
      "op": "JUMP",
      "path": "45"
    },
    "10304": {
      "op": "JUMPDEST"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10307": {
      "op": "DUP1"
    },
    "10308": {
      "op": "MLOAD"
    },
    "10309": {
      "op": "DUP1"
    },
    "10310": {
      "op": "DUP3"
    },
    "10311": {
      "op": "ADD"
    },
    "10312": {
      "op": "SWAP1"
    },
    "10313": {
      "op": "SWAP2"
    },
    "10314": {
      "op": "MSTORE"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10317": {
      "op": "DUP1"
    },
    "10318": {
      "op": "DUP3"
    },
    "10319": {
      "op": "MSTORE"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10322": {
      "op": "DUP3"
    },
    "10323": {
      "op": "ADD"
    },
    "10324": {
      "op": "MSTORE"
    },
    "10325": {
      "op": "SWAP1"
    },
    "10326": {
      "op": "JUMP"
    },
    "10327": {
      "op": "JUMPDEST"
    },
    "10328": {
      "op": "DUP3"
    },
    "10329": {
      "op": "DUP1"
    },
    "10330": {
      "op": "SLOAD"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10333": {
      "op": "DUP2"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10336": {
      "op": "AND"
    },
    "10337": {
      "op": "ISZERO"
    },
    "10338": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10341": {
      "op": "MUL"
    },
    "10342": {
      "op": "SUB"
    },
    "10343": {
      "op": "AND"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10346": {
      "op": "SWAP1"
    },
    "10347": {
      "op": "DIV"
    },
    "10348": {
      "op": "SWAP1"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10351": {
      "op": "MSTORE"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10356": {
      "op": "KECCAK256"
    },
    "10357": {
      "op": "SWAP1"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10360": {
      "op": "ADD"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10363": {
      "op": "SWAP1"
    },
    "10364": {
      "op": "DIV"
    },
    "10365": {
      "op": "DUP2"
    },
    "10366": {
      "op": "ADD"
    },
    "10367": {
      "op": "SWAP3"
    },
    "10368": {
      "op": "DUP3"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10371": {
      "op": "LT"
    },
    "10372": {
      "op": "PUSH2",
      "value": "0x2898"
    },
    "10375": {
      "op": "JUMPI"
    },
    "10376": {
      "op": "DUP1"
    },
    "10377": {
      "op": "MLOAD"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10380": {
      "op": "NOT"
    },
    "10381": {
      "op": "AND"
    },
    "10382": {
      "op": "DUP4"
    },
    "10383": {
      "op": "DUP1"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "OR"
    },
    "10386": {
      "op": "DUP6"
    },
    "10387": {
      "op": "SSTORE"
    },
    "10388": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10391": {
      "op": "JUMP"
    },
    "10392": {
      "op": "JUMPDEST"
    },
    "10393": {
      "op": "DUP3"
    },
    "10394": {
      "op": "DUP1"
    },
    "10395": {
      "op": "ADD"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10398": {
      "op": "ADD"
    },
    "10399": {
      "op": "DUP6"
    },
    "10400": {
      "op": "SSTORE"
    },
    "10401": {
      "op": "DUP3"
    },
    "10402": {
      "op": "ISZERO"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10406": {
      "op": "JUMPI"
    },
    "10407": {
      "op": "SWAP2"
    },
    "10408": {
      "op": "DUP3"
    },
    "10409": {
      "op": "ADD"
    },
    "10410": {
      "op": "JUMPDEST"
    },
    "10411": {
      "op": "DUP3"
    },
    "10412": {
      "op": "DUP2"
    },
    "10413": {
      "op": "GT"
    },
    "10414": {
      "op": "ISZERO"
    },
    "10415": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10418": {
      "op": "JUMPI"
    },
    "10419": {
      "op": "DUP3"
    },
    "10420": {
      "op": "MLOAD"
    },
    "10421": {
      "op": "DUP3"
    },
    "10422": {
      "op": "SSTORE"
    },
    "10423": {
      "op": "SWAP2"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "SWAP2"
    },
    "10428": {
      "op": "SWAP1"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "SWAP1"
    },
    "10433": {
      "op": "PUSH2",
      "value": "0x28AA"
    },
    "10436": {
      "op": "JUMP"
    },
    "10437": {
      "op": "JUMPDEST"
    },
    "10438": {
      "op": "POP"
    },
    "10439": {
      "op": "PUSH2",
      "value": "0x28D1"
    },
    "10442": {
      "op": "SWAP3"
    },
    "10443": {
      "op": "SWAP2"
    },
    "10444": {
      "op": "POP"
    },
    "10445": {
      "op": "PUSH2",
      "value": "0x28D5"
    },
    "10448": {
      "op": "JUMP"
    },
    "10449": {
      "op": "JUMPDEST"
    },
    "10450": {
      "op": "POP"
    },
    "10451": {
      "op": "SWAP1"
    },
    "10452": {
      "op": "JUMP"
    },
    "10453": {
      "op": "JUMPDEST"
    },
    "10454": {
      "op": "JUMPDEST"
    },
    "10455": {
      "op": "DUP1"
    },
    "10456": {
      "op": "DUP3"
    },
    "10457": {
      "op": "GT"
    },
    "10458": {
      "op": "ISZERO"
    },
    "10459": {
      "op": "PUSH2",
      "value": "0x28D1"
    },
    "10462": {
      "op": "JUMPI"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10465": {
      "op": "DUP2"
    },
    "10466": {
      "op": "SSTORE"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10469": {
      "op": "ADD"
    },
    "10470": {
      "op": "PUSH2",
      "value": "0x28D6"
    },
    "10473": {
      "op": "JUMP"
    }
  },
  "sha1": "cd85ff12c29c7839dc461f4bcc8aedd4c1d67d90",
  "source": "pragma solidity 0.6.12;\n\nimport \"./ERC20.sol\";\nimport \"../interfaces/IMisoToken.sol\";\nimport \"../OpenZeppelin/access/AccessControl.sol\";\n\n// ---------------------------------------------------------------------\n//\n// SushiToken with Governance.\n//\n// From the MISO Token Factory\n// Made for Sushi.com \n// \n// Enjoy. (c) Chef Gonpachi 2021 \n// <https://github.com/chefgonpachi/MISO/>\n//\n// ---------------------------------------------------------------------\n// SPDX-License-Identifier: GPL-3.0                        \n// ---------------------------------------------------------------------\n\ncontract SushiToken is IMisoToken, AccessControl, ERC20 {\n    /// @notice Miso template id for the token factory.\n    /// @dev For different token types, this must be incremented.\n    uint256 public constant override tokenTemplate = 3;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    function initToken(string memory _name, string memory _symbol, address _owner, uint256 _initialSupply) public {\n        _initERC20(_name, _symbol);\n        _setupRole(DEFAULT_ADMIN_ROLE, _owner);\n        _setupRole(MINTER_ROLE, _owner);\n        _mint(msg.sender, _initialSupply);\n    }\n\n    function init(bytes calldata _data) external override payable {}\n\n    function initToken(\n        bytes calldata _data\n    ) public override {\n        (string memory _name,\n        string memory _symbol,\n        address _owner,\n        uint256 _initialSupply) = abi.decode(_data, (string, string, address, uint256));\n\n        initToken(_name,_symbol,_owner,_initialSupply);\n    }\n\n    /** \n     * @dev Generates init data for Token Factory\n     * @param _name - Token name\n     * @param _symbol - Token symbol\n     * @param _owner - Contract owner\n     * @param _initialSupply Amount of tokens minted on creation\n     */\n    function getInitData(\n        string calldata _name,\n        string calldata _symbol,\n        address _owner,\n        uint256 _initialSupply\n    )\n        external\n        pure\n        returns (bytes memory _data)\n    {\n        return abi.encode(_name, _symbol, _owner, _initialSupply);\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public  {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"SushiToken: must have minter role to mint\");\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public sigNonces;\n\n    /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\n        require(nonce == sigNonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        if (currentDelegate != delegatee){\n            uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\n            _delegates[delegator] = delegatee;\n\n            emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n            _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n        }\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n    \n    /**\n     * @inheritdoc ERC20\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override { \n        _moveDelegates(from, _delegates[to], amount);\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourceMap": "593:10570:45:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Tokens/SushiToken.sol",
  "type": "contract"
}